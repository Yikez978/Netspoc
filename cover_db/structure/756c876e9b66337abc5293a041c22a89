{"pod":[[94,"new_from_file"],[102,"new_from_handle"],[114,"new_from_module"],[193,"provides"],[231,"package_versions_from_directory"],[435,"find_module_by_name"],[441,"find_module_dir_by_name"],[756,"name"],[758,"filename"],[759,"packages_inside"],[760,"pod_inside"],[761,"contains_pod"],[764,"version"],[776,"pod"]],"subroutine":[[12,"BEGIN"],[13,"BEGIN"],[18,"BEGIN"],[19,"BEGIN"],[20,"BEGIN"],[21,"BEGIN"],[23,"BEGIN"],[29,"BEGIN"],[728,"BEGIN"],["671","BEGIN"],["671","BEGIN"],["671","BEGIN"],["671","BEGIN"],[26,"__ANON__"],[94,"new_from_file"],[102,"new_from_handle"],[114,"new_from_module"],[193,"provides"],[231,"package_versions_from_directory"],[240,"__ANON__"],[294,"__ANON__"],[313,"__ANON__"],[335,"__ANON__"],[360,"_init"],[418,"_do_find_module"],[435,"find_module_by_name"],[441,"find_module_dir_by_name"],[449,"_parse_version_expression"],[465,"_parse_file"],[479,"_handle_bom"],[515,"_parse_fh"],[644,"_evaluate_version_line"],[735,"_dwim_version"],[756,"name"],[758,"filename"],[759,"packages_inside"],[760,"pod_inside"],[761,"contains_pod"],[764,"version"],[776,"pod"]],"statement":[12,12,12,13,13,13,18,18,18,19,19,19,20,20,20,21,21,21,23,24,26,26,29,29,29,728,728,728,"671","671","671","671","671","671","671","671","671","671","671","671","671","671","671",94,95,97,98,102,103,104,105,106,108,114,115,116,118,119,120,121,193,195,196,198,201,205,204,207,209,210,211,214,216,220,221,222,223,227,231,233,235,236,242,240,248,249,250,251,252,254,256,257,258,259,261,263,264,265,266,268,269,270,273,273,284,285,287,289,297,294,303,307,316,313,322,323,333,337,335,342,343,350,351,354,360,361,362,363,365,366,367,368,369,369,371,384,386,387,390,393,394,395,396,397,397,398,401,401,402,405,410,413,418,419,420,422,423,424,425,427,430,435,436,441,442,449,450,452,453,454,455,456,457,461,465,467,468,471,473,479,481,482,484,485,486,488,489,490,492,494,495,496,497,501,502,504,507,511,515,517,518,519,520,521,522,524,525,527,531,532,533,536,537,540,542,543,544,545,546,548,551,557,558,559,561,566,569,572,573,574,576,579,584,585,586,587,588,592,593,595,596,602,603,605,606,610,611,612,616,617,621,622,631,632,635,636,637,638,644,645,651,652,653,667,669,671,674,675,676,678,680,682,682,683,687,687,689,692,735,737,739,740,741,742,742,743,744,747,749,756,758,759,759,760,760,761,761,764,765,766,767,769,771,776,777,778,780,782],"start":{"29":{"BEGIN":[{"statement":22,"condition":null,"time":null,"subroutine":7,"pod":null,"branch":1}]},"760":{"pod_inside":[{"statement":293,"condition":28,"time":null,"subroutine":36,"branch":88,"pod":10}]},"728":{"BEGIN":[{"time":null,"statement":25,"condition":null,"branch":1,"pod":null,"subroutine":8}]},"758":{"filename":[{"time":null,"condition":28,"statement":290,"pod":8,"branch":88,"subroutine":34}]},"13":{"BEGIN":[{"time":null,"statement":3,"condition":null,"pod":null,"branch":null,"subroutine":1}]},"360":{"_init":[{"branch":29,"pod":5,"subroutine":23,"time":null,"condition":7,"statement":124}]},"465":{"_parse_file":[{"time":null,"statement":174,"condition":12,"branch":43,"pod":7,"subroutine":28}]},"644":{"_evaluate_version_line":[{"statement":258,"condition":26,"time":null,"subroutine":31,"pod":7,"branch":78}]},"18":{"BEGIN":[{"branch":null,"pod":null,"subroutine":2,"time":null,"statement":6,"condition":null}]},"418":{"_do_find_module":[{"subroutine":24,"pod":5,"branch":35,"condition":9,"statement":152,"time":null}]},"761":{"contains_pod":[{"subroutine":37,"branch":88,"pod":11,"condition":28,"statement":295,"time":null}]},"441":{"find_module_dir_by_name":[{"statement":163,"condition":12,"time":null,"subroutine":26,"branch":38,"pod":6}]},"20":{"BEGIN":[{"branch":null,"pod":null,"subroutine":4,"time":null,"statement":12,"condition":null}]},"193":{"provides":[{"branch":4,"pod":3,"subroutine":17,"time":null,"statement":60,"condition":4}]},"756":{"name":[{"subroutine":33,"pod":7,"branch":88,"condition":28,"statement":289,"time":null}]},"26":{"__ANON__":[{"subroutine":13,"branch":1,"pod":null,"statement":43,"condition":null,"time":null}]},"764":{"version":[{"subroutine":38,"branch":88,"pod":12,"condition":28,"statement":297,"time":null}]},"449":{"_parse_version_expression":[{"subroutine":27,"branch":39,"pod":7,"condition":12,"statement":165,"time":null}]},"-1":{"__COVER__":[{"time":null,"statement":308,"condition":33,"branch":90,"pod":14,"subroutine":40}]},"23":{"BEGIN":[{"time":null,"statement":18,"condition":null,"branch":null,"pod":null,"subroutine":6}]},"479":{"_handle_bom":[{"statement":179,"condition":12,"time":null,"subroutine":29,"branch":44,"pod":7}]},"776":{"pod":[{"subroutine":39,"pod":13,"branch":89,"statement":303,"condition":31,"time":null}]},"759":{"packages_inside":[{"subroutine":35,"pod":9,"branch":88,"statement":291,"condition":28,"time":null}]},"335":{"__ANON__":[{"pod":5,"branch":29,"subroutine":22,"time":null,"condition":7,"statement":124}]},"12":{"BEGIN":[{"subroutine":null,"branch":null,"pod":null,"statement":null,"condition":null,"time":null}]},"21":{"BEGIN":[{"subroutine":5,"branch":null,"pod":null,"statement":15,"condition":null,"time":null}]},"19":{"BEGIN":[{"condition":null,"statement":9,"time":null,"subroutine":3,"branch":null,"pod":null}]},"435":{"find_module_by_name":[{"time":null,"condition":12,"statement":161,"pod":5,"branch":37,"subroutine":25}]},"515":{"_parse_fh":[{"subroutine":30,"pod":7,"branch":53,"condition":15,"statement":198,"time":null}]},"240":{"__ANON__":[{"statement":124,"condition":7,"time":null,"subroutine":19,"branch":29,"pod":5}]},"313":{"__ANON__":[{"statement":124,"condition":7,"time":null,"subroutine":21,"branch":29,"pod":5}]},"94":{"new_from_file":[{"condition":null,"statement":43,"time":null,"subroutine":14,"pod":null,"branch":1}]},"294":{"__ANON__":[{"time":null,"statement":124,"condition":7,"branch":29,"pod":5,"subroutine":20}]},"735":{"_dwim_version":[{"time":null,"condition":27,"statement":278,"branch":84,"pod":7,"subroutine":32}]},"231":{"package_versions_from_directory":[{"time":null,"condition":5,"statement":78,"branch":12,"pod":4,"subroutine":18}]},"671":{"BEGIN":[{"condition":null,"statement":28,"time":null,"subroutine":9,"branch":1,"pod":null},{"condition":null,"statement":31,"time":null,"subroutine":10,"pod":null,"branch":1},{"branch":1,"pod":null,"subroutine":11,"time":null,"statement":34,"condition":null},{"subroutine":12,"pod":null,"branch":1,"condition":null,"statement":37,"time":null}]},"102":{"new_from_handle":[{"branch":2,"pod":1,"subroutine":15,"time":null,"statement":47,"condition":1}]},"114":{"new_from_module":[{"subroutine":16,"pod":2,"branch":3,"statement":53,"condition":2,"time":null}]}},"branch":[[23,{"text":"if ($INC{'Log/Contextual.pm'}) { }"}],[97,{"text":"unless defined $filename and -f $filename"}],[105,{"text":"unless defined $handle and defined $filename"}],[120,{"text":"unless defined $filename and -f $filename"}],[195,{"text":"if @_ % 2"}],[198,{"text":"if $args{'dir'} and $args{'files'}"}],[201,{"text":"unless defined $args{'version'}"}],[205,{"text":"unless grep {$args{'version'} eq $_;} '1.4', '2'"}],[207,{"text":"unless defined $args{'prefix'}"}],[214,{"text":"unless ref $args{'files'} eq 'ARRAY'"}],[210,{"text":"if ($args{'dir'}) { }"}],[220,{"text":"if (length $args{'prefix'})"}],[240,{"text":"if -f $_ and /\\.pm$/"}],[235,{"text":"if ($files) { }"}],[257,{"text":"if $package eq 'main'"}],[258,{"text":"if $package eq 'DB'"}],[259,{"text":"if grep /^_/, split(/::/, $package, 0)"}],[263,{"text":"if lc $prime_package eq lc $package"}],[268,{"text":"if lc \"$package.pm\" eq lc $mapped_filename"}],[270,{"text":"if defined $version"}],[265,{"text":"if (exists $prime{$package}) { }"}],[264,{"text":"if ($package eq $prime_package) { }"}],[307,{"text":"if (&$compare_versions($prime{$package}{'version'}, '!=', $$result{'version'}))"}],[303,{"text":"if (exists $prime{$package}{'version'} and defined $prime{$package}{'version'}) { }"}],[289,{"text":"if ($$result{'err'}) { }"}],[289,{"text":"elsif (defined $$result{'version'}) { }"}],[333,{"text":"if ($$result{'err'})"}],[343,{"text":"if defined $$result{'version'}"}],[287,{"text":"if (exists $prime{$package}) { }"}],[369,{"text":"if scalar %props"}],[386,{"text":"if ($handle) { }"}],[401,{"text":"if (grep /main/, @{$$self{'packages'};}) { }"}],[395,{"text":"if ($f =~ /\\.pm$/) { }"}],[393,{"text":"unless ($$self{'module'} and length $$self{'module'})"}],[410,{"text":"if defined $$self{'module'}"}],[425,{"text":"if -e $testfile and not -d _"}],[427,{"text":"if -e \"$testfile.pm\""}],[435,{"text":"unless my $found = (shift())->_do_find_module(@_)"}],[441,{"text":"unless my $found = (shift())->_do_find_module(@_)"}],[454,{"text":"$2 ? :"}],[456,{"text":"$pkg eq '::' ? :"}],[455,{"text":"if ($pkg)"}],[453,{"text":"if ($line =~ /$VERS_REGEXP/o)"}],[468,{"text":"unless my $fh = 'IO::File'->new($filename)"}],[482,{"text":"unless defined $pos"}],[486,{"text":"unless defined $count and $count >= 2"}],[496,{"text":"if (defined $count and $count >= 1 and $buf eq \"\\277\")"}],[489,{"text":"if ($buf eq \"\\376\\377\") { }"}],[489,{"text":"elsif ($buf eq \"\\377\\376\") { }"}],[489,{"text":"elsif ($buf eq \"\\357\\273\") { }"}],[502,{"text":"if (\"$]\" >= 5.008)"}],[507,{"text":"unless $fh->setpos($pos)"}],[501,{"text":"if (defined $encoding) { }"}],[532,{"text":"if ($line =~ /^=([a-zA-Z].*)/)"}],[544,{"text":"if ($$self{'collect_pod'} and length $pod_data)"}],[542,{"text":"if ($line =~ /^=head[1-4]\\s+(.+)\\s*$/) { }"}],[542,{"text":"elsif ($$self{'collect_pod'}) { }"}],[557,{"text":"if ($$self{'collect_pod'} and length $pod_data)"}],[566,{"text":"if $in_end"}],[569,{"text":"if $line =~ /^\\s*#/"}],[572,{"text":"if ($line eq '__END__')"}],[576,{"text":"if $line eq '__DATA__'"}],[579,{"text":"$line =~ /VERSION/ ? :"}],[586,{"text":"unless grep(($pkg eq $_), @pkgs)"}],[587,{"text":"unless exists $vers{$pkg}"}],[588,{"text":"defined $2 ? :"}],[592,{"text":"unless grep(($vers_pkg eq $_), @pkgs)"}],[593,{"text":"if $vers_pkg eq $pkg"}],[595,{"text":"unless (defined $vers{$vers_pkg} and length $vers{$vers_pkg})"}],[621,{"text":"unless (defined $vers{$pkg} and length $vers{$pkg})"}],[584,{"text":"if ($line =~ /$PKG_REGEXP/o) { }"}],[584,{"text":"elsif ($vers_fullname and $vers_pkg) { }"}],[584,{"text":"elsif (not exists $vers{'main'} and $pkg eq 'main' and $vers_fullname) { }"}],[584,{"text":"elsif (not exists $vers{'main'} and $pkg eq 'main' and $line =~ /\\w+/) { }"}],[584,{"text":"elsif ($vers_fullname and $need_vers) { }"}],[540,{"text":"if ($in_pod) { }"}],[540,{"text":"elsif ($is_cut) { }"}],[631,{"text":"if ($$self{'collect_pod'} and length $pod_data)"}],[667,{"text":"if $eval =~ /^(.+)/s"}],[674,{"text":"if ($@ =~ /Can't locate/ and -d 'lib')"}],[678,{"text":"if $@"}],[680,{"text":"unless ref $vsub eq 'CODE'"}],[683,{"text":"if $@"}],[689,{"text":"unless defined $version"}],[737,{"text":"if ref $result eq 'version'"}],[743,{"text":"if $@"}],[744,{"text":"if defined $version"}],[747,{"text":"unless defined $version"}],[767,{"text":"if (defined $mod and length $mod and exists $$self{'versions'}{$mod}) { }"}],[778,{"text":"if (defined $sect and length $sect and exists $$self{'pod'}{$sect}) { }"}]],"digest":"756c876e9b66337abc5293a041c22a89","condition":[[97,{"op":"and","right":"-f $filename","left":"defined $filename","type":"and_3"}],[105,{"right":"defined $filename","op":"and","left":"defined $handle","type":"and_3"}],[118,{"type":"or_2","left":"$props{'inc'}","op":"||=","right":"\\@INC"}],[120,{"type":"and_3","left":"defined $filename","right":"-f $filename","op":"and"}],[198,{"right":"$args{'files'}","op":"and","type":"and_3","left":"$args{'dir'}"}],[240,{"type":"and_3","left":"-f $_","op":"and","right":"/\\.pm$/"}],[303,{"op":"and","right":"defined $prime{$package}{'version'}","type":"and_3","left":"exists $prime{$package}{'version'}"}],[393,{"type":"and_3","left":"$$self{'module'}","op":"and","right":"length $$self{'module'}"}],[405,{"right":"''","op":"||","left":"$$self{'packages'}[0]","type":"or_2"}],[419,{"type":"or_3","left":"shift()","right":"croak('find_module_by_name() requires a package name')","op":"||"}],[420,{"left":"shift()","type":"or_2","op":"||","right":"\\@INC"}],[425,{"right":"not -d _","op":"and","type":"and_3","left":"-e $testfile"}],[486,{"type":"and_3","left":"defined $count","right":"$count >= 2","op":"and"}],[496,{"op":"and","right":"$count >= 1","type":"and_3","left":"defined $count"}],[496,{"left":"defined $count and $count >= 1","type":"and_3","right":"$buf eq \"\\277\"","op":"and"}],[544,{"op":"and","right":"length $pod_data","left":"$$self{'collect_pod'}","type":"and_3"}],[557,{"type":"and_3","left":"$$self{'collect_pod'}","op":"and","right":"length $pod_data"}],[584,{"right":"$vers_pkg","op":"and","left":"$vers_fullname","type":"and_3"}],[595,{"left":"defined $vers{$vers_pkg}","type":"and_3","op":"and","right":"length $vers{$vers_pkg}"}],[584,{"type":"and_3","left":"not exists $vers{'main'}","right":"$pkg eq 'main'","op":"and"}],[584,{"op":"and","right":"$vers_fullname","left":"not exists $vers{'main'} and $pkg eq 'main'","type":"and_3"}],[584,{"left":"not exists $vers{'main'}","type":"and_3","right":"$pkg eq 'main'","op":"and"}],[584,{"left":"not exists $vers{'main'} and $pkg eq 'main'","type":"and_3","right":"$line =~ /\\w+/","op":"and"}],[584,{"right":"$need_vers","op":"and","type":"and_3","left":"$vers_fullname"}],[621,{"right":"length $vers{$pkg}","op":"and","type":"and_3","left":"defined $vers{$pkg}"}],[631,{"type":"and_3","left":"$$self{'collect_pod'}","right":"length $pod_data","op":"and"}],[674,{"right":"-d 'lib'","op":"and","left":"$@ =~ /Can't locate/","type":"and_3"}],[743,{"type":"or_3","left":"$error","right":"$@","op":"||="}],[765,{"left":"shift()","type":"or_3","op":"||","right":"$$self{'module'}"}],[767,{"type":"and_3","left":"defined $mod","right":"length $mod","op":"and"}],[767,{"op":"and","right":"exists $$self{'versions'}{$mod}","type":"and_3","left":"defined $mod and length $mod"}],[778,{"right":"length $sect","op":"and","type":"and_3","left":"defined $sect"}],[778,{"right":"exists $$self{'pod'}{$sect}","op":"and","left":"defined $sect and length $sect","type":"and_3"}]],"file":"/usr/local/lib/perl5/5.20.1/Module/Metadata.pm"}