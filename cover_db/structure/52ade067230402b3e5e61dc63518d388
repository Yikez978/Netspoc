{"subroutine":[[37,"_carp"],[42,"_croak"],[47,"_error"],[62,"make_path"],[67,"mkpath"],[118,"_mkpath"],[165,"remove_tree"],[170,"_is_subdir"],[188,"rmtree"],[258,"_rmtree"],[444,"_slash_lc"]],"pod":[[62,"make_path"],[67,"mkpath"],[165,"remove_tree"],[188,"rmtree"]],"statement":[37,38,42,43,47,48,49,51,52,53,54,54,54,57,62,63,67,69,72,73,74,75,76,77,80,81,82,83,83,84,85,86,87,88,89,92,93,96,97,98,99,102,103,106,107,109,110,112,114,118,119,121,122,123,124,126,127,128,130,131,132,133,135,136,137,138,140,141,146,147,148,150,151,152,153,153,153,156,161,165,166,170,172,173,176,178,179,182,184,188,190,193,194,195,196,197,199,200,203,204,208,209,209,210,210,211,214,215,217,218,219,220,222,222,222,224,226,227,228,229,230,231,232,233,236,237,238,241,244,246,249,249,250,251,254,258,259,261,262,263,265,267,274,279,281,282,284,287,288,289,290,291,294,295,299,300,301,304,305,309,310,317,318,319,322,323,324,325,326,330,330,330,333,333,333,336,338,341,345,345,348,348,350,352,353,353,355,361,362,366,371,374,375,379,380,382,383,385,386,388,389,390,390,390,391,394,395,397,404,409,413,414,417,418,419,421,423,424,425,425,425,428,429,431,433,434,438,444,445,446],"start":{"-1":{"__COVER__":[{"subroutine":11,"pod":4,"branch":94,"condition":32,"statement":230,"time":null}]},"37":{"_carp":[{"branch":null,"pod":null,"subroutine":null,"time":null,"statement":null,"condition":null}]},"67":{"mkpath":[{"time":null,"condition":1,"statement":16,"branch":5,"pod":1,"subroutine":4}]},"258":{"_rmtree":[{"time":null,"condition":13,"statement":135,"pod":4,"branch":51,"subroutine":9}]},"444":{"_slash_lc":[{"subroutine":10,"pod":4,"branch":94,"condition":32,"statement":227,"time":null}]},"170":{"_is_subdir":[{"time":null,"statement":81,"condition":10,"pod":3,"branch":33,"subroutine":7}]},"118":{"_mkpath":[{"time":null,"condition":6,"statement":49,"pod":2,"branch":19,"subroutine":5}]},"47":{"_error":[{"time":null,"statement":4,"condition":null,"pod":null,"branch":null,"subroutine":2}]},"188":{"rmtree":[{"branch":35,"pod":3,"subroutine":8,"time":null,"condition":10,"statement":89}]},"62":{"make_path":[{"pod":null,"branch":4,"subroutine":3,"time":null,"statement":14,"condition":null}]},"42":{"_croak":[{"time":null,"condition":null,"statement":2,"pod":null,"branch":null,"subroutine":1}]},"165":{"remove_tree":[{"statement":79,"condition":9,"time":null,"subroutine":6,"branch":32,"pod":2}]}},"branch":[[52,{"text":"unless defined $object"}],[53,{"text":"if $!"}],[57,{"text":"defined $object ? :"}],[51,{"text":"if ($$arg{'error'}) { }"}],[62,{"text":"unless @_ and UNIVERSAL::isa($_[-1], 'HASH')"}],[75,{"text":"unless UNIVERSAL::isa($paths, 'ARRAY')"}],[77,{"text":"defined $mode ? :"}],[81,{"text":"if exists $$arg{'mask'}"}],[82,{"text":"unless exists $$arg{'mode'}"}],[83,{"text":"if exists $$arg{'error'}"}],[84,{"text":"if exists $$arg{'user'}"}],[85,{"text":"if exists $$arg{'uid'}"}],[88,{"text":"if (defined $uid) { }"}],[86,{"text":"if (exists $$arg{'owner'} and $$arg{'owner'} =~ /\\D/)"}],[98,{"text":"if (defined $gid) { }"}],[96,{"text":"if (exists $$arg{'group'} and $$arg{'group'} =~ /\\D/)"}],[106,{"text":"if (exists $$arg{'owner'} and not exists $$arg{'group'})"}],[109,{"text":"if (exists $$arg{'group'} and not exists $$arg{'owner'})"}],[72,{"text":"if ($old_style) { }"}],[123,{"text":"unless defined $path and length $path"}],[124,{"text":"if $^O eq 'os2' and $path =~ /^\\w:\\z/s"}],[127,{"text":"if $path eq '/'"}],[126,{"text":"if ($Is_VMS)"}],[130,{"text":"if -d $path"}],[132,{"text":"unless (-d $parent or $path eq $parent)"}],[135,{"text":"if $$arg{'verbose'}"}],[140,{"text":"unless (chown $$arg{'owner'}, $$arg{'group'}, $path)"}],[138,{"text":"if (exists $$arg{'owner'})"}],[148,{"text":"if $e ne $e1"}],[152,{"text":"if ($$arg{'error'}) { }"}],[150,{"text":"unless (-d $path)"}],[136,{"text":"if (mkdir $path, $$arg{'mode'}) { }"}],[165,{"text":"unless @_ and UNIVERSAL::isa($_[-1], 'HASH')"}],[176,{"text":"if $dv ne $tv"}],[182,{"text":"if @t < @d"}],[197,{"text":"defined $safe ? :"}],[200,{"text":"unless UNIVERSAL::isa($paths, 'ARRAY')"}],[199,{"text":"if (defined $paths and length $paths) { }"}],[209,{"text":"if exists $$arg{'error'}"}],[210,{"text":"if exists $$arg{'result'}"}],[193,{"text":"if ($old_style) { }"}],[218,{"text":"unless ($$arg{'cwd'} = getcwd())"}],[226,{"text":"$^O eq 'MSWin32' ? :"}],[227,{"text":"$^O eq 'MSWin32' ? :"}],[229,{"text":"if $^O eq 'VMS'"}],[230,{"text":"if ($ortho_root_length and _is_subdir($ortho_root, $ortho_cwd))"}],[237,{"text":"unless $p =~ /:/"}],[238,{"text":"unless $p =~ /:\\z/"}],[236,{"text":"if ($Is_MacOS) { }"}],[236,{"text":"elsif ($^O eq 'MSWin32') { }"}],[249,{"text":"unless (@{$arg;}{'device', 'inode', 'perm'} = (lstat $$arg{'cwd'})[0, 1])"}],[274,{"text":"$$arg{'prefix'} ? :"}],[279,{"text":"unless my($ldev, $lino, $perm) = (lstat $root)[0, 1, 2]"}],[282,{"text":"if $Is_VMS"}],[289,{"text":"if (not $$arg{'safe'} || $nperm == $perm || chmod($nperm, $root)) { }"}],[289,{"text":"elsif (not chdir $root) { }"}],[284,{"text":"unless (chdir $root)"}],[299,{"text":"unless (my($cur_dev, $cur_inode, $perm) = (stat $curdir)[0, 1, 2])"}],[305,{"text":"unless $ldev eq $cur_dev and $lino eq $cur_inode"}],[304,{"text":"if ($Need_Stat_Check)"}],[317,{"text":"unless ($$arg{'safe'} or $nperm == $perm or chmod $nperm, $curdir)"}],[323,{"text":"if $] < 5.006"}],[330,{"text":"if (not defined ${\"\\cTAINT\";} or ${\"\\cTAINT\";}) { }"}],[324,{"text":"if (not opendir($d, $curdir)) { }"}],[345,{"text":"$_ eq '.' ? :"}],[341,{"text":"if ($Is_VMS)"}],[348,{"text":"if $_ ne $updir"}],[350,{"text":"if (@files)"}],[361,{"text":"if ($nperm != $perm and not chmod($perm, $curdir))"}],[366,{"text":"unless chdir $$arg{'cwd'}"}],[371,{"text":"unless ($cur_dev, $cur_inode) = (stat $curdir)[0, 1]"}],[375,{"text":"unless $$arg{'device'} eq $cur_dev and $$arg{'inode'} eq $cur_inode"}],[374,{"text":"if ($Need_Stat_Check)"}],[380,{"text":"$Is_VMS ? :"}],[382,{"text":"if $$arg{'verbose'}"}],[380,{"text":"if ($$arg{'safe'} and $Is_VMS ? !&VMS::Filespec::candelete($root) : !(-w $root))"}],[385,{"text":"if ($Force_Writeable and not chmod($perm | 448, $root))"}],[388,{"text":"if $$arg{'verbose'}"}],[390,{"text":"if $$arg{'result'}"}],[395,{"text":"$Is_VMS ? :"}],[395,{"text":"if ($Force_Writeable and not chmod($perm, $Is_VMS ? VMS::Filespec::fileify($root) : $root))"}],[389,{"text":"if (rmdir $root) { }"}],[379,{"text":"if ($$arg{'depth'} or not $$arg{'keep_root'})"}],[404,{"text":"if $Is_VMS and not 'File::Spec'->file_name_is_absolute($root) and not $root =~ /(?<!\\^)[\\]>]+/"}],[409,{"text":"$Is_VMS ? :"}],[413,{"text":"if $$arg{'verbose'}"}],[409,{"text":"if ($$arg{'safe'} and $Is_VMS ? !&VMS::Filespec::candelete($root) : !(-l $root || -w $root))"}],[418,{"text":"if ($Force_Writeable and $nperm != $perm and not chmod($nperm, $root))"}],[421,{"text":"if $$arg{'verbose'}"}],[425,{"text":"if $$arg{'result'}"}],[429,{"text":"unless $Force_Writeable and chmod $perm, $root"}],[424,{"text":"if (unlink $root) { }"}],[434,{"text":"unless $Is_VMS and lstat $root"}],[281,{"text":"if (-d _) { }"}]],"condition":[[62,{"right":"UNIVERSAL::isa($_[-1], 'HASH')","op":"and","type":"and_3","left":"@_"}],[67,{"right":"UNIVERSAL::isa($_[-1], 'HASH')","op":"&&","left":"@_","type":"and_3"}],[86,{"right":"$$arg{'owner'} =~ /\\D/","op":"and","left":"exists $$arg{'owner'}","type":"and_3"}],[96,{"right":"$$arg{'group'} =~ /\\D/","op":"and","type":"and_3","left":"exists $$arg{'group'}"}],[106,{"left":"exists $$arg{'owner'}","type":"and_3","right":"not exists $$arg{'group'}","op":"and"}],[109,{"op":"and","right":"not exists $$arg{'owner'}","type":"and_3","left":"exists $$arg{'group'}"}],[123,{"type":"and_3","left":"defined $path","op":"and","right":"length $path"}],[124,{"type":"and_3","left":"$^O eq 'os2'","op":"and","right":"$path =~ /^\\w:\\z/s"}],[132,{"type":"or_3","left":"-d $parent","op":"or","right":"$path eq $parent"}],[165,{"right":"UNIVERSAL::isa($_[-1], 'HASH')","op":"and","type":"and_3","left":"@_"}],[188,{"op":"&&","right":"UNIVERSAL::isa($_[-1], 'HASH')","left":"@_","type":"and_3"}],[199,{"type":"and_3","left":"defined $paths","op":"and","right":"length $paths"}],[230,{"right":"_is_subdir($ortho_root, $ortho_cwd)","op":"and","left":"$ortho_root_length","type":"and_3"}],[289,{"left":"$$arg{'safe'} || $nperm == $perm","type":"or_3","right":"chmod($nperm, $root)","op":"||"}],[305,{"left":"$ldev eq $cur_dev","type":"and_3","right":"$lino eq $cur_inode","op":"and"}],[317,{"left":"$$arg{'safe'}","type":"or_3","right":"$nperm == $perm","op":"or"}],[317,{"op":"or","right":"chmod $nperm, $curdir","left":"$$arg{'safe'} or $nperm == $perm","type":"or_3"}],[330,{"type":"or_3","left":"not defined ${\"\\cTAINT\";}","right":"${\"\\cTAINT\";}","op":"or"}],[361,{"right":"not chmod($perm, $curdir)","op":"and","type":"and_3","left":"$nperm != $perm"}],[375,{"op":"and","right":"$$arg{'inode'} eq $cur_inode","type":"and_3","left":"$$arg{'device'} eq $cur_dev"}],[379,{"type":"or_3","left":"$$arg{'depth'}","right":"not $$arg{'keep_root'}","op":"or"}],[380,{"type":"and_3","left":"$$arg{'safe'}","op":"and","right":"$Is_VMS ? !&VMS::Filespec::candelete($root) : !(-w $root)"}],[385,{"type":"and_3","left":"$Force_Writeable","op":"and","right":"not chmod($perm | 448, $root)"}],[395,{"right":"not chmod($perm, $Is_VMS ? VMS::Filespec::fileify($root) : $root)","op":"and","left":"$Force_Writeable","type":"and_3"}],[404,{"op":"and","right":"not 'File::Spec'->file_name_is_absolute($root)","type":"and_3","left":"$Is_VMS"}],[404,{"type":"and_3","left":"$Is_VMS and not 'File::Spec'->file_name_is_absolute($root)","op":"and","right":"not $root =~ /(?<!\\^)[\\]>]+/"}],[409,{"right":"-w $root","op":"||","left":"-l $root","type":"or_3"}],[409,{"type":"and_3","left":"$$arg{'safe'}","right":"$Is_VMS ? !&VMS::Filespec::candelete($root) : !(-l $root || -w $root)","op":"and"}],[418,{"left":"$Force_Writeable","type":"and_3","right":"$nperm != $perm","op":"and"}],[418,{"right":"not chmod($nperm, $root)","op":"and","left":"$Force_Writeable and $nperm != $perm","type":"and_3"}],[429,{"type":"and_3","left":"$Force_Writeable","right":"chmod $perm, $root","op":"and"}],[434,{"op":"and","right":"lstat $root","left":"$Is_VMS","type":"and_3"}]],"file":"/usr/local/lib/perl5/5.20.1/File/Path.pm","digest":"52ade067230402b3e5e61dc63518d388"}