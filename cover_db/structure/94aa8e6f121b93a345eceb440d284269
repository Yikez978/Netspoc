{"statement":[26,28,28,29,30,34,36,36,37,41,42,43,44,48,49,50,51,53,53,53,54,55,57,58,59,62,63,64,67,68,69,72,74,75,76,77,78,79,81,84,85,86,90,91,92,93,97,98,99,102,103,108,109,115,114,120,121,122,123,123,124,125,125,125,127,131,134,135,136,136,137,139,138,139,140,143,147,148,149,150,150,151,153,152,153,155,157,159,160,164,165,166,166,167,168,169,170,172,173,174,176,177,178,179,180,182,183,183,185,187,191,192,193,194,195,196,197,198,199,201,201,202,205,206,207,208,210,211,215,216,217,218,219,220,221,223,225,226,226,227,228,229,231,235,236,237,238,239,240,241,242,243,245,246,250,251,252,253,254,255,257,259,261,261,262,263,264,266,270,271,272,275,277,278,280,281,284,285,287,288,289,289,291,291,294],"pod":[[26,"rnew"],[34,"new"],[134,"as_string"],[147,"as_HTML"],[164,"diff"],[191,"inh_tree"],[235,"isa_tree"]],"subroutine":[[26,"rnew"],[34,"new"],[41,"_doit"],[48,"_symdump"],[120,"_partdump"],[131,"DESTROY"],[134,"as_string"],[147,"as_HTML"],[164,"diff"],[191,"inh_tree"],[215,"_inh_tree"],[235,"isa_tree"],[250,"_isa_tree"],[270,"AUTOLOAD"]],"digest":"94aa8e6f121b93a345eceb440d284269","condition":[[57,{"right":"defined *ENTRY{'SCALAR'}","op":"and","left":"defined $val","type":"and_3"}],[62,{"left":"defined $val","type":"and_3","op":"and","right":"defined *ENTRY{'ARRAY'}"}],[67,{"right":"defined *ENTRY{'HASH'}","op":"and","left":"defined $val","type":"and_3"}],[67,{"type":"and_3","left":"defined $val and defined *ENTRY{'HASH'}","op":"and","right":"not $key =~ /::/"}],[72,{"right":"defined *ENTRY{'HASH'}","op":"and","left":"defined $val","type":"and_3"}],[72,{"op":"and","right":"$key =~ /::$/","type":"and_3","left":"defined $val and defined *ENTRY{'HASH'}"}],[72,{"right":"$key ne 'main::'","op":"and","left":"defined $val and defined *ENTRY{'HASH'} and $key =~ /::$/","type":"and_3"}],[72,{"left":"defined $val and defined *ENTRY{'HASH'} and $key =~ /::$/ and $key ne 'main::'","type":"and_3","right":"$key ne '<none>::'","op":"and"}],[84,{"left":"defined $val","type":"and_3","op":"and","right":"defined *ENTRY{'CODE'}"}],[91,{"left":"defined $val","type":"and_3","right":"defined *ENTRY{'IO'}","op":"and"}],[115,{"right":"$$self{'RECURS'}","op":"&&","type":"and_3","left":"@todo"}],[178,{"left":"$first{$symbol}","type":"and_3","op":"and","right":"$second{$symbol}"}],[192,{"type":"and_3","left":"ref $self","right":"defined $$self{'INHTREE'}","op":"and"}],[217,{"left":"$depth","type":"or_2","right":"0","op":"||="}],[236,{"left":"ref $self","type":"and_3","right":"defined $$self{'ISATREE'}","op":"and"}],[251,{"op":"||=","right":"0","type":"or_2","left":"$depth"}]],"file":"/usr/local/lib/perl5/site_perl/5.20.1/Devel/Symdump.pm","start":{"48":{"_symdump":[{"statement":13,"condition":null,"time":null,"subroutine":3,"branch":1,"pod":2}]},"191":{"inh_tree":[{"time":null,"statement":110,"condition":12,"pod":5,"branch":20,"subroutine":9}]},"134":{"as_string":[{"time":null,"statement":66,"condition":11,"pod":2,"branch":16,"subroutine":6}]},"215":{"_inh_tree":[{"statement":128,"condition":13,"time":null,"subroutine":10,"pod":6,"branch":22}]},"250":{"_isa_tree":[{"statement":154,"condition":15,"time":null,"subroutine":12,"pod":7,"branch":26}]},"131":{"DESTROY":[{"branch":16,"pod":2,"subroutine":5,"time":null,"condition":11,"statement":65}]},"270":{"AUTOLOAD":[{"time":null,"statement":168,"condition":16,"branch":27,"pod":7,"subroutine":13}]},"26":{"rnew":[{"branch":null,"pod":null,"subroutine":null,"time":null,"statement":null,"condition":null}]},"-1":{"__COVER__":[{"time":null,"statement":185,"condition":16,"branch":31,"pod":7,"subroutine":14}]},"41":{"_doit":[{"pod":2,"branch":null,"subroutine":2,"time":null,"condition":null,"statement":9}]},"235":{"isa_tree":[{"condition":14,"statement":143,"time":null,"subroutine":11,"pod":6,"branch":24}]},"164":{"diff":[{"subroutine":8,"pod":4,"branch":16,"condition":11,"statement":89,"time":null}]},"34":{"new":[{"time":null,"statement":5,"condition":null,"branch":null,"pod":1,"subroutine":1}]},"120":{"_partdump":[{"pod":2,"branch":14,"subroutine":4,"time":null,"condition":11,"statement":55}]},"147":{"as_HTML":[{"statement":76,"condition":11,"time":null,"subroutine":7,"pod":3,"branch":16}]}},"branch":[[42,{"text":"unless @packages"}],[57,{"text":"if (defined $val and defined *ENTRY{'SCALAR'})"}],[62,{"text":"if (defined $val and defined *ENTRY{'ARRAY'})"}],[67,{"text":"if (defined $val and defined *ENTRY{'HASH'} and not $key =~ /::/)"}],[74,{"text":"$pack ne 'main' ? :"}],[78,{"text":"if (++$$self{'SEEN'}{*$val} > $MAX_RECURSION)"}],[72,{"text":"if (defined $val and defined *ENTRY{'HASH'} and $key =~ /::$/ and $key ne 'main::' and $key ne '<none>::')"}],[84,{"text":"if (defined $val and defined *ENTRY{'CODE'})"}],[91,{"text":"if (defined $val and defined *ENTRY{'IO'})"}],[97,{"text":"if (defined fileno ENTRY) { }"}],[97,{"text":"elsif (defined telldir ENTRY) { }"}],[90,{"text":"if ($] > 5.0031) { }"}],[108,{"text":"unless ($gotone)"}],[115,{"text":"@todo && $$self{'RECURS'} ? :"}],[124,{"text":"unless $part eq 'PACKAGES'"}],[125,{"text":"unless $$self{'RESULT'}{$pack}{$part}"}],[178,{"text":"if $first{$symbol} and $second{$symbol}"}],[179,{"text":"unless $second{$symbol}"}],[180,{"text":"unless $first{$symbol}"}],[185,{"text":"if @typediff"}],[192,{"text":"if ref $self and defined $$self{'INHTREE'}"}],[210,{"text":"if ref $self"}],[216,{"text":"unless defined $href"}],[219,{"text":"if ($depth > 100)"}],[236,{"text":"if ref $self and defined $$self{'ISATREE'}"}],[245,{"text":"if ref $self"}],[253,{"text":"if ($depth > 100)"}],[271,{"text":"unless (ref $self)"}],[280,{"text":"unless ($$self{'AUTOLOAD'}{$auto})"}],[288,{"text":"if ($compat eq 'file') { }"}],[285,{"text":"if (defined $compat)"}]]}