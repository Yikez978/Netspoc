{"start":{"16249":{"gen_prt_bintree":[{"subroutine":377,"branch":2152,"pod":323,"condition":454,"statement":7281,"time":null}]},"497":{"debug":[{"subroutine":28,"pod":18,"branch":14,"condition":1,"statement":103,"time":null}]},"201":{"get_config_keys":[{"time":null,"condition":null,"statement":30,"branch":null,"pod":null,"subroutine":10}]},"7182":{"__ANON__":[{"statement":3315,"condition":172,"time":null,"subroutine":207,"pod":184,"branch":1025}]},"15536":{"address":[{"time":null,"statement":6967,"condition":434,"branch":2060,"pod":311,"subroutine":360}]},"2765":{"read_icmp_type_code":[{"pod":89,"branch":391,"subroutine":99,"time":null,"statement":1126,"condition":54}]},"17235":{"prepare_local_optimization":[{"condition":480,"statement":7720,"time":null,"subroutine":394,"branch":2254,"pod":330}]},"14354":{"__ANON__":[{"condition":398,"statement":6491,"time":null,"subroutine":336,"pod":296,"branch":1948}]},"3633":{"order_proto":[{"subroutine":141,"pod":127,"branch":529,"statement":1547,"condition":71,"time":null}]},"14544":{"print_routes":[{"pod":297,"branch":1949,"subroutine":338,"time":null,"statement":6496,"condition":398}]},"6104":{"split_protocols":[{"subroutine":182,"branch":847,"pod":163,"statement":2684,"condition":117,"time":null}]},"9084":{"link_aggregate_to_zone":[{"condition":213,"statement":4099,"time":null,"subroutine":238,"pod":206,"branch":1235}]},"420":{"find_duplicates":[{"statement":63,"condition":1,"time":null,"subroutine":19,"branch":5,"pod":9}]},"8044":{"__ANON__":[{"condition":186,"statement":3653,"time":null,"subroutine":218,"branch":1114,"pod":192}]},"456":{"aref_eq":[{"pod":13,"branch":7,"subroutine":23,"time":null,"condition":1,"statement":82}]},"16963":{"join_ranges":[{"subroutine":389,"branch":2228,"pod":326,"condition":473,"statement":7586,"time":null}]},"9779":{"cleanup_after_inheritance":[{"pod":223,"branch":1321,"subroutine":256,"time":null,"statement":4402,"condition":231}]},"4135":{"link_areas":[{"branch":576,"pod":137,"subroutine":152,"time":null,"condition":76,"statement":1759}]},"6626":{"collect_log":[{"pod":175,"branch":925,"subroutine":194,"time":null,"statement":2935,"condition":149}]},"16608":{"__ANON__":[{"subroutine":383,"pod":325,"branch":2214,"statement":7549,"condition":471,"time":null}]},"13238":{"mark_primary":[{"branch":1761,"pod":276,"subroutine":312,"time":null,"statement":5838,"condition":346}]},"10388":{"setpath_obj":[{"statement":4673,"condition":240,"time":null,"subroutine":271,"branch":1393,"pod":238}]},"18566":{"print_crypto_filter_acl":[{"condition":527,"statement":8321,"time":null,"subroutine":410,"pod":344,"branch":2403}]},"10035":{"check_routers_in_nested_areas":[{"pod":231,"branch":1353,"subroutine":264,"time":null,"condition":233,"statement":4516}]},"13189":{"get_zone2":[{"pod":274,"branch":1751,"subroutine":310,"time":null,"condition":346,"statement":5814}]},"9126":{"__ANON__":[{"subroutine":240,"pod":208,"branch":1246,"statement":4155,"condition":215,"time":null}]},"9919":{"set_areas":[{"time":null,"condition":233,"statement":4461,"pod":229,"branch":1338,"subroutine":262}]},"9579":{"inherit_router_attributes":[{"time":null,"statement":4328,"condition":225,"pod":216,"branch":1302,"subroutine":249}]},"14901":{"print_asa_nat":[{"subroutine":344,"branch":1987,"pod":300,"condition":412,"statement":6680,"time":null}]},"7755":{"distribute_nat_info":[{"statement":3486,"condition":181,"time":null,"subroutine":215,"branch":1074,"pod":190}]},"3485":{"show_read_statistics":[{"condition":67,"statement":1480,"time":null,"subroutine":125,"pod":111,"branch":509}]},"19404":{"__ANON__":[{"time":null,"statement":8735,"condition":536,"branch":2493,"pod":360,"subroutine":428}]},"5319":{"check_auto_intf":[{"condition":106,"statement":2318,"time":null,"subroutine":172,"pod":156,"branch":730}]},"2918":{"check_protocol_flags":[{"subroutine":105,"pod":94,"branch":420,"condition":59,"statement":1202,"time":null}]},"3509":{"is_objectgroup":[{"subroutine":135,"branch":509,"pod":121,"statement":1499,"condition":67,"time":null}]},"7112":{"__ANON__":[{"time":null,"statement":3315,"condition":172,"branch":1025,"pod":184,"subroutine":204}]},"4786":{"check_bridged_networks":[{"condition":89,"statement":2063,"time":null,"subroutine":165,"pod":149,"branch":656}]},"8160":{"__ANON__":[{"time":null,"statement":3701,"condition":194,"pod":195,"branch":1128,"subroutine":222}]},"549":{"abort_on_error":[{"time":null,"condition":1,"statement":117,"branch":18,"pod":22,"subroutine":32}]},"14806":{"print_pix_static":[{"pod":299,"branch":1979,"subroutine":340,"time":null,"condition":407,"statement":6628}]},"6904":{"set_policy_distribution_ip":[{"subroutine":201,"branch":959,"pod":182,"condition":159,"statement":3067,"time":null}]},"15980":{"__ANON__":[{"time":null,"condition":446,"statement":7221,"pod":320,"branch":2132,"subroutine":373}]},"12766":{"check_for_transient_supernet_rule":[{"subroutine":304,"pod":269,"branch":1690,"condition":329,"statement":5630,"time":null}]},"1110":{"check_assign_pair":[{"statement":348,"condition":14,"time":null,"subroutine":77,"pod":67,"branch":80}]},"15057":{"distribute_rule":[{"statement":6772,"condition":417,"time":null,"subroutine":352,"branch":1998,"pod":303}]},"6328":{"add_managed_hosts":[{"subroutine":186,"pod":167,"branch":873,"statement":2778,"condition":130,"time":null}]},"608":{"skip_space_and_comment":[{"branch":21,"pod":29,"subroutine":39,"time":null,"condition":1,"statement":142}]},"785":{"read_union":[{"branch":32,"pod":48,"subroutine":58,"time":null,"statement":205,"condition":6}]},"9283":{"duplicate_aggregate_to_cluster":[{"subroutine":242,"pod":209,"branch":1256,"condition":217,"statement":4197,"time":null}]},"666":{"read_ip":[{"time":null,"condition":6,"statement":165,"branch":25,"pod":35,"subroutine":45}]},"15035":{"print_nat":[{"statement":6764,"condition":417,"time":null,"subroutine":351,"pod":302,"branch":1996}]},"1970":{"read_router":[{"statement":766,"condition":28,"time":null,"subroutine":90,"branch":250,"pod":80}]},"5899":{"expand_group":[{"subroutine":177,"branch":817,"pod":159,"statement":2590,"condition":116,"time":null}]},"3274":{"read_netspoc":[{"subroutine":116,"pod":105,"branch":470,"statement":1346,"condition":64,"time":null}]},"963":{"read_complement":[{"time":null,"condition":14,"statement":281,"pod":54,"branch":65,"subroutine":64}]},"14056":{"add_end_routes":[{"subroutine":331,"branch":1897,"pod":291,"condition":378,"statement":6259,"time":null}]},"12265":{"find_supernet":[{"branch":1626,"pod":261,"subroutine":296,"time":null,"statement":5449,"condition":317}]},"14958":{"__ANON__":[{"condition":413,"statement":6735,"time":null,"subroutine":348,"pod":301,"branch":1991}]},"17187":{"__ANON__":[{"statement":7720,"condition":480,"time":null,"subroutine":393,"branch":2254,"pod":330}]},"1373":{"read_nat":[{"statement":480,"condition":18,"time":null,"subroutine":86,"branch":124,"pod":76}]},"6606":{"warn_unused_overlaps":[{"time":null,"condition":149,"statement":2926,"pod":174,"branch":921,"subroutine":193}]},"994":{"read_time_val":[{"condition":14,"statement":290,"time":null,"subroutine":66,"pod":56,"branch":67}]},"686":{"read_ip_prefix_pair":[{"pod":37,"branch":28,"subroutine":47,"time":null,"condition":6,"statement":175}]},"3667":{"__ANON__":[{"condition":72,"statement":1610,"time":null,"subroutine":143,"pod":129,"branch":543}]},"13151":{"gen_reverse_rules":[{"pod":273,"branch":1750,"subroutine":309,"time":null,"condition":346,"statement":5803}]},"8391":{"__ANON__":[{"time":null,"statement":3833,"condition":195,"pod":199,"branch":1163,"subroutine":227}]},"10239":{"traverse_loop_part":[{"subroutine":269,"pod":236,"branch":1377,"condition":239,"statement":4619,"time":null}]},"16331":{"__ANON__":[{"condition":457,"statement":7378,"time":null,"subroutine":379,"branch":2174,"pod":324}]},"2513":{"move_locked_interfaces":[{"statement":995,"condition":47,"time":null,"subroutine":91,"pod":81,"branch":342}]},"6649":{"normalize_log":[{"pod":177,"branch":927,"subroutine":196,"time":null,"statement":2946,"condition":149}]},"15672":{"cisco_prt_code":[{"subroutine":365,"branch":2078,"pod":316,"statement":7024,"condition":434,"time":null}]},"19162":{"copy_raw":[{"time":null,"statement":8637,"condition":534,"pod":354,"branch":2479,"subroutine":421}]},"13777":{"get_zone3":[{"time":null,"statement":6108,"condition":368,"pod":285,"branch":1859,"subroutine":323}]},"18218":{"print_acl_prefix":[{"condition":518,"statement":8131,"time":null,"subroutine":402,"pod":336,"branch":2370}]},"6350":{"collect_unenforceable":[{"condition":130,"statement":2787,"time":null,"subroutine":187,"pod":168,"branch":875}]},"636":{"check_int":[{"time":null,"statement":152,"condition":3,"pod":32,"branch":21,"subroutine":42}]},"18662":{"print_ca_and_tunnel_group_map":[{"time":null,"statement":8368,"condition":528,"pod":347,"branch":2415,"subroutine":413}]},"14867":{"__ANON__":[{"pod":300,"branch":1987,"subroutine":342,"time":null,"statement":6680,"condition":412}]},"5006":{"convert_hosts":[{"time":null,"condition":93,"statement":2184,"branch":691,"pod":152,"subroutine":168}]},"17650":{"print_cisco_acl_add_deny":[{"subroutine":396,"pod":332,"branch":2304,"statement":7862,"condition":507,"time":null}]},"11444":{"set_auto_intf_from_border":[{"condition":293,"statement":5073,"time":null,"subroutine":281,"branch":1523,"pod":248}]},"13922":{"set_routes_in_zone":[{"branch":1876,"pod":289,"subroutine":327,"time":null,"condition":377,"statement":6173}]},"11607":{"gen_tunnel_rules":[{"time":null,"condition":298,"statement":5159,"branch":1545,"pod":252,"subroutine":286}]},"15739":{"iptables_prt_code":[{"subroutine":367,"pod":317,"branch":2090,"statement":7053,"condition":437,"time":null}]},"11586":{"link_crypto":[{"time":null,"condition":298,"statement":5150,"pod":251,"branch":1543,"subroutine":285}]},"442":{"aref_delete":[{"time":null,"condition":1,"statement":76,"branch":6,"pod":12,"subroutine":22}]},"3407":{"read_file_or_dir":[{"condition":65,"statement":1436,"time":null,"subroutine":122,"pod":110,"branch":494}]},"16699":{"__ANON__":[{"subroutine":387,"branch":2214,"pod":325,"condition":471,"statement":7549,"time":null}]},"11568":{"link_ipsec":[{"time":null,"condition":298,"statement":5142,"branch":1541,"pod":250,"subroutine":284}]},"9499":{"zone_eq":[{"time":null,"statement":4295,"condition":221,"branch":1289,"pod":214,"subroutine":247}]},"7485":{"__ANON__":[{"time":null,"condition":177,"statement":3391,"branch":1044,"pod":187,"subroutine":211}]},"2793":{"read_proto_nr":[{"statement":1139,"condition":56,"time":null,"subroutine":100,"branch":397,"pod":90}]},"14907":{"__ANON__":[{"branch":1991,"pod":301,"subroutine":345,"time":null,"condition":413,"statement":6735}]},"3854":{"order_protocols":[{"statement":1616,"condition":72,"time":null,"subroutine":145,"branch":545,"pod":130}]},"3502":{"is_interface":[{"time":null,"condition":67,"statement":1492,"pod":114,"branch":509,"subroutine":128}]},"6019":{"check_unused_groups":[{"branch":838,"pod":161,"subroutine":180,"time":null,"statement":2648,"condition":117}]},"6203":{"get_zone":[{"time":null,"statement":2721,"condition":126,"branch":852,"pod":165,"subroutine":184}]},"3503":{"is_host":[{"pod":115,"branch":509,"subroutine":129,"time":null,"statement":1493,"condition":67}]},"476":{"info":[{"subroutine":25,"pod":15,"branch":11,"statement":92,"condition":1,"time":null}]},"9797":{"inherit_attributes":[{"condition":231,"statement":4413,"time":null,"subroutine":257,"pod":224,"branch":1325}]},"972":{"read_intersection":[{"subroutine":65,"branch":66,"pod":55,"condition":14,"statement":284,"time":null}]},"7744":{"distribute_nat":[{"pod":189,"branch":1073,"subroutine":214,"time":null,"condition":181,"statement":3480}]},"19405":{"__ANON__":[{"subroutine":429,"pod":360,"branch":2493,"statement":8735,"condition":536,"time":null}]},"3799":{"expand_splitted_protocol":[{"statement":1610,"condition":72,"time":null,"subroutine":144,"pod":129,"branch":543}]},"18588":{"print_crypto_map_attributes":[{"pod":345,"branch":2405,"subroutine":411,"time":null,"statement":8334,"condition":527}]},"3511":{"is_autointerface":[{"time":null,"statement":1501,"condition":67,"branch":509,"pod":123,"subroutine":137}]},"8840":{"check_crosslink":[{"time":null,"statement":3970,"condition":208,"branch":1203,"pod":202,"subroutine":233}]},"3293":{"read_file":[{"statement":1355,"condition":64,"time":null,"subroutine":117,"pod":106,"branch":473}]},"2750":{"read_port_ranges":[{"statement":1118,"condition":54,"time":null,"subroutine":98,"pod":88,"branch":389}]},"245":{"store_description":[{"statement":48,"condition":1,"time":null,"subroutine":15,"pod":5,"branch":2}]},"539":{"check_abort":[{"subroutine":31,"branch":16,"pod":21,"statement":113,"condition":1,"time":null}]},"4005":{"BEGIN":[{"pod":null,"branch":null,"subroutine":6,"time":null,"statement":18,"condition":null}]},"7152":{"__ANON__":[{"subroutine":206,"branch":1025,"pod":184,"statement":3315,"condition":172,"time":null}]},"12343":{"find_matching_supernet":[{"pod":263,"branch":1638,"subroutine":298,"time":null,"condition":320,"statement":5485}]},"426":{"intersect":[{"statement":67,"condition":1,"time":null,"subroutine":20,"branch":5,"pod":10}]},"11640":{"link_tunnels":[{"subroutine":287,"branch":1549,"pod":253,"condition":300,"statement":5172,"time":null}]},"12997":{"check_supernet_rules":[{"time":null,"condition":336,"statement":5731,"pod":271,"branch":1725,"subroutine":306}]},"15644":{"ios_route_code":[{"pod":313,"branch":2077,"subroutine":362,"time":null,"condition":434,"statement":7009}]},"1094":{"read_assign_list":[{"subroutine":75,"branch":79,"pod":65,"statement":339,"condition":14,"time":null}]},"15387":{"create_general_permit_rules":[{"pod":307,"branch":2043,"subroutine":356,"time":null,"condition":427,"statement":6899}]},"3508":{"is_protocolgroup":[{"subroutine":134,"pod":120,"branch":509,"condition":67,"statement":1498,"time":null}]},"13609":{"optimize_rules":[{"subroutine":319,"pod":281,"branch":1831,"statement":6025,"condition":364,"time":null}]},"18315":{"print_cisco_acls":[{"subroutine":405,"branch":2374,"pod":339,"condition":518,"statement":8194,"time":null}]},"10481":{"set_loop_cluster":[{"time":null,"statement":4705,"condition":242,"pod":239,"branch":1404,"subroutine":272}]},"15482":{"sort_rules_by_prio":[{"subroutine":358,"branch":2056,"pod":309,"condition":427,"statement":6943,"time":null}]},"14970":{"__ANON__":[{"condition":413,"statement":6735,"time":null,"subroutine":349,"branch":1991,"pod":301}]},"8500":{"find_subnets_in_nat_domain":[{"time":null,"statement":3833,"condition":195,"pod":199,"branch":1163,"subroutine":229}]},"13800":{"get_networks":[{"subroutine":324,"pod":286,"branch":1863,"statement":6118,"condition":369,"time":null}]},"15933":{"__ANON__":[{"subroutine":371,"branch":2132,"pod":320,"condition":446,"statement":7221,"time":null}]},"9616":{"nat_equal":[{"subroutine":250,"branch":1307,"pod":217,"statement":4341,"condition":229,"time":null}]},"30":{"BEGIN":[{"branch":null,"pod":null,"subroutine":1,"time":null,"statement":3,"condition":null}]},"19386":{"BEGIN":[{"statement":27,"condition":null,"time":null,"subroutine":9,"pod":null,"branch":null}]},"29":{"BEGIN":[{"time":null,"condition":null,"statement":null,"pod":null,"branch":null,"subroutine":null}]},"1151":{"check_radius_attributes":[{"subroutine":80,"branch":82,"pod":70,"statement":364,"condition":14,"time":null}]},"6455":{"warn_useless_unenforceable":[{"subroutine":189,"pod":170,"branch":898,"statement":2828,"condition":141,"time":null}]},"579":{"syntax_err":[{"time":null,"statement":132,"condition":1,"pod":27,"branch":19,"subroutine":37}]},"9513":{"set_area1":[{"branch":1289,"pod":215,"subroutine":248,"time":null,"statement":4297,"condition":223}]},"4248":{"check_interface_ip":[{"condition":76,"statement":1809,"time":null,"subroutine":154,"branch":589,"pod":139}]},"3058":{"read_attributed_object":[{"subroutine":111,"branch":441,"pod":100,"condition":63,"statement":1272,"time":null}]},"3389":{"read_json":[{"branch":490,"pod":109,"subroutine":121,"time":null,"condition":65,"statement":1422}]},"210":{"get_config_pattern":[{"time":null,"statement":33,"condition":null,"branch":null,"pod":2,"subroutine":12}]},"415":{"unique":[{"time":null,"statement":60,"condition":1,"branch":5,"pod":8,"subroutine":18}]},"630":{"skip":[{"statement":150,"condition":2,"time":null,"subroutine":41,"branch":21,"pod":31}]},"1072":{"read_list":[{"condition":14,"statement":327,"time":null,"subroutine":73,"branch":75,"pod":63}]},"12466":{"check_supernet_src_rule":[{"condition":323,"statement":5531,"time":null,"subroutine":300,"branch":1652,"pod":265}]},"19212":{"show_finished":[{"condition":535,"statement":8665,"time":null,"subroutine":423,"branch":2488,"pod":356}]},"14819":{"__ANON__":[{"branch":1987,"pod":300,"subroutine":341,"time":null,"condition":412,"statement":6680}]},"15365":{"cmp_address":[{"time":null,"statement":6889,"condition":426,"pod":305,"branch":2041,"subroutine":354}]},"4366":{"link_subnets":[{"time":null,"statement":1858,"condition":76,"branch":607,"pod":142,"subroutine":158}]},"14036":{"add_path_routes":[{"time":null,"statement":6250,"condition":377,"pod":290,"branch":1896,"subroutine":330}]},"10852":{"cluster_path_mark":[{"time":null,"statement":4839,"condition":251,"pod":244,"branch":1447,"subroutine":277}]},"5384":{"expand_group1":[{"subroutine":173,"branch":738,"pod":157,"condition":108,"statement":2356,"time":null}]},"6831":{"expand_services":[{"time":null,"statement":3031,"condition":159,"pod":181,"branch":951,"subroutine":200}]},"3323":{"read_config":[{"time":null,"statement":1370,"condition":64,"branch":475,"pod":107,"subroutine":118}]},"554":{"set_abort_immediately":[{"subroutine":33,"pod":23,"branch":19,"condition":1,"statement":119,"time":null}]},"691":{"gen_ip":[{"pod":38,"branch":28,"subroutine":48,"time":null,"condition":6,"statement":177}]},"2638":{"read_area":[{"condition":48,"statement":1059,"time":null,"subroutine":94,"pod":84,"branch":362}]},"19406":{"__ANON__":[{"subroutine":430,"pod":360,"branch":2493,"condition":536,"statement":8735,"time":null}]},"8111":{"adjust_crypto_nat":[{"statement":3653,"condition":186,"time":null,"subroutine":219,"branch":1114,"pod":192}]},"11180":{"path_mark":[{"condition":272,"statement":4975,"time":null,"subroutine":278,"branch":1495,"pod":245}]},"15410":{"distribute_general_permit":[{"subroutine":357,"branch":2045,"pod":308,"statement":6909,"condition":427,"time":null}]},"3501":{"is_router":[{"pod":113,"branch":509,"subroutine":127,"time":null,"statement":1491,"condition":67}]},"17738":{"__ANON__":[{"pod":333,"branch":2335,"subroutine":397,"time":null,"condition":515,"statement":7950}]},"19389":{"parse_options":[{"subroutine":426,"branch":2489,"pod":359,"statement":8711,"condition":535,"time":null}]},"2937":{"read_typed_name_or_simple_protocol":[{"time":null,"condition":59,"statement":1210,"branch":422,"pod":95,"subroutine":106}]},"13098":{"BEGIN":[{"branch":null,"pod":null,"subroutine":7,"time":null,"statement":21,"condition":null}]},"4491":{"link_virtual_interfaces":[{"subroutine":161,"pod":145,"branch":624,"condition":77,"statement":1923,"time":null}]},"4318":{"__ANON__":[{"condition":76,"statement":1858,"time":null,"subroutine":157,"branch":607,"pod":142}]},"9899":{"set_area":[{"pod":228,"branch":1334,"subroutine":261,"time":null,"statement":4450,"condition":233}]},"3507":{"is_group":[{"condition":67,"statement":1497,"time":null,"subroutine":133,"branch":509,"pod":119}]},"6521":{"collect_redundant_rules":[{"time":null,"statement":2874,"condition":144,"pod":172,"branch":909,"subroutine":191}]},"2941":{"read_protocol":[{"branch":422,"pod":96,"subroutine":107,"time":null,"statement":1211,"condition":60}]},"3504":{"is_subnet":[{"pod":116,"branch":509,"subroutine":130,"time":null,"statement":1494,"condition":67}]},"1173":{"check_managed":[{"pod":72,"branch":87,"subroutine":82,"time":null,"condition":14,"statement":378}]},"2881":{"read_simple_protocol":[{"subroutine":104,"branch":414,"pod":93,"condition":59,"statement":1184,"time":null}]},"8229":{"numerically":[{"time":null,"statement":3718,"condition":194,"branch":1130,"pod":196,"subroutine":224}]},"17246":{"local_optimization":[{"time":null,"condition":483,"statement":7728,"pod":331,"branch":2257,"subroutine":395}]},"10114":{"check_virtual_interfaces":[{"condition":234,"statement":4558,"time":null,"subroutine":267,"pod":234,"branch":1357}]},"19385":{"BEGIN":[{"time":null,"condition":null,"statement":24,"branch":null,"pod":null,"subroutine":8}]},"14732":{"print_nat1":[{"subroutine":339,"branch":1973,"pod":298,"condition":404,"statement":6595,"time":null}]},"15379":{"distribute_rules":[{"pod":306,"branch":2043,"subroutine":355,"time":null,"condition":427,"statement":6895}]},"4315":{"link_subnet":[{"time":null,"statement":1832,"condition":76,"pod":141,"branch":600,"subroutine":156}]},"5211":{"combine_subnets":[{"time":null,"condition":104,"statement":2278,"branch":721,"pod":153,"subroutine":169}]},"1136":{"new":[{"condition":14,"statement":357,"time":null,"subroutine":78,"pod":68,"branch":81}]},"465":{"keys_eq":[{"pod":14,"branch":9,"subroutine":24,"time":null,"statement":87,"condition":1}]},"14982":{"optimize_nat_networks":[{"subroutine":350,"pod":301,"branch":1991,"condition":413,"statement":6735,"time":null}]},"6565":{"show_deleted_rules2":[{"time":null,"condition":149,"statement":2899,"pod":173,"branch":918,"subroutine":192}]},"532":{"at_line":[{"time":null,"statement":112,"condition":1,"pod":20,"branch":16,"subroutine":30}]},"6161":{"add_rules":[{"condition":120,"statement":2704,"time":null,"subroutine":183,"branch":850,"pod":164}]},"3326":{"__ANON__":[{"condition":65,"statement":1389,"time":null,"subroutine":119,"branch":480,"pod":108}]},"15617":{"cisco_acl_addr":[{"time":null,"statement":6996,"condition":434,"branch":2071,"pod":312,"subroutine":361}]},"8920":{"check_managed_local":[{"subroutine":234,"pod":203,"branch":1215,"condition":210,"statement":4010,"time":null}]},"573":{"fatal_err":[{"condition":1,"statement":129,"time":null,"subroutine":36,"branch":19,"pod":26}]},"11485":{"path_auto_interfaces":[{"subroutine":283,"branch":1529,"pod":249,"condition":293,"statement":5102,"time":null}]},"224":{"check_config_pair":[{"time":null,"condition":1,"statement":40,"pod":3,"branch":1,"subroutine":13}]},"674":{"read_ip_prefix":[{"subroutine":46,"pod":36,"branch":26,"condition":6,"statement":168,"time":null}]},"8420":{"__ANON__":[{"subroutine":228,"branch":1163,"pod":199,"statement":3833,"condition":195,"time":null}]},"812":{"check_typed_name":[{"time":null,"statement":221,"condition":7,"pod":49,"branch":36,"subroutine":59}]},"3545":{"prepare_prt_ordering":[{"pod":125,"branch":515,"subroutine":139,"time":null,"condition":69,"statement":1514}]},"868":{"read_extended_name":[{"condition":9,"statement":236,"time":null,"subroutine":61,"branch":43,"pod":51}]},"3510":{"is_chain":[{"branch":509,"pod":122,"subroutine":136,"time":null,"condition":67,"statement":1500}]},"6636":{"check_log":[{"condition":149,"statement":2940,"time":null,"subroutine":195,"branch":926,"pod":176}]},"8791":{"__ANON__":[{"time":null,"condition":208,"statement":3970,"branch":1203,"pod":202,"subroutine":232}]},"15241":{"add_router_acls":[{"condition":426,"statement":6842,"time":null,"subroutine":353,"branch":2030,"pod":304}]},"4990":{"split_ip_range":[{"time":null,"statement":2175,"condition":92,"branch":690,"pod":151,"subroutine":167}]},"10571":{"get_path":[{"branch":1411,"pod":241,"subroutine":274,"time":null,"condition":243,"statement":4741}]},"19220":{"init_protocols":[{"statement":8667,"condition":535,"time":null,"subroutine":424,"pod":357,"branch":2489}]},"13037":{"gen_reverse_rules1":[{"condition":336,"statement":5754,"time":null,"subroutine":307,"branch":1732,"pod":272}]},"4090":{"link_general_permit":[{"condition":74,"statement":1736,"time":null,"subroutine":151,"branch":568,"pod":136}]},"11942":{"expand_crypto":[{"pod":258,"branch":1589,"subroutine":293,"time":null,"statement":5309,"condition":310}]},"13420":{"mark_dynamic_nat_rules":[{"subroutine":316,"pod":280,"branch":1795,"condition":356,"statement":5934,"time":null}]},"936":{"read_user_id":[{"time":null,"statement":271,"condition":14,"branch":62,"pod":52,"subroutine":62}]},"6414":{"show_unenforceable":[{"time":null,"condition":138,"statement":2807,"branch":890,"pod":169,"subroutine":188}]},"41":{"BEGIN":[{"statement":15,"condition":null,"time":null,"subroutine":5,"pod":null,"branch":null}]},"13678":{"optimize_and_warn_deleted":[{"statement":6063,"condition":367,"time":null,"subroutine":320,"branch":1844,"pod":282}]},"3516":{"print_rule":[{"time":null,"condition":67,"statement":1502,"pod":124,"branch":509,"subroutine":138}]},"3505":{"is_area":[{"subroutine":131,"pod":117,"branch":509,"statement":1495,"condition":67,"time":null}]},"17922":{"__ANON__":[{"time":null,"statement":8115,"condition":518,"branch":2364,"pod":335,"subroutine":400}]},"13978":{"__ANON__":[{"condition":377,"statement":6250,"time":null,"subroutine":329,"branch":1896,"pod":290}]},"1088":{"read_list_or_null":[{"pod":64,"branch":78,"subroutine":74,"time":null,"condition":14,"statement":336}]},"771":{"read_string":[{"subroutine":57,"pod":47,"branch":31,"statement":201,"condition":6,"time":null}]},"5640":{"__ANON__":[{"time":null,"statement":2577,"condition":116,"branch":815,"pod":158,"subroutine":175}]},"12180":{"setup_ref2obj":[{"time":null,"condition":315,"statement":5423,"pod":259,"branch":1621,"subroutine":294}]},"18421":{"print_acls":[{"statement":8240,"condition":525,"time":null,"subroutine":406,"branch":2393,"pod":340}]},"16686":{"__ANON__":[{"statement":7549,"condition":471,"time":null,"subroutine":386,"pod":325,"branch":2214}]},"1928":{"set_pix_interface_level":[{"time":null,"statement":749,"condition":26,"branch":245,"pod":79,"subroutine":89}]},"10267":{"optimize_pathrestrictions":[{"statement":4636,"condition":239,"time":null,"subroutine":270,"branch":1385,"pod":237}]},"3500":{"is_network":[{"time":null,"condition":67,"statement":1490,"pod":112,"branch":509,"subroutine":126}]},"9808":{"set_zones":[{"pod":225,"branch":1325,"subroutine":258,"time":null,"statement":4417,"condition":231}]},"492":{"warn_msg":[{"subroutine":27,"branch":14,"pod":17,"condition":1,"statement":101,"time":null}]},"13266":{"mark_strict_secondary":[{"condition":346,"statement":5856,"time":null,"subroutine":313,"branch":1768,"pod":277}]},"6918":{"__ANON__":[{"subroutine":202,"branch":979,"pod":183,"condition":163,"statement":3140,"time":null}]},"15496":{"rules_distribution":[{"time":null,"statement":6948,"condition":432,"branch":2057,"pod":310,"subroutine":359}]},"7804":{"__ANON__":[{"time":null,"condition":183,"statement":3611,"branch":1109,"pod":191,"subroutine":216}]},"15791":{"cisco_acl_line":[{"condition":440,"statement":7079,"time":null,"subroutine":369,"branch":2101,"pod":318}]},"721":{"prefix2mask":[{"subroutine":51,"branch":28,"pod":41,"condition":6,"statement":183,"time":null}]},"16633":{"__ANON__":[{"statement":7549,"condition":471,"time":null,"subroutine":384,"branch":2214,"pod":325}]},"2821":{"gen_protocol_name":[{"pod":91,"branch":403,"subroutine":101,"time":null,"condition":56,"statement":1152}]},"2829":{"__ANON__":[{"pod":92,"branch":413,"subroutine":102,"time":null,"condition":59,"statement":1176}]},"13943":{"__ANON__":[{"branch":1896,"pod":290,"subroutine":328,"time":null,"statement":6250,"condition":377}]},"8719":{"check_no_in_acl":[{"time":null,"condition":208,"statement":3914,"branch":1190,"pod":200,"subroutine":230}]},"10636":{"cluster_path_mark1":[{"time":null,"condition":247,"statement":4761,"branch":1420,"pod":242,"subroutine":275}]},"14105":{"find_active_routes":[{"subroutine":333,"pod":293,"branch":1902,"statement":6279,"condition":379,"time":null}]},"13294":{"mark_local_secondary":[{"pod":278,"branch":1775,"subroutine":314,"time":null,"condition":346,"statement":5874}]},"1036":{"split_typed_name":[{"condition":14,"statement":309,"time":null,"subroutine":70,"pod":60,"branch":72}]},"19207":{"show_version":[{"time":null,"condition":535,"statement":8663,"branch":2488,"pod":355,"subroutine":422}]},"7531":{"set_natdomain":[{"condition":177,"statement":3391,"time":null,"subroutine":212,"pod":187,"branch":1044}]},"2952":{"assign_union_allow_user":[{"subroutine":108,"pod":97,"branch":422,"condition":60,"statement":1217,"time":null}]},"2720":{"read_port_range":[{"time":null,"statement":1104,"condition":53,"branch":380,"pod":87,"subroutine":97}]},"17113":{"get_filter_network":[{"time":null,"statement":7654,"condition":475,"pod":327,"branch":2239,"subroutine":390}]},"31":{"BEGIN":[{"pod":null,"branch":null,"subroutine":2,"time":null,"condition":null,"statement":6}]},"18437":{"gen_crypto_rules":[{"time":null,"statement":8249,"condition":525,"pod":341,"branch":2394,"subroutine":407}]},"13819":{"prepare_nat_commands":[{"time":null,"statement":6126,"condition":370,"pod":287,"branch":1866,"subroutine":325}]},"11834":{"crypto_behind":[{"pod":254,"branch":1570,"subroutine":288,"time":null,"condition":309,"statement":5263}]},"3506":{"is_zone":[{"branch":509,"pod":118,"subroutine":132,"time":null,"condition":67,"statement":1496}]},"12610":{"check_supernet_dst_rule":[{"pod":266,"branch":1673,"subroutine":301,"time":null,"condition":328,"statement":5572}]},"1633":{"read_interface":[{"time":null,"condition":22,"statement":598,"branch":174,"pod":78,"subroutine":88}]},"18756":{"print_dynamic_crypto_map":[{"pod":349,"branch":2421,"subroutine":415,"time":null,"condition":528,"statement":8411}]},"9117":{"link_implicit_aggregate_to_zone":[{"condition":214,"statement":4109,"time":null,"subroutine":239,"branch":1238,"pod":207}]},"19392":{"__ANON__":[{"pod":360,"branch":2493,"subroutine":427,"time":null,"condition":536,"statement":8735}]},"11339":{"path_walk":[{"subroutine":280,"branch":1511,"pod":247,"condition":280,"statement":5026,"time":null}]},"13881":{"get_route_networks":[{"branch":1871,"pod":288,"subroutine":326,"time":null,"statement":6160,"condition":376}]},"18631":{"print_tunnel_group":[{"time":null,"condition":528,"statement":8351,"pod":346,"branch":2412,"subroutine":412}]},"653":{"check_ip":[{"time":null,"condition":3,"statement":159,"branch":23,"pod":34,"subroutine":44}]},"13075":{"__ANON__":[{"subroutine":308,"branch":1750,"pod":273,"condition":346,"statement":5803,"time":null}]},"13712":{"distribute_nat_to_device":[{"statement":6080,"condition":367,"time":null,"subroutine":322,"branch":1848,"pod":284}]},"16406":{"__ANON__":[{"subroutine":380,"pod":324,"branch":2174,"statement":7378,"condition":457,"time":null}]},"5918":{"expand_group_in_rule":[{"condition":116,"statement":2601,"time":null,"subroutine":178,"pod":160,"branch":819}]},"17126":{"remove_non_local_rules":[{"subroutine":391,"branch":2240,"pod":328,"statement":7662,"condition":475,"time":null}]},"407":{"equal":[{"branch":4,"pod":7,"subroutine":17,"time":null,"condition":1,"statement":56}]},"9374":{"get_cluster_aggregates":[{"subroutine":244,"branch":1268,"pod":211,"condition":217,"statement":4234,"time":null}]},"7351":{"expand_auto_intf":[{"condition":172,"statement":3315,"time":null,"subroutine":208,"pod":184,"branch":1025}]},"749":{"read_owner_pattern":[{"statement":193,"condition":6,"time":null,"subroutine":55,"branch":29,"pod":45}]},"14081":{"get_route_path":[{"subroutine":332,"branch":1900,"pod":292,"condition":378,"statement":6270,"time":null}]},"9751":{"inherit_nat_in_zone":[{"time":null,"condition":231,"statement":4392,"branch":1320,"pod":222,"subroutine":255}]},"733":{"match_ip":[{"statement":187,"condition":6,"time":null,"subroutine":53,"pod":43,"branch":28}]},"3899":{"link_to_owner":[{"time":null,"condition":72,"statement":1630,"pod":131,"branch":546,"subroutine":146}]},"9456":{"set_zone_cluster":[{"time":null,"condition":219,"statement":4273,"pod":213,"branch":1280,"subroutine":246}]},"7395":{"set_service_owner":[{"condition":173,"statement":3335,"time":null,"subroutine":210,"pod":186,"branch":1028}]},"3913":{"link_to_real_owner":[{"condition":73,"statement":1638,"time":null,"subroutine":147,"branch":548,"pod":132}]},"8041":{"invert_nat_set":[{"condition":183,"statement":3611,"time":null,"subroutine":217,"pod":191,"branch":1109}]},"34":{"BEGIN":[{"time":null,"statement":12,"condition":null,"pod":null,"branch":null,"subroutine":4}]},"4606":{"check_ip_addresses":[{"pod":146,"branch":637,"subroutine":162,"time":null,"statement":1984,"condition":82}]},"727":{"complement_32bit":[{"time":null,"condition":6,"statement":185,"branch":28,"pod":42,"subroutine":52}]},"4394":{"link_pathrestrictions":[{"pod":144,"branch":609,"subroutine":160,"time":null,"condition":76,"statement":1875}]},"17875":{"print_asavpn":[{"pod":334,"branch":2339,"subroutine":399,"time":null,"condition":515,"statement":7962}]},"14876":{"__ANON__":[{"subroutine":343,"pod":300,"branch":1987,"condition":412,"statement":6680,"time":null}]},"1271":{"read_host":[{"statement":428,"condition":15,"time":null,"subroutine":85,"branch":100,"pod":75}]},"839":{"read_typed_name":[{"branch":43,"pod":50,"subroutine":60,"time":null,"condition":8,"statement":235}]},"18995":{"print_interface":[{"branch":2453,"pod":351,"subroutine":417,"time":null,"condition":531,"statement":8540}]},"1054":{"check_assign":[{"statement":316,"condition":14,"time":null,"subroutine":72,"branch":73,"pod":62}]},"16091":{"debug_bintree":[{"subroutine":374,"pod":320,"branch":2132,"condition":446,"statement":7221,"time":null}]},"4733":{"disable_behind":[{"time":null,"statement":2041,"condition":88,"branch":652,"pod":148,"subroutine":164}]},"6043":{"expand_protocols":[{"statement":2657,"condition":117,"time":null,"subroutine":181,"pod":162,"branch":840}]},"482":{"progress":[{"subroutine":26,"branch":12,"pod":16,"condition":1,"statement":95,"time":null}]},"559":{"error_atline":[{"condition":1,"statement":121,"time":null,"subroutine":34,"branch":19,"pod":24}]},"5264":{"get_intf":[{"statement":2298,"condition":105,"time":null,"subroutine":170,"pod":154,"branch":725}]},"16594":{"__ANON__":[{"subroutine":382,"branch":2214,"pod":325,"condition":471,"statement":7549,"time":null}]},"9319":{"get_any":[{"time":null,"condition":217,"statement":4209,"branch":1258,"pod":210,"subroutine":243}]},"9009":{"link_reroute_permit":[{"statement":4066,"condition":213,"time":null,"subroutine":236,"pod":204,"branch":1228}]},"2713":{"read_protocolgroup":[{"branch":380,"pod":86,"subroutine":96,"time":null,"condition":53,"statement":1100}]},"17170":{"add_local_deny_rules":[{"pod":329,"branch":2245,"subroutine":392,"time":null,"condition":477,"statement":7688}]},"14258":{"fix_bridged_hops":[{"time":null,"condition":390,"statement":6365,"pod":294,"branch":1917,"subroutine":334}]},"6466":{"show_deleted_rules1":[{"time":null,"condition":141,"statement":2835,"pod":171,"branch":901,"subroutine":190}]},"16504":{"find_chains":[{"pod":324,"branch":2174,"subroutine":381,"time":null,"statement":7378,"condition":457}]},"9387":{"set_zone1":[{"branch":1269,"pod":212,"subroutine":245,"time":null,"condition":217,"statement":4239}]},"18192":{"iptables_acl_line":[{"time":null,"statement":8115,"condition":518,"branch":2364,"pod":335,"subroutine":401}]},"8138":{"get_nat_network":[{"condition":186,"statement":3672,"time":null,"subroutine":220,"pod":193,"branch":1119}]},"3607":{"order_icmp":[{"condition":70,"statement":1537,"time":null,"subroutine":140,"branch":526,"pod":126}]},"232":{"set_config":[{"pod":4,"branch":2,"subroutine":14,"time":null,"statement":43,"condition":1}]},"1101":{"check_assign_list":[{"time":null,"condition":14,"statement":343,"pod":66,"branch":79,"subroutine":76}]},"7371":{"show_unknown_owners":[{"time":null,"statement":3324,"condition":172,"pod":185,"branch":1026,"subroutine":209}]},"11878":{"verify_asa_vpn_attributes":[{"pod":255,"branch":1573,"subroutine":289,"time":null,"condition":309,"statement":5274}]},"738":{"read_identifier":[{"subroutine":54,"pod":44,"branch":28,"condition":6,"statement":189,"time":null}]},"18533":{"print_crypto_acl":[{"condition":527,"statement":8302,"time":null,"subroutine":409,"branch":2398,"pod":343}]},"1230":{"host_as_interface":[{"statement":404,"condition":15,"time":null,"subroutine":84,"branch":96,"pod":74}]},"646":{"read_int":[{"subroutine":43,"pod":33,"branch":22,"condition":3,"statement":156,"time":null}]},"8931":{"__ANON__":[{"subroutine":235,"pod":204,"branch":1228,"condition":213,"statement":4066,"time":null}]},"18251":{"print_acl_suffix":[{"subroutine":403,"branch":2371,"pod":337,"statement":8155,"condition":518,"time":null}]},"14919":{"__ANON__":[{"subroutine":346,"pod":301,"branch":1991,"statement":6735,"condition":413,"time":null}]},"19065":{"check_output_dir":[{"branch":2466,"pod":352,"subroutine":418,"time":null,"statement":8582,"condition":534}]},"947":{"check_hostname":[{"pod":53,"branch":63,"subroutine":63,"time":null,"condition":14,"statement":275}]},"1430":{"read_network":[{"statement":508,"condition":18,"time":null,"subroutine":87,"branch":135,"pod":77}]},"8156":{"check_subnets":[{"pod":194,"branch":1121,"subroutine":221,"time":null,"statement":3678,"condition":187}]},"9189":{"link_aggregates":[{"subroutine":241,"pod":208,"branch":1246,"statement":4155,"condition":215,"time":null}]},"698":{"print_ip":[{"pod":39,"branch":28,"subroutine":49,"time":null,"statement":179,"condition":6}]},"12234":{"collect_supernet_dst_rules":[{"branch":1621,"pod":260,"subroutine":295,"time":null,"statement":5430,"condition":315}]},"13693":{"collect_nat_path":[{"condition":367,"statement":6070,"time":null,"subroutine":321,"pod":283,"branch":1844}]},"3930":{"expand_watchers":[{"pod":133,"branch":550,"subroutine":148,"time":null,"statement":1644,"condition":73}]},"5279":{"get_auto_intf":[{"pod":155,"branch":727,"subroutine":171,"time":null,"statement":2305,"condition":105}]},"33":{"BEGIN":[{"time":null,"condition":null,"statement":9,"branch":null,"pod":null,"subroutine":3}]},"11931":{"verify_asa_trustpoint":[{"subroutine":292,"branch":1587,"pod":257,"condition":310,"statement":5304,"time":null}]},"13523":{"__ANON__":[{"subroutine":318,"pod":281,"branch":1831,"condition":364,"statement":6025,"time":null}]},"1001":{"add_description":[{"branch":68,"pod":57,"subroutine":67,"time":null,"statement":294,"condition":14}]},"19076":{"print_code":[{"statement":8587,"condition":534,"time":null,"subroutine":419,"branch":2469,"pod":353}]},"9850":{"cluster_zones":[{"statement":4433,"condition":233,"time":null,"subroutine":259,"branch":1330,"pod":226}]},"2962":{"read_service":[{"subroutine":109,"pod":98,"branch":422,"condition":60,"statement":1224,"time":null}]},"13317":{"mark_secondary_rules":[{"branch":1782,"pod":279,"subroutine":315,"time":null,"statement":5892,"condition":346}]},"10149":{"check_pathrestrictions":[{"branch":1363,"pod":235,"subroutine":268,"time":null,"condition":235,"statement":4575}]},"7137":{"__ANON__":[{"subroutine":205,"pod":184,"branch":1025,"statement":3315,"condition":172,"time":null}]},"10092":{"set_zone":[{"time":null,"condition":234,"statement":4544,"branch":1357,"pod":233,"subroutine":266}]},"3178":{"read_crypto":[{"branch":450,"pod":103,"subroutine":114,"time":null,"statement":1306,"condition":63}]},"6660":{"expand_rules":[{"condition":150,"statement":2950,"time":null,"subroutine":197,"branch":927,"pod":178}]},"17852":{"get_split_tunnel_nets":[{"statement":7950,"condition":515,"time":null,"subroutine":398,"branch":2335,"pod":333}]},"566":{"err_msg":[{"branch":19,"pod":25,"subroutine":35,"time":null,"statement":125,"condition":1}]},"2606":{"check_router_attributes":[{"branch":357,"pod":83,"subroutine":93,"time":null,"condition":48,"statement":1046}]},"14941":{"__ANON__":[{"subroutine":347,"branch":1991,"pod":301,"statement":6735,"condition":413,"time":null}]},"16110":{"add_bintree":[{"pod":321,"branch":2133,"subroutine":375,"time":null,"statement":7227,"condition":447}]},"16303":{"__ANON__":[{"condition":457,"statement":7378,"time":null,"subroutine":378,"branch":2174,"pod":324}]},"10788":{"cluster_navigation":[{"time":null,"statement":4816,"condition":250,"pod":243,"branch":1443,"subroutine":276}]},"4704":{"link_topology":[{"pod":147,"branch":652,"subroutine":163,"time":null,"statement":2029,"condition":88}]},"18673":{"print_static_crypto_map":[{"time":null,"statement":8373,"condition":528,"branch":2415,"pod":348,"subroutine":414}]},"11912":{"__ANON__":[{"subroutine":291,"pod":257,"branch":1587,"condition":310,"statement":5304,"time":null}]},"15942":{"__ANON__":[{"time":null,"condition":446,"statement":7221,"pod":320,"branch":2132,"subroutine":372}]},"9041":{"add_managed_hosts_to_aggregate":[{"time":null,"statement":4081,"condition":213,"branch":1231,"pod":205,"subroutine":237}]},"3171":{"read_ipsec":[{"subroutine":113,"branch":450,"pod":102,"condition":63,"statement":1304,"time":null}]},"3437":{"__ANON__":[{"time":null,"statement":1480,"condition":67,"branch":509,"pod":111,"subroutine":124}]},"4849":{"mark_disabled":[{"pod":150,"branch":670,"subroutine":166,"time":null,"statement":2104,"condition":90}]},"11448":{"__ANON__":[{"condition":293,"statement":5102,"time":null,"subroutine":282,"pod":249,"branch":1529}]},"7040":{"propagate_owners":[{"branch":979,"pod":183,"subroutine":203,"time":null,"statement":3140,"condition":163}]},"12975":{"mark_stateful":[{"statement":5715,"condition":335,"time":null,"subroutine":305,"branch":1720,"pod":270}]},"10079":{"clean_areas":[{"pod":232,"branch":1357,"subroutine":265,"time":null,"condition":234,"statement":4537}]},"8230":{"by_name":[{"statement":3719,"condition":194,"time":null,"subroutine":225,"pod":197,"branch":1130}]},"4065":{"link_policy_distribution_point":[{"statement":1722,"condition":74,"time":null,"subroutine":150,"branch":565,"pod":135}]},"16876":{"print_chains":[{"subroutine":388,"branch":2214,"pod":325,"statement":7549,"condition":471,"time":null}]},"9634":{"check_useless_nat":[{"condition":230,"statement":4347,"time":null,"subroutine":251,"branch":1310,"pod":218}]},"12712":{"find_smaller_prt":[{"time":null,"condition":329,"statement":5610,"branch":1686,"pod":268,"subroutine":303}]},"9694":{"inherit_nat_to_subnets_in_zone":[{"time":null,"condition":230,"statement":4371,"pod":221,"branch":1314,"subroutine":254}]},"4381":{"add_pathrestriction":[{"condition":76,"statement":1866,"time":null,"subroutine":159,"pod":143,"branch":608}]},"-1":{"__COVER__":[{"pod":362,"branch":2497,"subroutine":433,"time":null,"statement":8780,"condition":536}]},"16205":{"gen_addr_bintree":[{"subroutine":376,"branch":2150,"pod":322,"condition":454,"statement":7270,"time":null}]},"14536":{"print_header":[{"statement":6491,"condition":398,"time":null,"subroutine":337,"branch":1948,"pod":296}]},"6799":{"print_rulecount":[{"time":null,"condition":158,"statement":3015,"branch":949,"pod":179,"subroutine":198}]},"2557":{"read_aggregate":[{"condition":48,"statement":1017,"time":null,"subroutine":92,"branch":345,"pod":82}]},"13436":{"__ANON__":[{"condition":364,"statement":6025,"time":null,"subroutine":317,"branch":1831,"pod":281}]},"15654":{"prefix_code":[{"statement":7014,"condition":434,"time":null,"subroutine":363,"branch":2077,"pod":314}]},"1166":{"check_routing":[{"condition":14,"statement":375,"time":null,"subroutine":81,"branch":85,"pod":71}]},"7611":{"distribute_nat1":[{"subroutine":213,"branch":1054,"pod":188,"condition":181,"statement":3426,"time":null}]},"16665":{"__ANON__":[{"time":null,"condition":471,"statement":7549,"pod":325,"branch":2214,"subroutine":385}]},"19134":{"__ANON__":[{"time":null,"statement":8637,"condition":534,"branch":2479,"pod":354,"subroutine":420}]},"3349":{"read_json_watchers":[{"subroutine":120,"pod":108,"branch":480,"condition":65,"statement":1389,"time":null}]},"15858":{"find_object_groups":[{"branch":2113,"pod":319,"subroutine":370,"time":null,"statement":7117,"condition":442}]},"256":{"fast_mode":[{"condition":1,"statement":52,"time":null,"subroutine":16,"pod":6,"branch":3}]},"18264":{"print_iptables_acls":[{"subroutine":404,"pod":338,"branch":2372,"condition":518,"statement":8165,"time":null}]},"18806":{"print_crypto":[{"statement":8435,"condition":528,"time":null,"subroutine":416,"branch":2422,"pod":350}]},"519":{"context":[{"time":null,"statement":106,"condition":1,"branch":15,"pod":19,"subroutine":29}]},"12675":{"check_supernet_dst_collections":[{"subroutine":302,"pod":267,"branch":1685,"statement":5595,"condition":329,"time":null}]},"1027":{"check_nat_name":[{"subroutine":69,"pod":59,"branch":71,"condition":14,"statement":305,"time":null}]},"13208":{"mark_secondary":[{"pod":275,"branch":1754,"subroutine":311,"time":null,"statement":5820,"condition":346}]},"9871":{"prepare_area_borders":[{"statement":4439,"condition":233,"time":null,"subroutine":260,"pod":227,"branch":1332}]},"716":{"mask2prefix":[{"pod":40,"branch":28,"subroutine":50,"time":null,"condition":6,"statement":181}]},"4306":{"link_routers":[{"subroutine":155,"branch":600,"pod":140,"condition":76,"statement":1827,"time":null}]},"9649":{"inherit_area_nat":[{"subroutine":252,"branch":1312,"pod":219,"statement":4353,"condition":230,"time":null}]},"8237":{"find_subnets_in_zone":[{"subroutine":226,"branch":1130,"pod":198,"condition":194,"statement":3720,"time":null}]},"3974":{"link_owners":[{"time":null,"condition":73,"statement":1671,"pod":134,"branch":555,"subroutine":149}]},"5624":{"__ANON__":[{"subroutine":174,"branch":815,"pod":158,"condition":116,"statement":2577,"time":null}]},"18455":{"print_ezvpn":[{"branch":2394,"pod":342,"subroutine":408,"time":null,"statement":8255,"condition":525}]},"9975":{"find_subset_relations":[{"subroutine":263,"branch":1346,"pod":230,"statement":4488,"condition":233,"time":null}]},"3205":{"read_owner":[{"pod":104,"branch":456,"subroutine":115,"time":null,"condition":63,"statement":1321}]},"2700":{"read_group":[{"pod":85,"branch":379,"subroutine":95,"time":null,"condition":53,"statement":1092}]},"622":{"check":[{"statement":146,"condition":1,"time":null,"subroutine":40,"pod":30,"branch":21}]},"14282":{"check_and_convert_routes":[{"time":null,"statement":6381,"condition":390,"branch":1920,"pod":295,"subroutine":335}]},"12383":{"check_supernet_in_zone":[{"subroutine":299,"pod":264,"branch":1640,"statement":5497,"condition":320,"time":null}]},"3650":{"order_ranges":[{"time":null,"statement":1552,"condition":71,"branch":529,"pod":128,"subroutine":142}]},"11276":{"loop_path_walk":[{"branch":1508,"pod":246,"subroutine":279,"time":null,"statement":5011,"condition":274}]},"1017":{"check_permit_deny":[{"subroutine":68,"branch":70,"pod":58,"statement":301,"condition":14,"time":null}]},"12291":{"find_zone_network":[{"branch":1630,"pod":262,"subroutine":297,"time":null,"condition":317,"statement":5457}]},"15662":{"full_prefix_code":[{"time":null,"condition":434,"statement":7019,"branch":2078,"pod":315,"subroutine":364}]},"19443":{"compile":[{"pod":361,"branch":2496,"subroutine":432,"time":null,"statement":8742,"condition":536}]},"15747":{"__ANON__":[{"subroutine":368,"pod":318,"branch":2101,"statement":7079,"condition":440,"time":null}]},"432":{"max":[{"time":null,"statement":72,"condition":1,"branch":5,"pod":11,"subroutine":21}]},"3047":{"read_pathrestriction":[{"branch":440,"pod":99,"subroutine":110,"time":null,"condition":63,"statement":1264}]},"11908":{"verify_subject_name":[{"subroutine":290,"branch":1582,"pod":256,"statement":5288,"condition":309,"time":null}]},"15680":{"__ANON__":[{"statement":7053,"condition":437,"time":null,"subroutine":366,"pod":317,"branch":2090}]},"8784":{"cluster_crosslink_routers":[{"subroutine":231,"pod":201,"branch":1198,"statement":3937,"condition":208,"time":null}]},"8202":{"nat_to_loopback_ok":[{"subroutine":223,"branch":1128,"pod":195,"statement":3701,"condition":194,"time":null}]},"760":{"read_name":[{"subroutine":56,"pod":46,"branch":30,"condition":6,"statement":197,"time":null}]},"9681":{"inherit_attributes_from_area":[{"pod":220,"branch":1314,"subroutine":253,"time":null,"condition":230,"statement":4364}]},"19343":{"init_global_vars":[{"subroutine":425,"branch":2489,"pod":358,"condition":535,"statement":8681,"time":null}]},"6808":{"split_expanded_rule_types":[{"statement":3022,"condition":158,"time":null,"subroutine":199,"pod":180,"branch":949}]},"5880":{"remove_duplicates":[{"condition":116,"statement":2577,"time":null,"subroutine":176,"pod":158,"branch":815}]},"584":{"internal_err":[{"subroutine":38,"pod":28,"branch":19,"statement":134,"condition":1,"time":null}]},"1199":{"check_model":[{"condition":14,"statement":389,"time":null,"subroutine":83,"pod":73,"branch":91}]},"6249":{"expand_special":[{"statement":2739,"condition":126,"time":null,"subroutine":185,"branch":860,"pod":166}]},"2867":{"cache_anonymous_protocol":[{"subroutine":103,"pod":92,"branch":413,"statement":1176,"condition":59,"time":null}]},"6012":{"__ANON__":[{"branch":836,"pod":161,"subroutine":179,"time":null,"statement":2642,"condition":117}]},"205":{"valid_config_key":[{"pod":1,"branch":null,"subroutine":11,"time":null,"condition":null,"statement":31}]},"1043":{"check_flag":[{"subroutine":71,"pod":61,"branch":72,"statement":311,"condition":14,"time":null}]},"19422":{"parse_args":[{"pod":360,"branch":2493,"subroutine":431,"time":null,"statement":8735,"condition":536}]},"1142":{"add_attribute":[{"statement":360,"condition":14,"time":null,"subroutine":79,"branch":81,"pod":69}]},"3136":{"read_isakmp":[{"subroutine":112,"pod":101,"branch":450,"condition":63,"statement":1302,"time":null}]},"3419":{"__ANON__":[{"condition":67,"statement":1480,"time":null,"subroutine":123,"branch":509,"pod":111}]},"4195":{"link_interfaces":[{"time":null,"condition":76,"statement":1787,"branch":584,"pod":138,"subroutine":153}]},"10504":{"setpath":[{"subroutine":273,"branch":1406,"pod":240,"condition":242,"statement":4713,"time":null}]}},"branch":[[213,{"text":"if ($key =~ /^$prefix/)"}],[226,{"text":"$value =~ /^($pattern)$/ ? :"}],[246,{"text":"if (defined $set) { }"}],[257,{"text":"if (defined $set) { }"}],[407,{"text":"unless @_"}],[434,{"text":"if $max < $el"}],[444,{"text":"if ($$aref[$i] eq $elt)"}],[457,{"text":"if @$a1 ne @$a2"}],[459,{"text":"if $$a1[$i] ne $$a2[$i]"}],[466,{"text":"unless keys %$href1 == keys %$href2"}],[468,{"text":"unless exists $$href2{$key}"}],[476,{"text":"unless $config{'verbose'}"}],[482,{"text":"unless $config{'verbose'}"}],[483,{"text":"if ($config{'time_stamps'})"}],[497,{"text":"unless $config{'verbose'}"}],[520,{"text":"if (pos $input == length $input) { }"}],[540,{"text":"if ($error_counter == $config{'max_errors'}) { }"}],[540,{"text":"elsif ($abort_immediately) { }"}],[549,{"text":"if $error_counter"}],[588,{"text":"if ($error_counter)"}],[594,{"text":"if @args"}],[637,{"text":"if ($input =~ /\\G(\\d+)/cg) { }"}],[647,{"text":"unless defined $result"}],[655,{"text":"if ($1 > 255 or $2 > 255 or $3 > 255 or $4 > 255)"}],[654,{"text":"if ($input =~ /\\G(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)/cg) { }"}],[667,{"text":"unless defined $result"}],[677,{"text":"unless defined $mask"}],[678,{"text":"unless match_ip($ip, $ip, $mask)"}],[739,{"text":"if ($input =~ /(\\G[\\w-]+)/cg) { }"}],[750,{"text":"if ($input =~ / ( \\G [\\w-]* [*] ) /cgx) { }"}],[761,{"text":"if ($input =~ /(\\G[^;,\\s\"\"'']+)/cg) { }"}],[772,{"text":"if ($input =~ /\\G([^;,\"\"''\\n]+)/cg) { }"}],[792,{"text":"if check($delimiter)"}],[796,{"text":"if check($delimiter)"}],[798,{"text":"unless $comma_seen"}],[805,{"text":"if $user_ref_error"}],[813,{"text":"unless $input =~ / \\G (\\w+) : /cgx"}],[816,{"text":"if ($input =~ m[ \\G ( [\\w-]+ (?: ( [\\@/] ) [\\w-]+ )? ) ]cgx) { }"}],[826,{"text":"unless $separator eq '@'"}],[829,{"text":"unless $separator eq '/'"}],[825,{"text":"if ($type eq 'router') { }"}],[825,{"text":"elsif ($type eq 'network' or $type eq 'interface') { }"}],[824,{"text":"if ($separator)"}],[871,{"text":"unless $$user_object{'active'}"}],[868,{"text":"if (check('user'))"}],[876,{"text":"unless $input =~ /\\G([\\w-]+):/cg"}],[882,{"text":"if ($interface || $type eq 'host' and check('managed')) { }"}],[882,{"text":"elsif ($type eq 'any' and check('ip')) { }"}],[894,{"text":"unless $input =~ / \\G ( $hostname_regex ) /cgox"}],[899,{"text":"unless $input =~ / \\G ( $network_regex ) /cgox"}],[881,{"text":"if ($input =~ / \\G \\[ /cgox) { }"}],[881,{"text":"elsif ($type eq 'host') { }"}],[881,{"text":"elsif ($type eq 'network') { }"}],[881,{"text":"elsif ($interface and $input =~ / \\G ( [\\w-]+ (?: \\@ [\\w-]+ ) ) /cgx or $input =~ / \\G ( [\\w-]+ ) /cgx) { }"}],[912,{"text":"unless $input =~ / \\G \\. /cgox"}],[915,{"text":"unless $selector =~ /^(auto|all)$/"}],[920,{"text":"if $ext"}],[921,{"text":"unless $input =~ / \\G ( $network_regex ) /cgox"}],[926,{"text":"if ($input =~ / \\G \\. /cgox)"}],[913,{"text":"if ($input =~ / \\G \\[ /cgox) { }"}],[911,{"text":"if ($interface)"}],[931,{"text":"$ext ? :"}],[937,{"text":"if ($input =~ /\\G($user_id_regex)/cog) { }"}],[949,{"text":"if ($input =~ /\\G($hostname_regex)/cog) { }"}],[948,{"text":"if ($input =~ /\\G host:/cgx) { }"}],[963,{"text":"if (check('!')) { }"}],[976,{"text":"if (@result == 1) { }"}],[996,{"text":"unless my $factor = $timeunits{$unit}"}],[1002,{"text":"unless check('description')"}],[1009,{"text":"if (store_description())"}],[1018,{"text":"if ($input =~ /\\G(permit|deny)/cg) { }"}],[1028,{"text":"if ($input =~ /\\G nat:([\\w-]+)/cgx) { }"}],[1044,{"text":"if (check($token)) { }"}],[1057,{"text":"if (wantarray) { }"}],[1055,{"text":"if (check($token))"}],[1076,{"text":"if check(';')"}],[1080,{"text":"if check(';')"}],[1082,{"text":"unless $comma_seen"}],[1089,{"text":"if check(';')"}],[1102,{"text":"if (check($token))"}],[1111,{"text":"if (check($token))"}],[1143,{"text":"if defined $$obj{$key}"}],[1152,{"text":"unless check('radius_attributes')"}],[1156,{"text":"if check('\\\\}')"}],[1158,{"text":"check('=') ? :"}],[1166,{"text":"unless my $protocol = check_assign('routing', \\&read_identifier)"}],[1167,{"text":"unless my $routing = $routing_info{$protocol}"}],[1173,{"text":"unless check('managed')"}],[1180,{"text":"if ($value =~ /^(?:secondary|standard|full|primary|\n\f                           local|local_secondary|routing_only)$/x) { }"}],[1175,{"text":"if (check(';')) { }"}],[1175,{"text":"elsif (check('=')) { }"}],[1199,{"text":"unless my($model, @attributes) = check_assign_list('model', \\&read_name)"}],[1202,{"text":"unless ($info)"}],[1212,{"text":"unless $ext"}],[1213,{"text":"$ext ? :"}],[1215,{"text":"if (@ext_list)"}],[1234,{"text":"if (not $model) { }"}],[1234,{"text":"elsif (not $$model{'can_managed_host'}) { }"}],[1243,{"text":"unless ($hw_name)"}],[1249,{"text":"$$host{'server_name'} ? :"}],[1273,{"text":"if $private"}],[1274,{"text":"if (my($id) = $name =~ /^host:id:(.*)$/)"}],[1285,{"text":"if check('\\\\}')"}],[1290,{"text":"unless $ip1 <= $ip2"}],[1297,{"text":"unless $managed eq 'standard'"}],[1302,{"text":"if $$host{'model'}"}],[1327,{"text":"if $$host{'nat'}{$name}"}],[1319,{"text":"if ($type eq 'nat') { }"}],[1286,{"text":"if (my $ip = check_assign('ip', \\&read_ip)) { }"}],[1286,{"text":"elsif (my($ip1, $ip2) = check_assign_pair('range', '-', \\&read_ip)) { }"}],[1286,{"text":"elsif (my $managed = check_managed()) { }"}],[1286,{"text":"elsif (my $model = check_model()) { }"}],[1286,{"text":"elsif (my $hardware = check_assign('hardware', \\&read_name)) { }"}],[1286,{"text":"elsif (my $server_name = check_assign('server_name', \\&read_name)) { }"}],[1286,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1286,{"text":"elsif (my $radius_attributes = check_radius_attributes()) { }"}],[1286,{"text":"elsif (my $pair = check_typed_name()) { }"}],[1339,{"text":"unless $$host{'ip'} xor $$host{'range'}"}],[1346,{"text":"if $ok{$key}"}],[1342,{"text":"if ($$host{'managed'})"}],[1356,{"text":"if $$host{'radius_attributes'}"}],[1352,{"text":"if ($$host{'id'}) { }"}],[1361,{"text":"if ($$host{'range'})"}],[1360,{"text":"if ($$host{'nat'})"}],[1381,{"text":"if check('\\\\}')"}],[1382,{"text":"if (my($ip, $mask) = check_assign('ip', \\&read_ip_prefix)) { }"}],[1382,{"text":"elsif (check_flag('hidden')) { }"}],[1382,{"text":"elsif (check_flag('identity')) { }"}],[1382,{"text":"elsif (check_flag('dynamic')) { }"}],[1382,{"text":"elsif (my $pair = check_assign('subnet_of', \\&read_typed_name)) { }"}],[1407,{"text":"if grep {$key eq $_;} 'name', 'hidden'"}],[1416,{"text":"if grep {$key eq $_;} 'name', 'identity'"}],[1422,{"text":"unless defined $$nat{'ip'}"}],[1405,{"text":"if ($$nat{'hidden'}) { }"}],[1405,{"text":"elsif ($$nat{'identity'}) { }"}],[1436,{"text":"if $private"}],[1437,{"text":"if ($net_name =~ m[^(.*)/])"}],[1444,{"text":"if check('\\\\}')"}],[1450,{"text":"if defined $$network{'ip'}"}],[1475,{"text":"if (is_host($host)) { }"}],[1475,{"text":"elsif (is_interface($host)) { }"}],[1494,{"text":"if ($other_net ne $network)"}],[1491,{"text":"if (my $other = $hosts{$host_name})"}],[1503,{"text":"if $$network{'nat'} and $$network{'nat'}{$nat_tag}"}],[1445,{"text":"if (my($ip, $mask) = check_assign('ip', \\&read_ip_prefix)) { }"}],[1445,{"text":"elsif (check_flag('unnumbered')) { }"}],[1445,{"text":"elsif (check_flag('has_subnets')) { }"}],[1445,{"text":"elsif (check_flag('crosslink')) { }"}],[1445,{"text":"elsif (my $pair = check_assign('subnet_of', \\&read_typed_name)) { }"}],[1445,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1445,{"text":"elsif (my $radius_attributes = check_radius_attributes()) { }"}],[1445,{"text":"elsif (my $host_name = check_hostname()) { }"}],[1445,{"text":"elsif (my $nat_tag = check_nat_name()) { }"}],[1518,{"text":"unless defined $ip"}],[1525,{"text":"if $ok{$key}"}],[1526,{"text":"$key eq 'nat' ? :"}],[1526,{"text":"$key eq 'hosts' ? :"}],[1538,{"text":"if $ok{$key}"}],[1539,{"text":"$key eq 'hosts' ? :"}],[1546,{"text":"if $$hash{$nat_tag}{'identity'}"}],[1544,{"text":"if (my $hash = $$network{'nat'})"}],[1559,{"text":"unless (match_ip($host_ip, $ip, $mask))"}],[1566,{"text":"unless (match_ip($ip1, $ip, $mask) and match_ip($ip2, $ip, $mask))"}],[1558,{"text":"if (my $host_ip = $$host{'ip'}) { }"}],[1558,{"text":"elsif ($$host{'range'}) { }"}],[1582,{"text":"if (@{$$network{'hosts'};} and $$network{'crosslink'})"}],[1589,{"text":"if $$nat{'dynamic'}"}],[1590,{"text":"unless $$nat{'mask'} == $mask"}],[1585,{"text":"if ($$network{'nat'})"}],[1600,{"text":"unless @{$$network{'hosts'};} == $id_hosts_count"}],[1608,{"text":"if $$network{'radius_attributes'}"}],[1597,{"text":"if (my $id_hosts_count = grep({$$_{'id'};} @{$$network{'hosts'};})) { }"}],[1520,{"text":"if ($ip eq 'unnumbered') { }"}],[1520,{"text":"elsif ($$network{'bridged'}) { }"}],[1637,{"text":"unless (check('='))"}],[1648,{"text":"if check('\\\\}')"}],[1687,{"text":"unless $type eq 'crypto'"}],[1693,{"text":"unless $type eq 'crypto'"}],[1700,{"text":"if $level > 100"}],[1715,{"text":"if $$interface{'nat'}{$name2}"}],[1726,{"text":"if check('\\\\}')"}],[1727,{"text":"if (my $ip = check_assign('ip', \\&read_ip)) { }"}],[1734,{"text":"if ($$secondary{'ip'}) { }"}],[1707,{"text":"if ($type eq 'nat') { }"}],[1707,{"text":"elsif ($type eq 'secondary') { }"}],[1746,{"text":"if $virtual"}],[1757,{"text":"if check('\\\\}')"}],[1762,{"text":"unless $xxrp_info{$type}"}],[1767,{"text":"unless $id =~ /^\\d+$/"}],[1769,{"text":"unless $id < 256"}],[1758,{"text":"if (my $ip = check_assign('ip', \\&read_ip)) { }"}],[1758,{"text":"elsif (my $type = check_assign('type', \\&read_identifier)) { }"}],[1758,{"text":"elsif (my $id = check_assign('id', \\&read_identifier)) { }"}],[1776,{"text":"unless $$virtual{'ip'}"}],[1777,{"text":"if $$virtual{'redundancy_id'} and not $$virtual{'redundancy_type'}"}],[1781,{"text":"if $$interface{'bind_nat'}"}],[1794,{"text":"unless $$_[0] ne 'network'"}],[1794,{"text":"if (grep {ref $$_[1] unless $$_[0] ne 'network';} @pairs)"}],[1649,{"text":"if (my(@ip) = check_assign_list('ip', \\&read_ip)) { }"}],[1649,{"text":"elsif (check_flag('unnumbered')) { }"}],[1649,{"text":"elsif (check_flag('negotiated')) { }"}],[1649,{"text":"elsif (check_flag('loopback')) { }"}],[1649,{"text":"elsif (check_flag('vip')) { }"}],[1649,{"text":"elsif (check_flag('no_in_acl')) { }"}],[1649,{"text":"elsif (check_flag('dhcp_server')) { }"}],[1649,{"text":"elsif (my $pair = check_assign('subnet_of', \\&read_typed_name)) { }"}],[1649,{"text":"elsif (my(@pairs) = check_assign_list('hub', \\&read_typed_name)) { }"}],[1649,{"text":"elsif ($pair = check_assign('spoke', \\&read_typed_name)) { }"}],[1649,{"text":"elsif (my $id = check_assign('id', \\&read_user_id)) { }"}],[1649,{"text":"elsif (defined(my $level = check_assign('security_level', \\&read_int))) { }"}],[1649,{"text":"elsif ($pair = check_typed_name()) { }"}],[1649,{"text":"elsif (check('virtual')) { }"}],[1649,{"text":"elsif (my(@tags) = check_assign_list('bind_nat', \\&read_identifier)) { }"}],[1649,{"text":"elsif (my $hardware = check_assign('hardware', \\&read_name)) { }"}],[1649,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1649,{"text":"elsif (my $routing = check_routing()) { }"}],[1649,{"text":"elsif (@pairs = check_assign_list('reroute_permit', \\&read_typed_name)) { }"}],[1649,{"text":"elsif (check_flag('disabled')) { }"}],[1649,{"text":"elsif (check_flag('no_check')) { }"}],[1814,{"text":"if ($name =~ m[/])"}],[1823,{"text":"if ($ip =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1822,{"text":"if (my $ip = $$interface{'ip'})"}],[1821,{"text":"if ($virtual) { }"}],[1844,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1843,{"text":"if ($$interface{'nat'})"}],[1850,{"text":"if $$interface{'hardware'}"}],[1848,{"text":"if ($$interface{'vip'})"}],[1854,{"text":"if ($$interface{'owner'} and not $$interface{'vip'})"}],[1868,{"text":"$$interface{'vip'} ? :"}],[1866,{"text":"if (keys %copy)"}],[1872,{"text":"$$interface{'vip'} ? :"}],[1871,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1858,{"text":"if ($$interface{'loopback'}) { }"}],[1858,{"text":"elsif ($$interface{'subnet_of'}) { }"}],[1883,{"text":"if (my(@extra) = grep({not $ok{$_};} keys %$interface))"}],[1881,{"text":"if ($$interface{'ip'} eq 'bridged')"}],[1890,{"text":"if @secondary_interfaces"}],[1892,{"text":"if $$interface{'hub'}"}],[1897,{"text":"if $$interface{'id'}"}],[1888,{"text":"if (my $crypto = $$interface{'spoke'}) { }"}],[1901,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1900,{"text":"if (my $crypto_list = $$interface{'hub'})"}],[1909,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1908,{"text":"if (@secondary_interfaces)"}],[1918,{"text":"if $$interface{$key}"}],[1937,{"text":"if (@levels >= 2 and not equal(@levels)) { }"}],[1932,{"text":"if (my(@levels) = grep({defined $_;} map({$$_{'security_level'};} @{$$hardware{'interfaces'};}))) { }"}],[1932,{"text":"elsif ($hwname =~ /inside/) { }"}],[1932,{"text":"elsif ($hwname =~ /outside/) { }"}],[1932,{"text":"elsif (($level) = $hwname =~ /(\\d+)$/ and $level <= 100) { }"}],[1981,{"text":"unless $vrf"}],[1978,{"text":"if (defined $vrf)"}],[1988,{"text":"if check('\\\\}')"}],[1990,{"text":"if $$router{'managed'}"}],[2040,{"text":"if defined $$router{'log'}{$name2}"}],[2042,{"text":"check('=') ? :"}],[2039,{"text":"if ($type eq 'log') { }"}],[2039,{"text":"elsif ($type ne 'interface') { }"}],[2056,{"text":"if ($interfaces{$iname})"}],[2070,{"text":"if $private"}],[1989,{"text":"if (my $managed = check_managed()) { }"}],[1989,{"text":"elsif (my(@filter_only) = check_assign_list('filter_only', \\&read_ip_prefix_pair)) { }"}],[1989,{"text":"elsif (my $model = check_model()) { }"}],[1989,{"text":"elsif (check_flag('no_group_code')) { }"}],[1989,{"text":"elsif (check_flag('no_crypto_filter')) { }"}],[1989,{"text":"elsif (check_flag('no_protect_self')) { }"}],[1989,{"text":"elsif (check_flag('strict_secondary')) { }"}],[1989,{"text":"elsif (check_flag('log_deny')) { }"}],[1989,{"text":"elsif (my $routing = check_routing()) { }"}],[1989,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1989,{"text":"elsif (my $radius_attributes = check_radius_attributes()) { }"}],[1989,{"text":"elsif (my $pair = check_assign('policy_distribution_point', \\&read_typed_name)) { }"}],[1989,{"text":"elsif (my(@list) = check_assign_list('general_permit', \\&read_typed_name_or_simple_protocol)) { }"}],[2082,{"text":"if ($$interface{'vip'} and not $model && $$model{'has_vip'})"}],[2090,{"text":"if ($error)"}],[2101,{"text":"unless ($model)"}],[2109,{"text":"if ($managed eq 'routing_only')"}],[2115,{"text":"if $$router{'vrf'} and not $$model{'can_vrf'}"}],[2127,{"text":"if ($$interface{'ip'} eq 'short')"}],[2139,{"text":"if ($$interface{'ip'} ne 'short')"}],[2136,{"text":"unless ($hw_name)"}],[2153,{"text":"unless aref_eq($$interface{'bind_nat'} || $bind_nat0, $$hardware{'bind_nat'} || $bind_nat0)"}],[2164,{"text":"if (my $nat = $$interface{'bind_nat'})"}],[2169,{"text":"if $hw_name eq 'VIP' and $$model{'has_vip'} and not $$interface{'vip'}"}],[2148,{"text":"if ($hardware = $hardware{$hw_name}) { }"}],[2179,{"text":"unless ($$interface{'loopback'})"}],[2192,{"text":"if $$routing{'name'} eq 'manual'"}],[2191,{"text":"if (my $routing = $$interface{'routing'})"}],[2198,{"text":"if ($all_routing)"}],[2205,{"text":"unless $rname =~ /^(?:manual|dynamic)$/"}],[2201,{"text":"if (my $routing = $$interface{'routing'} and $$interface{'ip'} eq 'unnumbered')"}],[2098,{"text":"if (my $managed = $$router{'managed'})"}],[2213,{"text":"unless $$router{'filter_only'}"}],[2215,{"text":"if $$model{'has_io_acl'}"}],[2212,{"text":"if ($managed =~ /^local/)"}],[2219,{"text":"if $$router{'log_deny'} and not $$model{'can_log_deny'}"}],[2229,{"text":"unless my $modifier = $$hash{$name2}"}],[2231,{"text":"if $$log_modifiers{$modifier}"}],[2236,{"text":"if ($valid) { }"}],[2225,{"text":"if (my $log_modifiers = $$model{'log_modifiers'}) { }"}],[2224,{"text":"if (my $hash = $$router{'log'})"}],[2251,{"text":"if $$router{'no_protect_self'} and not $$model{'need_protect'}"}],[2255,{"text":"if ($$model{'need_protect'})"}],[2259,{"text":"if $$router{'strict_secondary'} and not $managed =~ /secondary$/"}],[2266,{"text":"if (defined $$interface{'security_level'} and not $$model{'has_interface_level'})"}],[2273,{"text":"unless $$model{'crypto'}"}],[2272,{"text":"if ($$interface{'hub'} or $$interface{'spoke'})"}],[2277,{"text":"if ($$interface{'no_check'} and not $$interface{'hub'} && $$model{'do_auth'})"}],[2289,{"text":"unless $$interface{'ip'} eq 'bridged'"}],[2306,{"text":"unless $$layer3_intf{'hardware'}{'name'} eq 'device'"}],[2305,{"text":"if ($$model{'class'} eq 'ASA')"}],[2311,{"text":"if (my($no_ip) = $$layer3_intf{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[2292,{"text":"if (exists $layer3_seen{$layer3_name}) { }"}],[2292,{"text":"elsif ($layer3_intf = $interfaces{$layer3_name}) { }"}],[2340,{"text":"unless my $main = $$interface{'main_interface'}"}],[2341,{"text":"if ($$main{'is_layer3'})"}],[2348,{"text":"if $changed"}],[2337,{"text":"if (keys %layer3_seen)"}],[2351,{"text":"if ($$model{'has_interface_level'})"}],[2355,{"text":"if grep {$$_{'bind_nat'};} @{$$router{'interfaces'};}"}],[2354,{"text":"if ($managed =~ /^local/)"}],[2361,{"text":"unless grep {$$_{'hub'};} @{$$router{'interfaces'};}"}],[2367,{"text":"if grep {$$_{'bind_nat'};} @{$$router{'interfaces'};}"}],[2374,{"text":"if $$router{'radius_attributes'}"}],[2359,{"text":"if ($$model{'do_auth'}) { }"}],[2378,{"text":"if ($$model{'no_crypto_filter'})"}],[2386,{"text":"if (delete $$router{'owner'})"}],[2390,{"text":"if ($$interface{'hub'})"}],[2394,{"text":"if (delete $$interface{'reroute_permit'})"}],[2398,{"text":"if ($$interface{'ip'} eq 'bridged')"}],[2404,{"text":"if ($bridged)"}],[2211,{"text":"if (my $managed = $$router{'managed'}) { }"}],[2422,{"text":"if ($$interface{'redundant'}) { }"}],[2450,{"text":"if (my $private = $$interface{'private'})"}],[2438,{"text":"unless ($networks{$net_name})"}],[2471,{"text":"if ($$interface{$key})"}],[2475,{"text":"if ($interfaces{$iname})"}],[2487,{"text":"if (my $private = $$interface{'private'})"}],[2415,{"text":"if ($$interface{'loopback'}) { }"}],[2415,{"text":"elsif (my $crypto = $$interface{'spoke'}) { }"}],[2496,{"text":"if ($$interface{'spoke'} || $$interface{'hub'} and not $$interface{'no_check'})"}],[2503,{"text":"if @move_locked"}],[2541,{"text":"unless 1 == @{$$hardware{'interfaces'};}"}],[2544,{"text":"if (my $hash = $$orig_router{'radius_attributes'})"}],[2533,{"text":"if ($$orig_router{'managed'})"}],[2559,{"text":"if $private"}],[2564,{"text":"if check('\\\\}')"}],[2580,{"text":"unless $$nat{'dynamic'}"}],[2581,{"text":"if $$aggregate{'nat'}{$nat_name}"}],[2565,{"text":"if (my($ip, $mask) = check_assign('ip', \\&read_ip_prefix)) { }"}],[2565,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[2565,{"text":"elsif (my $link = check_assign('link', \\&read_typed_name)) { }"}],[2565,{"text":"elsif (check_flag('has_unenforceable')) { }"}],[2565,{"text":"elsif (my $nat_name = check_nat_name()) { }"}],[2589,{"text":"unless $$aggregate{'link'}"}],[2594,{"text":"if grep {$key eq $_;} 'name', 'ip', 'mask', 'link', 'is_aggregate', 'private', 'nat'"}],[2592,{"text":"if ($ip) { }"}],[2610,{"text":"unless check('router_attributes')"}],[2614,{"text":"if check('\\\\}')"}],[2615,{"text":"if (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[2615,{"text":"elsif (my $pair = check_assign('policy_distribution_point', \\&read_typed_name)) { }"}],[2615,{"text":"elsif (my(@list) = check_assign_list('general_permit', \\&read_typed_name_or_simple_protocol)) { }"}],[2644,{"text":"if check('\\\\}')"}],[2646,{"text":"unless $$_[0] ne 'interface'"}],[2646,{"text":"if (grep {ref $$_[1] unless $$_[0] ne 'interface';} @elements)"}],[2655,{"text":"unless $$_[0] ne 'interface'"}],[2655,{"text":"if (grep {ref $$_[1] unless $$_[0] ne 'interface';} @elements)"}],[2665,{"text":"if ($$pair[0] ne 'network' or ref $$pair[1])"}],[2679,{"text":"unless $$nat{'dynamic'}"}],[2680,{"text":"if $$area{'nat'}{$nat_name}"}],[2645,{"text":"if (my(@elements) = check_assign_list('border', \\&read_intersection)) { }"}],[2645,{"text":"elsif (@elements = check_assign_list('inclusive_border', \\&read_intersection)) { }"}],[2645,{"text":"elsif (check_flag('auto_border')) { }"}],[2645,{"text":"elsif (my $pair = check_assign('anchor', \\&read_typed_name)) { }"}],[2645,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[2645,{"text":"elsif (my $router_attributes = check_router_attributes($name)) { }"}],[2645,{"text":"elsif (my $nat_name = check_nat_name()) { }"}],[2688,{"text":"if $$area{'border'} || $$area{'inclusive_border'} and $$area{'anchor'}"}],[2691,{"text":"unless $$area{'anchor'} or $$area{'border'} or $$area{'inclusive_border'}"}],[2703,{"text":"if $private"}],[2721,{"text":"if $port1 > 65535"}],[2722,{"text":"if $port1 == 0"}],[2725,{"text":"if $port2 > 65535"}],[2726,{"text":"if $port2 == 0"}],[2727,{"text":"if $port1 > $port2"}],[2729,{"text":"if ($port1 == 1 and $port2 == 65535) { }"}],[2724,{"text":"if (defined(my $port2 = check_int())) { }"}],[2723,{"text":"if (check('-')) { }"}],[2720,{"text":"if (defined(my $port1 = check_int())) { }"}],[2753,{"text":"if ($range ne $aref_tcp_any)"}],[2752,{"text":"if (check(':')) { }"}],[2767,{"text":"if $type > 255"}],[2770,{"text":"if $code > 255"}],[2769,{"text":"if (defined(my $code = check_int())) { }"}],[2780,{"text":"if ($type == 0 or $type == 3 or $type == 11)"}],[2768,{"text":"if (check('/')) { }"}],[2766,{"text":"if (defined(my $type = check_int())) { }"}],[2795,{"text":"if $nr > 255"}],[2796,{"text":"if $nr == 0"}],[2797,{"text":"if ($nr == 1) { }"}],[2797,{"text":"elsif ($nr == 4) { }"}],[2797,{"text":"elsif ($nr == 17) { }"}],[2794,{"text":"if (defined(my $nr = check_int())) { }"}],[2830,{"text":"if ($v1 == $v2) { }"}],[2830,{"text":"elsif ($v1 == 1 and $v2 == 65535) { }"}],[2844,{"text":"if $src_port"}],[2845,{"text":"if $dst_port"}],[2846,{"text":"if $port"}],[2850,{"text":"if (defined(my $code = $$protocol{'code'})) { }"}],[2849,{"text":"if (defined(my $type = $$protocol{'type'}))"}],[2825,{"text":"if ($proto eq 'ip') { }"}],[2825,{"text":"elsif ($proto eq 'tcp' or $proto eq 'udp') { }"}],[2825,{"text":"elsif ($proto eq 'icmp') { }"}],[2869,{"text":"if (my $cached = $protocols{$name}) { }"}],[2884,{"text":"if ($proto eq 'ip') { }"}],[2884,{"text":"elsif ($proto eq 'tcp') { }"}],[2884,{"text":"elsif ($proto eq 'udp') { }"}],[2884,{"text":"elsif ($proto eq 'icmp') { }"}],[2884,{"text":"elsif ($proto eq 'proto') { }"}],[2908,{"text":"if ($name) { }"}],[2921,{"text":"if ($flag =~ /^(src|dst)_(net|any)$/) { }"}],[2921,{"text":"elsif ($flag =~ /^(?:stateless|reversed|oneway|overlaps|no_check_supernet_rules)/) { }"}],[2964,{"text":"if $private"}],[2969,{"text":"if check('user')"}],[2970,{"text":"if (my $sub_owner = check_assign('sub_owner', \\&read_identifier)) { }"}],[2970,{"text":"elsif (my(@other) = check_assign_list('overlaps', \\&read_typed_name)) { }"}],[2970,{"text":"elsif (my $visible = check_assign('visible', \\&read_owner_pattern)) { }"}],[2970,{"text":"elsif (check_flag('multi_owner')) { }"}],[2970,{"text":"elsif (check_flag('unknown_owner')) { }"}],[2970,{"text":"elsif (check_flag('has_unenforceable')) { }"}],[2970,{"text":"elsif (check_flag('disabled')) { }"}],[2998,{"text":"if (check('foreach'))"}],[3005,{"text":"if check('\\\\}')"}],[3015,{"text":"if (my(@list) = check_assign_list('log', \\&read_identifier))"}],[3019,{"text":"unless $src_user or $dst_user"}],[3021,{"text":"if ($$service{'foreach'} and not $src_user && $dst_user)"}],[3026,{"text":"$dst_user ? :"}],[3026,{"text":"$src_user ? :"}],[3034,{"text":"if $log"}],[3006,{"text":"if (my $action = check_permit_deny()) { }"}],[3050,{"text":"if $private"}],[3064,{"text":"if check('\\\\}')"}],[3066,{"text":"unless my $val_descr = $$attr_descr{$attribute}"}],[3072,{"text":"unless grep {$_ eq $val;} @$values"}],[3070,{"text":"if (my $values = $$val_descr{'values'}) { }"}],[3070,{"text":"elsif (my $fun = $$val_descr{'function'}) { }"}],[3087,{"text":"if (my $default = $$description{'default'}) { }"}],[3086,{"text":"unless (defined $$object{$attribute})"}],[3098,{"text":"if (exists $$map{$value})"}],[3096,{"text":"if (my $map = $$description{'map'})"}],[3182,{"text":"if $private"}],[3185,{"text":"if check('\\\\}')"}],[3190,{"text":"if $$crypto{'type'}"}],[3186,{"text":"if (check_flag('detailed_crypto_acl')) { }"}],[3186,{"text":"elsif (my $type = check_assign('type', \\&read_typed_name)) { }"}],[3198,{"text":"unless $$crypto{'type'}"}],[3211,{"text":"if check('\\\\}')"}],[3213,{"text":"if $$owner{'alias'}"}],[3218,{"text":"if $$owner{'admins'}"}],[3223,{"text":"if ($$from_json{'watchers'})"}],[3227,{"text":"if $$owner{'watchers'}"}],[3212,{"text":"if (my $alias = check_assign('alias', \\&read_string)) { }"}],[3212,{"text":"elsif (my(@admins) = check_assign_list('admins', \\&read_name)) { }"}],[3212,{"text":"elsif (my(@watchers) = check_assign_list('watchers', \\&read_name)) { }"}],[3212,{"text":"elsif (check_flag('extend_only')) { }"}],[3212,{"text":"elsif (check_flag('extend_unbounded')) { }"}],[3212,{"text":"elsif (check_flag('extend')) { }"}],[3212,{"text":"elsif (check_flag('show_all')) { }"}],[3248,{"text":"unless $$owner{'extend_only'} and $$owner{'watchers'}"}],[3247,{"text":"unless ($$owner{'admins'})"}],[3274,{"text":"unless my $pair = check_typed_name()"}],[3276,{"text":"unless my $descr = $global_type{$type}"}],[3281,{"text":"if (my $other = $$hash{$name})"}],[3301,{"text":"unless open my $fh, '<', $current_file"}],[3300,{"text":"if (defined $current_file) { }"}],[3327,{"text":"unless valid_config_key($key)"}],[3330,{"text":"if (my $expected = check_config_pair($key, $val))"}],[3338,{"text":"unless opendir my $dh, $path"}],[3339,{"text":"if (grep {$_ eq 'config';} readdir $dh)"}],[3337,{"text":"if (defined $path and -d $path)"}],[3350,{"text":"unless opendir my $dh, $path"}],[3354,{"text":"if $owner_name =~ /^\\./"}],[3355,{"text":"if $owner_name =~ /$config{'ignore_files'}/o"}],[3357,{"text":"unless opendir my $dh, $path"}],[3361,{"text":"if $file =~ /^\\./"}],[3362,{"text":"if $file =~ /$config{'ignore_files'}/o"}],[3364,{"text":"if ($file ne 'watchers')"}],[3368,{"text":"unless open my $fh, '<', $path"}],[3376,{"text":"unless ($owner)"}],[3380,{"text":"if $$owner{'watchers'}"}],[3390,{"text":"unless opendir my $dh, $path"}],[3394,{"text":"if $file =~ /^\\./"}],[3395,{"text":"if $file =~ /$config{'ignore_files'}/o"}],[3397,{"text":"if ($file ne 'owner')"}],[3411,{"text":"unless (defined $path and -d $path)"}],[3421,{"text":"unless opendir my $dh, $path"}],[3423,{"text":"if $file =~ /^\\./"}],[3424,{"text":"if $file =~ /$config{'ignore_files'}/o"}],[3420,{"text":"if (-d $path) { }"}],[3441,{"text":"if ($private)"}],[3440,{"text":"if (my($name) = $path =~ m[([^/]*)\\.private$]) { }"}],[3454,{"text":"unless opendir my $dh, $path"}],[3459,{"text":"unless $can_json"}],[3462,{"text":"if (-e \"$path/JSON/owner\")"}],[3458,{"text":"if (grep {$_ eq 'JSON';} @files)"}],[3469,{"text":"if $file =~ /^\\./"}],[3470,{"text":"if $file =~ /$config{'ignore_files'}/o"}],[3473,{"text":"if $file =~ /^(config|raw|JSON)$/"}],[3478,{"text":"if (keys %$from_json)"}],[3519,{"text":"if $$rule{'for_router'}"}],[3520,{"text":"if $$rule{'stateless'}"}],[3521,{"text":"if $$rule{'stateless_icmp'}"}],[3522,{"text":"if $service"}],[3524,{"text":"$$rule{'deny'} ? :"}],[3525,{"text":"if (my $chain = $$rule{'chain'})"}],[3559,{"text":"unless my $range = $$prt{$where}"}],[3562,{"text":"unless ($range_prt)"}],[3579,{"text":"defined $code ? :"}],[3579,{"text":"defined $type ? :"}],[3580,{"text":"unless $main_prt = $prt_hash{$proto}{$key}"}],[3584,{"text":"unless $main_prt = $prt_hash{$proto}"}],[3591,{"text":"unless $main_prt = $prt_hash{'proto'}{$key}"}],[3548,{"text":"if ($proto eq 'tcp' or $proto eq 'udp') { }"}],[3548,{"text":"elsif ($proto eq 'icmp') { }"}],[3548,{"text":"elsif ($proto eq 'ip') { }"}],[3594,{"text":"if ($main_prt)"}],[3610,{"text":"if (my $prt = $$hash{''})"}],[3617,{"text":"if (not defined $$prt{'type'}) { }"}],[3617,{"text":"elsif (defined $$prt{'code'}) { }"}],[3651,{"text":"unless $$a{'range'}[0] <=> $$b{'range'}[0]"}],[3669,{"text":"if $i == @sorted"}],[3675,{"text":"if ($a2 + 1 == $b1)"}],[3684,{"text":"if $a2 < $b1"}],[3696,{"text":"unless $i"}],[3689,{"text":"if ($a2 >= $b2)"}],[3715,{"text":"if ($i == @sorted)"}],[3723,{"text":"if ($a1 > $b1)"}],[3733,{"text":"if ($a2 < $b2)"}],[3739,{"text":"if ($a2 == $b2)"}],[3729,{"text":"if ($a1 == $b1)"}],[3781,{"text":"unless @sorted"}],[3789,{"text":"unless $a1 == 1 and $a2 == 65535"}],[3794,{"text":"if &$check_subrange($a, $a1, $a2, 1)"}],[3802,{"text":"if (not $prt) { }"}],[3802,{"text":"elsif (my $split = $$prt{'split'}) { }"}],[3861,{"text":"$$_{'prt'} ? :"}],[3902,{"text":"if (my $owner = $owners{$value})"}],[3901,{"text":"if (my $value = $$obj{$key})"}],[3915,{"text":"if ($$owner{'extend_only'})"}],[3914,{"text":"if (my $owner = link_to_owner($obj, $key))"}],[3934,{"text":"unless ($names)"}],[3939,{"text":"if ($$owner{'watching_owners'})"}],[3942,{"text":"if ($names eq 'recursive')"}],[3952,{"text":"unless ($owner_b)"}],[3950,{"text":"if (my($o_name) = $name =~ /^owner:(.*)$/) { }"}],[3984,{"text":"if $$owner{'alias'}"}],[3986,{"text":"if $$other{'alias'}"}],[3982,{"text":"if (my $other = $alias2owner{$alias}) { }"}],[4006,{"text":"unless $email =~ m[^ [\\w.!\\#$%&''*+/=?^_``{|}~-]+ \\@ [\\w.-]+ $]x"}],[4004,{"text":"unless do {\n\tuse bytes;\n$email eq 'guest' unless $email =~ m[^ [\\w.!\\#$%&''*+/=?^_``{|}~-]+ \\@ [\\w.-]+ $]x\n}"}],[4022,{"text":"if (my(@emails) = find_duplicates(@{$$owner{$attr};}))"}],[4028,{"text":"if (my(@duplicates) = find_duplicates(@{$$owner{'admins'};}, @{$$owner{'watchers'};}))"}],[4020,{"text":"if (find_duplicates(@{$$owner{'admins'};}, @{$$owner{'watchers'};}))"}],[4047,{"text":"if (my $router_attributes = $$area{'router_attributes'})"}],[4053,{"text":"unless $$router{'model'}{'has_vip'}"}],[4066,{"text":"unless my $pair = $$obj{'policy_distribution_point'}"}],[4068,{"text":"if ($type ne 'host')"}],[4077,{"text":"unless ($host)"}],[4091,{"text":"unless my $list = $$obj{'general_permit'}"}],[4097,{"text":"ref $a eq 'ARRAY' ? :"}],[4097,{"text":"ref $b eq 'ARRAY' ? :"}],[4114,{"text":"unless $range = $$prt{'range'}"}],[4109,{"text":"if (ref $prt eq 'ARRAY') { }"}],[4118,{"text":"if (my $flags = $$orig_prt{'flags'})"}],[4121,{"text":"if ($src_range or $range and $range ne $aref_tcp_any)"}],[4124,{"text":"if (@reason)"}],[4141,{"text":"if (is_network($obj)) { }"}],[4139,{"text":"if (@elements == 1) { }"}],[4161,{"text":"unless $$area{$attr}"}],[4166,{"text":"unless $$router{'managed'}"}],[4171,{"text":"if (my $main_interface = $$obj{'main_interface'})"}],[4164,{"text":"if (is_interface($obj)) { }"}],[4136,{"text":"if ($$area{'anchor'}) { }"}],[4185,{"text":"if (my $router_attributes = $$area{'router_attributes'})"}],[4203,{"text":"if ($$interface{'disabled'}) { }"}],[4200,{"text":"unless ($network)"}],[4225,{"text":"unless $private1 eq $private2"}],[4224,{"text":"if (my $private2 = $$interface{'private'}) { }"}],[4223,{"text":"if (my $private1 = $$network{'private'})"}],[4258,{"text":"unless $network_ip eq 'unnumbered'"}],[4277,{"text":"unless (match_ip($ip, $network_ip, $mask))"}],[4282,{"text":"unless ($$network{'loopback'})"}],[4290,{"text":"if ($ip == $network_ip)"}],[4294,{"text":"if ($ip == $broadcast)"}],[4281,{"text":"if ($mask == 4294967295) { }"}],[4251,{"text":"if ($ip =~ /^(?:short|tunnel)$/) { }"}],[4251,{"text":"elsif ($ip eq 'unnumbered') { }"}],[4251,{"text":"elsif ($network_ip eq 'unnumbered') { }"}],[4251,{"text":"elsif ($ip eq 'negotiated') { }"}],[4251,{"text":"elsif ($ip eq 'bridged') { }"}],[4318,{"text":"ref $parent ? :"}],[4318,{"text":"!$parent ? :"}],[4322,{"text":"unless $$object{'subnet_of'}"}],[4324,{"text":"if ($type ne 'network')"}],[4333,{"text":"unless ($network)"}],[4347,{"text":"if ($ip eq 'unnumbered')"}],[4358,{"text":"unless (match_ip($sub_ip, $ip, $mask))"}],[4370,{"text":"unless my $nat = $$obj{'nat'}"}],[4387,{"text":"unless $$router{'managed'}"}],[4400,{"text":"unless (is_interface($obj))"}],[4415,{"text":"unless $$router{'managed'}"}],[4418,{"text":"if $$obj{'main_interface'}"}],[4426,{"text":"if $private eq $obj_p"}],[4425,{"text":"if (my $obj_p = $$obj{'private'})"}],[4432,{"text":"if (my $obj_p = $$obj{'private'})"}],[4424,{"text":"if ($private) { }"}],[4438,{"text":"if ($no_private)"}],[4442,{"text":"if ($changed)"}],[4446,{"text":"if ($count == 1) { }"}],[4446,{"text":"elsif ($count == 0) { }"}],[4459,{"text":"unless $$interface{'spoke'} or $$interface{'hub'}"}],[4463,{"text":"if $$interface{'no_check'}"}],[4467,{"text":"unless $real_intf"}],[4468,{"text":"unless $real_intf eq $interface"}],[4497,{"text":"if $$virtual1{'disabled'}"}],[4505,{"text":"if ($type1 ne $type2)"}],[4510,{"text":"unless ($id1 eq ($$virtual2{'redundancy_id'} || ''))"}],[4528,{"text":"if (my $virtual2 = $net2id2type2virtual{$net}{$id1}{$type1}) { }"}],[4527,{"text":"if ($id1)"}],[4502,{"text":"if (my $interfaces = $net2ip2virtual{$net}{$ip}) { }"}],[4554,{"text":"if @$interfaces <= 2"}],[4559,{"text":"if $$interface{'main_interface'}"}],[4560,{"text":"unless my $restricts = $$interface{'path_restrict'}"}],[4562,{"text":"if $seen{$restrict}"}],[4567,{"text":"if @restrict_routers == @virt_routers"}],[4572,{"text":"if (grep {$_ eq $router;} @restrict_routers)"}],[4594,{"text":"if ($$router{'managed'} or $$router{'routing_only'})"}],[4607,{"text":"if ($$network{'ip'} eq 'unnumbered' and $$network{'interfaces'} and @{$$network{'interfaces'};} > 2)"}],[4630,{"text":"if (1 < @{$$interface{'router'}{'interfaces'};})"}],[4637,{"text":"if ($$router{'managed'} || $$router{'routing_only'} and not $$interface{'routing'})"}],[4643,{"text":"unless ($$old_intf{'redundant'} and $$interface{'redundant'})"}],[4642,{"text":"if (my $old_intf = $ip2obj{$ip}) { }"}],[4635,{"text":"unless ($ip =~ /^(?:unnumbered|negotiated|tunnel|bridged)$/)"}],[4627,{"text":"if ($ip eq 'short') { }"}],[4655,{"text":"if ($short_intf and $route_intf)"}],[4664,{"text":"if (my $other_device = $ip2obj{$ip}) { }"}],[4674,{"text":"if (my $other_device = $range2obj{$from}{$to}) { }"}],[4663,{"text":"if (my $ip = $$host{'ip'}) { }"}],[4663,{"text":"elsif (my $range = $$host{'range'}) { }"}],[4687,{"text":"unless is_host($other_device)"}],[4686,{"text":"if (my $other_device = $ip2obj{$ip})"}],[4684,{"text":"if (my $range = $$host{'range'})"}],[4738,{"text":"if (not $network or $$network{'disabled'})"}],[4748,{"text":"if $interface eq $in_interface"}],[4751,{"text":"if ($$interface{'disabled'})"}],[4760,{"text":"if $out_interface eq $interface"}],[4788,{"text":"unless my $prefix = $$network{'bridged'}"}],[4793,{"text":"unless $$network{'disabled'}"}],[4792,{"text":"if (my $network = $networks{$prefix})"}],[4801,{"text":"unless @group"}],[4810,{"text":"unless $ip == $ip1 and $mask == $mask1"}],[4815,{"text":"if $$in_intf{'ip'} ne 'bridged'"}],[4817,{"text":"if $seen{$router}"}],[4821,{"text":"unless match_ip($$layer3_intf{'ip'}, $ip, $mask)"}],[4820,{"text":"if (my $layer3_intf = $$in_intf{'layer3_interface'})"}],[4826,{"text":"if $out_intf eq $in_intf"}],[4827,{"text":"if $$out_intf{'ip'} ne 'bridged'"}],[4829,{"text":"unless $$href{$next_net}"}],[4833,{"text":"unless $count > 1"}],[4838,{"text":"unless $$href{$network} eq 'connected'"}],[4852,{"text":"if $$interface{'router'}{'disabled'}"}],[4854,{"text":"if ($$interface{'router'}{'disabled'})"}],[4869,{"text":"if ($$router{'managed'} or $$router{'routing_only'})"}],[4882,{"text":"unless my $borders = $$area{$attr}"}],[4883,{"text":"if (my(@active_borders) = grep({not $$_{'disabled'};} @$borders))"}],[4877,{"text":"if (my $anchor = $$area{'anchor'}) { }"}],[4889,{"text":"if ($ok) { }"}],[4898,{"text":"if $$router{'disabled'}"}],[4900,{"text":"if ($$router{'managed'}) { }"}],[4900,{"text":"elsif ($$router{'routing_only'}) { }"}],[4912,{"text":"if $$router{'orig_router'}"}],[4917,{"text":"if @$aref == 1"}],[4918,{"text":"$$_{'managed'} || $$_{'routing_only'} ? :"}],[4918,{"text":"unless equal(map({$$_{'managed'} || $$_{'routing_only'} ? $$_{'model'}{'name'} : ();} @$aref))"}],[4929,{"text":"if (my $other = $hardware{$name}) { }"}],[4954,{"text":"if $$interface{'disabled'}"}],[4956,{"text":"unless $seen{$network}++"}],[4962,{"text":"if $$network{'disabled'}"}],[4964,{"text":"if (keys %networks > 1) { }"}],[4963,{"text":"unless ($seen{$network})"}],[4995,{"text":"if (($low & $mask) == 0 and $low + $mask <= $high)"}],[5008,{"text":"if $$network{'ip'} =~ /^(?:unnumbered|tunnel)$/"}],[5021,{"text":"unless $user"}],[5020,{"text":"if (my($user, $dom) = $id =~ /^(.*?)(\\@.*)$/) { }"}],[5019,{"text":"if ($id)"}],[5033,{"text":"if (@ip_mask > 1) { }"}],[5033,{"text":"elsif ($ip_mask[0][1] == 4294967295) { }"}],[5033,{"text":"elsif ($id =~ /^.+\\@/) { }"}],[5032,{"text":"if ($id)"}],[5017,{"text":"if (my $ip = $$host{'ip'}) { }"}],[5017,{"text":"elsif ($$host{'range'}) { }"}],[5065,{"text":"unless ($$nat2{$name} and $$nat{$name} eq $$nat2{$name})"}],[5061,{"text":"if (keys %$nat == keys %$nat2) { }"}],[5055,{"text":"if ($nat xor $nat2) { }"}],[5055,{"text":"elsif ($nat and $nat2) { }"}],[5078,{"text":"if $nat_error"}],[5082,{"text":"if ($owner xor $owner2 or $owner and $owner2 and $owner ne $owner2)"}],[5098,{"text":"if $nat"}],[5099,{"text":"if $private"}],[5100,{"text":"if $owner"}],[5101,{"text":"if ($id)"}],[5052,{"text":"if (my $other_subnet = $inv_prefix_aref[$inv_prefix]{$ip}) { }"}],[5168,{"text":"if $private"}],[5167,{"text":"if (my $private = $$subnet{'private'})"}],[5146,{"text":"if ($up_inv_prefix >= $network_inv_prefix) { }"}],[5146,{"text":"elsif ($up_inv_prefix < @inv_prefix_aref and $up = $inv_prefix_aref[$up_inv_prefix]{$ip}) { }"}],[5142,{"text":"if (my $neighbor = $$ip2subnet{$next_ip})"}],[5122,{"text":"if (not $$subnet{'nat'} || $$subnet{'id'} and $ip % $modulo == 0)"}],[5182,{"text":"if $$subnet{'up'}"}],[5188,{"text":"if (my $up = $inv_prefix_aref[$j]{$ip})"}],[5116,{"text":"if (my $ip2subnet = $inv_prefix_aref[$i])"}],[5219,{"text":"unless ($hash{$up})"}],[5217,{"text":"if ($neighbor = $$subnet{'neighbor'} and $hash{$neighbor})"}],[5227,{"text":"if (@extra) { }"}],[5243,{"text":"unless $$a{'mask'} <=> $$b{'mask'}"}],[5265,{"text":"if (my $orig_router = $$router{'orig_router'}) { }"}],[5265,{"text":"elsif (my $orig_interfaces = $$router{'orig_interfaces'}) { }"}],[5284,{"text":"if (is_router($object)) { }"}],[5297,{"text":"if $$object{'disabled'}"}],[5282,{"text":"unless ($result)"}],[5337,{"text":"unless ($other)"}],[5349,{"text":"if (!$$other{'network'} eq $network)"}],[5348,{"text":"if (not $other and $other = $$info{'i'}{$router})"}],[5334,{"text":"if (is_router($auto)) { }"}],[5326,{"text":"if ($type eq 'Interface') { }"}],[5326,{"text":"elsif ($type eq 'Autointerface') { }"}],[5357,{"text":"if ($other)"}],[5368,{"text":"if (ref $val) { }"}],[5394,{"text":"$$element[0] eq '!' ? :"}],[5403,{"text":"if ($$element[0] eq '!') { }"}],[5410,{"text":"unless @non_compl >= 1"}],[5421,{"text":"if ($$result{$element})"}],[5428,{"text":"if $$element{'disabled'}"}],[5429,{"text":"unless delete $$result{$element}"}],[5446,{"text":"ref $elements eq 'ARRAY' ? :"}],[5451,{"text":"unless ref $ext"}],[5457,{"text":"if $$object{'disabled'}"}],[5467,{"text":"unless $$object{'mask'} == 0"}],[5475,{"text":"unless $$_{'router'}{'managed'}"}],[5462,{"text":"if ($$object{'is_aggregate'}) { }"}],[5462,{"text":"elsif ($managed) { }"}],[5485,{"text":"if ($$object{'is_aggregate'}) { }"}],[5461,{"text":"if ($selector eq 'all') { }"}],[5497,{"text":"if ($managed and not $$router{'managed'} || $$router{'routing_only'}) { }"}],[5497,{"text":"elsif ($selector eq 'all') { }"}],[5529,{"text":"unless ($seen{$router})"}],[5537,{"text":"unless $$_{'managed'}"}],[5544,{"text":"$r ? :"}],[5534,{"text":"if ($managed) { }"}],[5547,{"text":"if ($selector eq 'all') { }"}],[5557,{"text":"if ($managed and not $$obj{'managed'} || $$obj{'routing_only'}) { }"}],[5557,{"text":"elsif ($selector eq 'all') { }"}],[5556,{"text":"if (is_router($obj)) { }"}],[5460,{"text":"if ($type eq 'Network') { }"}],[5460,{"text":"elsif ($type eq 'Interface') { }"}],[5460,{"text":"elsif ($type eq 'Area') { }"}],[5460,{"text":"elsif ($type eq 'Autointerface') { }"}],[5588,{"text":"if $managed"}],[5589,{"text":"if ($selector eq 'all') { }"}],[5585,{"text":"if (my $router = $routers{$name}) { }"}],[5450,{"text":"if (ref $name) { }"}],[5450,{"text":"elsif (ref $ext) { }"}],[5450,{"text":"elsif (my $interface = $interfaces{\"$name.$ext\"}) { }"}],[5614,{"text":"$clean_autogrp ? :"}],[5627,{"text":"if ($type eq 'Area') { }"}],[5627,{"text":"elsif ($type eq 'Network' and $$object{'is_aggregate'}) { }"}],[5647,{"text":"if (not $$object{'is_aggregate'}) { }"}],[5664,{"text":"$$_{'is_aggregate'} ? :"}],[5643,{"text":"if ($type eq 'Host' or $type eq 'Interface') { }"}],[5643,{"text":"elsif ($type eq 'Network') { }"}],[5643,{"text":"elsif (my $aggregates = &$get_aggregates($object, 0, 0)) { }"}],[5681,{"text":"if ($$object{'is_managed_host'}) { }"}],[5692,{"text":"if (my $managed_hosts = $$network{'managed_hosts'})"}],[5677,{"text":"if ($type eq 'Host') { }"}],[5677,{"text":"elsif ($type eq 'Interface') { }"}],[5677,{"text":"elsif (my $networks = &$get_networks($object)) { }"}],[5702,{"text":"if ($managed)"}],[5708,{"text":"if $ext"}],[5728,{"text":"if (@$interfaces > 1)"}],[5724,{"text":"if ($$intf{'router'}{'managed'}) { }"}],[5720,{"text":"if ($$_{'loopback'}) { }"}],[5741,{"text":"$clean_autogrp ? :"}],[5711,{"text":"if (my $networks = &$get_networks($object)) { }"}],[5756,{"text":"$ext ? :"}],[5759,{"text":"if (my $aggregates = &$get_aggregates($object, $ip, $mask)) { }"}],[5759,{"text":"elsif (my $networks = &$get_networks($object)) { }"}],[5672,{"text":"if ($type eq 'host') { }"}],[5672,{"text":"elsif ($type eq 'network') { }"}],[5672,{"text":"elsif ($type eq 'any') { }"}],[5788,{"text":"if $ext"}],[5796,{"text":"$clean_autogrp ? :"}],[5828,{"text":"unless $private1 eq $private2"}],[5827,{"text":"if (my $private2 = $$element{'private'})"}],[5840,{"text":"if ($unique{$obj}++)"}],[5845,{"text":"if (@duplicate)"}],[5802,{"text":"if ($$object{'recursive'}) { }"}],[5802,{"text":"elsif (not $elements) { }"}],[5793,{"text":"if (is_group($object)) { }"}],[5793,{"text":"elsif ($$object{'is_aggregate'} and $$object{'zone'}{'zone_cluster'}) { }"}],[5389,{"text":"if ($type eq '&') { }"}],[5389,{"text":"elsif ($type eq '!') { }"}],[5389,{"text":"elsif ($type eq 'user') { }"}],[5389,{"text":"elsif ($type eq 'interface') { }"}],[5389,{"text":"elsif (ref $name) { }"}],[5389,{"text":"elsif (my $object = $name2object{$type}{$name}) { }"}],[5884,{"text":"if ($seen{$obj}++)"}],[5889,{"text":"if (@duplicate)"}],[5906,{"text":"if ($$object{'disabled'})"}],[5911,{"text":"if $changed"}],[5933,{"text":"if ($$object{'is_tunnel'}) { }"}],[5933,{"text":"elsif ($$object{'has_id_hosts'}) { }"}],[5926,{"text":"if ($$object{'ip'} eq 'unnumbered') { }"}],[5926,{"text":"elsif ($$object{'crosslink'}) { }"}],[5926,{"text":"elsif ($$object{'is_aggregate'}) { }"}],[5942,{"text":"if ($$object{'ip'} =~ /^(short|unnumbered)$/)"}],[5925,{"text":"if (is_network($object)) { }"}],[5925,{"text":"elsif (is_interface($object)) { }"}],[5925,{"text":"elsif (is_area($object)) { }"}],[5949,{"text":"if ($ignore)"}],[5955,{"text":"if $changed"}],[5976,{"text":"unless ($$network{'has_id_hosts'} or $subnet_warning_seen{$subnet}++)"}],[5974,{"text":"if ($$subnet{'mask'} == $$subnet{'network'}{'mask'}) { }"}],[5974,{"text":"elsif (my $host = $subnet2host{$subnet}) { }"}],[5964,{"text":"if (is_host($obj)) { }"}],[6001,{"text":"$convert_hosts eq 'no_combine' ? :"}],[5957,{"text":"if ($convert_hosts) { }"}],[6013,{"text":"$print_type eq 'warn' ? :"}],[6016,{"text":"if $$value{'is_used'}"}],[6020,{"text":"if (my $conf = $config{'check_unused_groups'})"}],[6025,{"text":"if (my $conf = $config{'check_unused_protocols'})"}],[6048,{"text":"if (ref $pair eq 'HASH')"}],[6055,{"text":"if (my $prt = $protocols{$name}) { }"}],[6069,{"text":"if ($elements eq 'recursive') { }"}],[6069,{"text":"elsif (not $$prtgroup{'is_used'}) { }"}],[6067,{"text":"if (my $prtgroup = $protocolgroups{$name}) { }"}],[6054,{"text":"if ($type eq 'protocol') { }"}],[6054,{"text":"elsif ($type eq 'protocolgroup') { }"}],[6108,{"text":"unless ($proto eq 'tcp' or $proto eq 'udp')"}],[6124,{"text":"unless ($aref_list)"}],[6122,{"text":"if ($src_range or $$prt{'flags'} or $$dst_range{'name'} ne $$prt{'name'}) { }"}],[6174,{"text":"if (is_interface($dst) and $$dst{'router'}{'managed'} || $$dst{'router'}{'routing_only'})"}],[6185,{"text":"if ($old_rule)"}],[6208,{"text":"if ($type eq 'Autointerface')"}],[6220,{"text":"if ($$obj{'router'}{'managed'}) { }"}],[6230,{"text":"if ($$obj{'managed'}) { }"}],[6213,{"text":"if ($type eq 'Network') { }"}],[6213,{"text":"elsif ($type eq 'Subnet') { }"}],[6213,{"text":"elsif ($type eq 'Interface') { }"}],[6213,{"text":"elsif ($type eq 'Router') { }"}],[6213,{"text":"elsif ($type eq 'Host') { }"}],[6253,{"text":"if ($$interface{'ip'} eq 'short') { }"}],[6253,{"text":"elsif ($$interface{'ip'} eq 'unnumbered') { }"}],[6251,{"text":"if (is_autointerface($src)) { }"}],[6279,{"text":"if ($$obj{'id'}) { }"}],[6288,{"text":"if ($$obj{'router'}{'managed'} or $$obj{'loopback'}) { }"}],[6275,{"text":"if ($type eq 'Network') { }"}],[6275,{"text":"elsif ($type eq 'Subnet' or $type eq 'Host') { }"}],[6275,{"text":"elsif ($type eq 'Interface') { }"}],[6299,{"text":"if $$network{'ip'} ne 'unnumbered'"}],[6269,{"text":"if ($$flags{'net'})"}],[6309,{"text":"if ($type eq 'Network') { }"}],[6309,{"text":"elsif ($type eq 'Subnet' or $type eq 'Interface' or $type eq 'Host') { }"}],[6304,{"text":"if ($$flags{'any'})"}],[6331,{"text":"unless my $managed_hosts = $$object{'managed_hosts'}"}],[6334,{"text":"if (@extra)"}],[6352,{"text":"if ($$zone{'has_unenforceable'})"}],[6363,{"text":"if $src eq $dst"}],[6369,{"text":"if is_autointerface($src) or is_autointerface($dst)"}],[6379,{"text":"$$src{'ip'} > $$dst{'ip'} ? :"}],[6380,{"text":"if ($$a{'ip'} + complement_32bit($$a{'mask'}) + 1 == $$b{'ip'})"}],[6378,{"text":"if ($$src{'network'} eq $$dst{'network'})"}],[6390,{"text":"if zone_eq($$src{'zone'}, $$dst{'zone'}) and $$src{'ip'} == $$dst{'ip'} and $$src{'mask'} == $$dst{'mask'}"}],[6398,{"text":"if zone_eq($$src{'zone'}, get_zone($dst))"}],[6401,{"text":"if zone_eq($$dst{'zone'}, get_zone($src))"}],[6365,{"text":"if (is_router($zone)) { }"}],[6365,{"text":"elsif (is_subnet($src) and is_subnet($dst)) { }"}],[6365,{"text":"elsif ($$src{'is_aggregate'} and $$dst{'is_aggregate'}) { }"}],[6365,{"text":"elsif ($$src{'is_aggregate'} and $$src{'mask'} == 0) { }"}],[6365,{"text":"elsif ($$dst{'is_aggregate'} and $$dst{'mask'} == 0) { }"}],[6365,{"text":"elsif ($$dst{'managed_hosts'}) { }"}],[6417,{"text":"if ($$service{'has_unenforceable'} and not $$service{'seen_unenforceable'} && $$service{'seen_enforceable'})"}],[6422,{"text":"unless $config{'check_unenforceable'}"}],[6423,{"text":"if $$service{'disabled'}"}],[6425,{"text":"$config{'check_unenforceable'} eq 'warn' ? :"}],[6432,{"text":"if ($$service{'seen_unenforceable'} or $$service{'silent_unenforceable'})"}],[6429,{"text":"unless (delete $$service{'seen_enforceable'})"}],[6438,{"text":"if $$service{'has_unenforceable'}"}],[6440,{"text":"if (my $hash = delete $$service{'seen_unenforceable'})"}],[6456,{"text":"unless $$zone{'has_unenforceable'}"}],[6457,{"text":"if $$zone{'seen_unenforceable'}"}],[6459,{"text":"$agg00 ? :"}],[6466,{"text":"unless @deleted_rules"}],[6474,{"text":"if $$prt1{'flags'}{'overlaps'} and $$prt2{'flags'}{'overlaps'}"}],[6480,{"text":"if ($oservice eq $overlap)"}],[6478,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6488,{"text":"if ($service eq $overlap)"}],[6486,{"text":"if (my $overlaps = $$oservice{'overlaps'})"}],[6503,{"text":"$action eq 'warn' ? :"}],[6502,{"text":"if (my $action = $config{'check_duplicate_rules'})"}],[6524,{"text":"unless $$rule{'rule'}"}],[6525,{"text":"unless $$other{'rule'}"}],[6529,{"text":"if $$prt1{'flags'}{'overlaps'} and $$prt2{'flags'}{'overlaps'}"}],[6532,{"text":"if ($$rule{'managed_intf'} and not $$rule{'deleted'}{'managed_intf'})"}],[6541,{"text":"if ($$router{'managed'} or $$router{'routing_only'})"}],[6539,{"text":"if (is_interface($src))"}],[6548,{"text":"unless ($oservice)"}],[6554,{"text":"if ($oservice eq $overlap)"}],[6552,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6565,{"text":"unless @deleted_rules"}],[6581,{"text":"$action eq 'warn' ? :"}],[6580,{"text":"if (my $action = $config{'check_redundant_rules'})"}],[6608,{"text":"if $$service{'disabled'}"}],[6612,{"text":"if $$overlap{'disabled'}"}],[6613,{"text":"unless $$used{$overlap}"}],[6609,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6627,{"text":"unless my $log = $$router{'log'}"}],[6638,{"text":"if $known_log{$tag}"}],[6673,{"text":"if (@$log) { }"}],[6671,{"text":"if ($log)"}],[6682,{"text":"$foreach ? :"}],[6702,{"text":"if (ref $prt eq 'ARRAY') { }"}],[6702,{"text":"elsif (my $main_prt = $$prt{'main'}) { }"}],[6710,{"text":"$orig_prt ? :"}],[6712,{"text":"$$flags{'reversed'} ? :"}],[6721,{"text":"if ($src_zone eq $dst_zone or $src_zone_cluster and $dst_zone_cluster and $src_zone_cluster eq $dst_zone_cluster)"}],[6736,{"text":"unless my(@src) = expand_special($src, $dst, $$flags{'src'}, $context)"}],[6746,{"text":"unless $src_p and $src_p eq $private or $dst_p and $dst_p eq $private"}],[6754,{"text":"if $$src{'private'}"}],[6759,{"text":"if $$dst{'private'}"}],[6743,{"text":"if ($private) { }"}],[6765,{"text":"if $disabled"}],[6773,{"text":"if $stateless"}],[6774,{"text":"if $deny"}],[6775,{"text":"if $src_range"}],[6776,{"text":"if $log"}],[6777,{"text":"if $orig_prt"}],[6778,{"text":"if $$flags{'oneway'}"}],[6779,{"text":"if $$flags{'no_check_supernet_rules'}"}],[6781,{"text":"if $$flags{'stateless_icmp'}"}],[6813,{"text":"if ($$rule{'deny'}) { }"}],[6813,{"text":"elsif ($$rule{'src'}{'is_supernet'} or $$rule{'dst'}{'is_supernet'}) { }"}],[6832,{"text":"if $convert_hosts"}],[6848,{"text":"if (!$type eq 'service') { }"}],[6848,{"text":"elsif (my $other = $services{$oname}) { }"}],[6844,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6869,{"text":"unless (grep {/^$prefix/;} keys %owners)"}],[6868,{"text":"if ($prefix)"}],[6867,{"text":"if (my($prefix) = $visible =~ /^ (\\S*) [*] $/x)"}],[6866,{"text":"if (my $visible = $$service{'visible'})"}],[6909,{"text":"unless $p1 <= 22 and 22 <= $p2"}],[6920,{"text":"if ($pdp_src = $host2pdp_src{$host})"}],[6932,{"text":"unless my $pdp = $$router{'policy_distribution_point'}"}],[6933,{"text":"if $$router{'orig_router'}"}],[6942,{"text":"unless my $sub_rule_tree = $rule_tree{$stateless}{$deny}{$src_range}{$src}"}],[6949,{"text":"if $$interface{'vip'}"}],[6952,{"text":"unless $$sub_rule_tree{$interface}{$prt}"}],[6971,{"text":"if ($found_interfaces{$front})"}],[6978,{"text":"unless (@result)"}],[6984,{"text":"unless @result"}],[6960,{"text":"if (keys %found_interfaces == 1) { }"}],[6996,{"text":"if $seen{$router}"}],[6997,{"text":"unless $$router{'policy_distribution_point'}"}],[6998,{"text":"if $$router{'orig_router'}"}],[7001,{"text":"unless ($$member{'admin_ip'})"}],[7009,{"text":"unless !$$a{'admin_ip'} <=> !$$b{'admin_ip'}"}],[7018,{"text":"unless $$router{'admin_ip'}"}],[6999,{"text":"if (my $vrf_members = $$router{'vrf_members'}) { }"}],[7024,{"text":"if (@unreachable > 4)"}],[7023,{"text":"if (@unreachable)"}],[7044,{"text":"if (my $cluster = $$zone{'zone_cluster'})"}],[7050,{"text":"if $$zone{'owner'}"}],[7057,{"text":"if $$network{'ip'} eq 'tunnel'"}],[7059,{"text":"unless $net_owner"}],[7061,{"text":"if $net_owner ne $owner"}],[7060,{"text":"if ($owner) { }"}],[7067,{"text":"if ($owner)"}],[7078,{"text":"unless my(@implicit_owner_zones) = grep({$zone_got_net_owners{$_};} @$cluster)"}],[7080,{"text":"unless (@implicit_owner_zones == @$cluster and equal(map({$$_{'owner'};} @implicit_owner_zones)))"}],[7098,{"text":"unless my(@areas) = values %{$$zone{'areas'};}"}],[7121,{"text":"if (my $super = $$area{'subset_of'})"}],[7129,{"text":"if ($zone2area{$zone} eq $area)"}],[7143,{"text":"unless ($$router{'managed'} or $$router{'routing_only'})"}],[7154,{"text":"unless my $subnets = $$network{'networks'}"}],[7191,{"text":"unless ($zone_got_net_owners{$upper_node})"}],[7199,{"text":"if ($$upper_owner{'extend'})"}],[7190,{"text":"if ($owner eq $upper_owner) { }"}],[7189,{"text":"if ($upper_owner)"}],[7205,{"text":"if $extend"}],[7206,{"text":"if $extend_only"}],[7184,{"text":"if (not $owner) { }"}],[7210,{"text":"if (my $upper_extend = $$extend_only[0])"}],[7209,{"text":"unless ($owner and $$owner{'extend_only'})"}],[7215,{"text":"if ($owner and $$owner{'extend_only'}) { }"}],[7215,{"text":"elsif ($owner) { }"}],[7224,{"text":"unless my $childs = $tree{$node}"}],[7243,{"text":"if $zone_got_net_owners{$node}"}],[7247,{"text":"$owner_list eq $ext ? :"}],[7252,{"text":"if $$e_owner{'extend_unbounded'}"}],[7253,{"text":"if grep {$e_owner eq $_;} @$other"}],[7245,{"text":"if ($node1) { }"}],[7267,{"text":"if ($combined and @$combined)"}],[7274,{"text":"if ($node_owner ne $owner)"}],[7278,{"text":"if (@invalid)"}],[7270,{"text":"if ($$owner{'show_all'})"}],[7291,{"text":"unless my $attributes = $$area{'router_attributes'}"}],[7292,{"text":"unless my $owner = $$attributes{'owner'}"}],[7296,{"text":"if ($r_owner eq $owner)"}],[7295,{"text":"if (my $r_owner = $$router{'owner'}) { }"}],[7309,{"text":"unless my $owner = $$router{'owner'}"}],[7324,{"text":"unless $$interface{'loopback'}"}],[7325,{"text":"unless my $owner = $$interface{'owner'}"}],[7328,{"text":"if $managed"}],[7339,{"text":"if $$aggregate{'owner'}"}],[7342,{"text":"unless $$up{'is_aggregate'}"}],[7344,{"text":"$up ? :"}],[7354,{"text":"unless is_autointerface($src)"}],[7374,{"text":"$config{'check_service_unknown_owner'} eq 'warn' ? :"}],[7382,{"text":"if ($unknown2services{$up} and $unknown2services{$obj} eq $unknown2services{$up})"}],[7413,{"text":"if ($has_user eq 'both')"}],[7418,{"text":"if $what eq $has_user"}],[7433,{"text":"if (@objects) { }"}],[7432,{"text":"if ($is_coupling) { }"}],[7451,{"text":"if ($owner) { }"}],[7466,{"text":"if keys %$service_owners == 1 and $$service_owners{$sub_owner}"}],[7464,{"text":"if (my $sub_owner = $$service{'sub_owner'})"}],[7471,{"text":"$is_coupling ? :"}],[7485,{"text":"$config{'check_service_multi_owner'} eq 'warn' ? :"}],[7485,{"text":"$config{'check_service_multi_owner'} ? :"}],[7476,{"text":"if ($$service{'multi_owner'}) { }"}],[7475,{"text":"if ($multi_count > 1 xor $$service{'multi_owner'})"}],[7501,{"text":"if ($config{'check_service_unknown_owner'})"}],[7497,{"text":"if ($$service{'unknown_owner'}) { }"}],[7494,{"text":"if ($unknown_owners and keys %$unknown_owners xor $$service{'unknown_owner'})"}],[7514,{"text":"unless delete $$owner{'is_used'}"}],[7534,{"text":"if $$network{'nat_domain'}"}],[7542,{"text":"if $interface eq $in_interface"}],[7544,{"text":"if $$interface{'main_interface'}"}],[7553,{"text":"if $out_interface eq $interface"}],[7565,{"text":"if $$router{'active_path'}"}],[7568,{"text":"if $$out_interface{'main_interface'}"}],[7583,{"text":"if $$err_seen{$old_nat_tags}{$nat_tags}++"}],[7582,{"text":"unless (aref_eq($old_nat_tags, $nat_tags))"}],[7581,{"text":"if (my $old_nat_tags = $$router{'nat_tags'}{$domain})"}],[7557,{"text":"if (aref_eq($out_nat_tags, $nat_tags)) { }"}],[7614,{"text":"if ($$domain{'active_path'})"}],[7623,{"text":"if $$nat_set{$nat_tag}"}],[7630,{"text":"if ($$nat_set{$nat_tag2})"}],[7627,{"text":"if (my $aref = $$nat_tags2multi{$nat_tag})"}],[7645,{"text":"unless my $nat = $$network{'nat'}"}],[7646,{"text":"unless $$nat{$nat_tag}"}],[7662,{"text":"if $router eq $in_router"}],[7667,{"text":"if grep {$_ eq $nat_tag;} @$in_nat_tags"}],[7672,{"text":"if $out_domain eq $domain"}],[7679,{"text":"if ($$router{'active_path'})"}],[7676,{"text":"if (grep {$_ eq $nat_tag;} @$out_nat_tags)"}],[7691,{"text":"if $out_domain eq $domain"}],[7699,{"text":"if $nat_tag2 eq $nat_tag"}],[7700,{"text":"unless $$href{$nat_tag2}"}],[7719,{"text":"unless ($$next_info{'dynamic'})"}],[7712,{"text":"if ($$nat_info{'hidden'}) { }"}],[7712,{"text":"elsif ($$nat_info{'dynamic'}) { }"}],[7696,{"text":"if (my $aref = $$nat_tags2multi{$nat_tag})"}],[7732,{"text":"if (my $err_path = distribute_nat1($out_domain, $nat_tag, $nat_tags2multi, $router))"}],[7745,{"text":"if (my $err_path = distribute_nat1($domain, $nat_tag, $nat_tags2multi, $in_router))"}],[7762,{"text":"unless my $href = $$network{'nat'}"}],[7765,{"text":"unless ($$nat_network{'hidden'})"}],[7798,{"text":"unless my $href = $$network{'nat'}"}],[7805,{"text":"if $err_shown"}],[7832,{"text":"unless keys_eq($href, $href2)"}],[7830,{"text":"if ($has_non_hidden{$nat_tag})"}],[7840,{"text":"if keys_eq($href, $href2)"}],[7848,{"text":"if $nat_tag2 eq $nat_tag"}],[7852,{"text":"if $all_hidden{$href2}"}],[7856,{"text":"if ($$href2{$nat_tag2})"}],[7864,{"text":"unless ($$href2{$nat_tag2})"}],[7855,{"text":"if ($has_non_hidden{$nat_tag2}) { }"}],[7844,{"text":"if (grep {$has_non_hidden{$_};} %$href) { }"}],[7884,{"text":"if ($common_size eq keys %$href) { }"}],[7884,{"text":"elsif ($common_size eq keys %$href2) { }"}],[7826,{"text":"if (my $aref = $nat_tags2multi{$nat_tag})"}],[7908,{"text":"if @$aref > 1"}],[7910,{"text":"if keys %$href > 1"}],[7916,{"text":"if $$network{'is_aggregate'}"}],[7917,{"text":"if $$network{'nat_domain'}"}],[7942,{"text":"unless my $aref = $nat_tags2multi{$nat_tag}"}],[7944,{"text":"if $$href{$_}"}],[7945,{"text":"unless @tags >= 2"}],[7939,{"text":"if (@$nat_tags >= 2)"}],[7960,{"text":"if ($nat_definitions{$nat_tag}) { }"}],[7986,{"text":"unless (match_ip($obj_ip, $ip, $mask))"}],[7981,{"text":"if ($nat_network = $$network{'nat'}{$nat_tag} and $$nat_network{'dynamic'}) { }"}],[7978,{"text":"if ($$obj{'nat'})"}],[8002,{"text":"unless $nat_definitions{$name} eq 'used'"}],[8009,{"text":"unless my $nat = $$network{'nat'}"}],[8012,{"text":"unless $$nat_info{'dynamic'}"}],[8017,{"text":"if $intf_nat and $$intf_nat{$nat_tag}"}],[8020,{"text":"unless $$router{'need_protect'}"}],[8022,{"text":"unless my $bind = $$bind_intf{'bind_nat'}"}],[8023,{"text":"unless grep {$_ eq $nat_tag;} @$bind"}],[8045,{"text":"if $partitions{$domain}"}],[8050,{"text":"if $out_domain eq $domain"}],[8066,{"text":"unless my $href = $$network{'nat'}"}],[8094,{"text":"unless $$router{'managed'} or $$router{'semi_managed'}"}],[8098,{"text":"if $$router{'managed'} or $$router{'routing_only'}"}],[8114,{"text":"if $$tunnel{'disabled'}"}],[8117,{"text":"if $seen{$real_intf}++"}],[8118,{"text":"unless $$real_intf{'router'}{'managed'}"}],[8120,{"text":"unless keys %$tunnel_set"}],[8126,{"text":"if ref $hardware"}],[8141,{"text":"if $$no_nat_set{$tag}"}],[8139,{"text":"if (my $href = $$network{'nat'} and $no_nat_set)"}],[8157,{"text":"if $$network{'is_aggregate'} or $$subnet{'is_aggregate'}"}],[8172,{"text":"if (grep {$_ eq $nat_tag2;} @$nat_tags and $$object{'ip'} == $$subnet{'ip'} and $$subnet{'mask'} == 4294967295)"}],[8169,{"text":"if (my $nat_tags = $$object{'bind_nat'} and my($nat_tag2) = $$subnet{'name'} =~ /^nat:(.*)\\(/)"}],[8161,{"text":"if (match_ip($ip1, $sub_ip, $sub_mask) or $ip2 and match_ip($ip2, $sub_ip, $sub_mask) || $ip1 <= $sub_ip && $sub_ip <= $ip2)"}],[8185,{"text":"if $ip =~ /^(?:unnumbered|negotiated|tunnel|short|bridged)$/"}],[8189,{"text":"if (my $ip = $$host{'ip'}) { }"}],[8189,{"text":"elsif (my $range = $$host{'range'}) { }"}],[8218,{"text":"if (grep {$_ eq $nat_tag1;} @$nat_tags)"}],[8217,{"text":"if (my $nat_tags = $$all_intf{'bind_nat'})"}],[8257,{"text":"if $seen{$no_nat_set}++"}],[8266,{"text":"if $$network{'ip'} =~ /^(?:unnumbered|tunnel)$/"}],[8272,{"text":"if $$no_nat_set{$tag}"}],[8270,{"text":"if (my $href = $$network{'nat'})"}],[8280,{"text":"unless my $other = $$network{'up'}"}],[8281,{"text":"if get_nat_network($other, $no_nat_set)->{'hidden'}"}],[8279,{"text":"if ($$nat_network{'hidden'})"}],[8293,{"text":"if (my $other_net = $mask_ip_hash{$mask}{$ip}) { }"}],[8312,{"text":"unless @mask_list"}],[8325,{"text":"unless my $bignet = $mask_ip_hash{$m}{$i}"}],[8333,{"text":"unless $$subnet{'networks'}"}],[8335,{"text":"$$subnet{'is_aggregate'} ? :"}],[8345,{"text":"if ($other ne $bignet)"}],[8344,{"text":"if (my $other = $$subnet{'up'}) { }"}],[8328,{"text":"if ($interface eq $first_intf) { }"}],[8371,{"text":"if (my $other = $$subnet{'up'})"}],[8370,{"text":"if ($interface ne $first_intf)"}],[8392,{"text":"unless $network"}],[8393,{"text":"if (my $max_net = $max_up_net{$network})"}],[8397,{"text":"unless ($$network{'is_aggregate'})"}],[8396,{"text":"if (my $max_net = &$set_max_net($$network{'up'}))"}],[8404,{"text":"if ($$network{'is_aggregate'})"}],[8416,{"text":"unless my $max = $max_up_net{$network}"}],[8426,{"text":"if (my $aref = $net2zone_nat_tags{$network})"}],[8442,{"text":"unless keys %$nat == keys %$up_nat"}],[8444,{"text":"unless my $up_nat_info = $$up_nat{$tag}"}],[8447,{"text":"unless $$up_nat_info{'hidden'}"}],[8453,{"text":"if $$up_nat_info{'hidden'}"}],[8455,{"text":"unless match_ip($$up_nat_info{'ip'}, $ip, $mask)"}],[8456,{"text":"unless $$up_nat_info{'mask'} >= $mask"}],[8446,{"text":"if ($$nat_info{'hidden'}) { }"}],[8459,{"text":"unless ($$up{'is_aggregate'})"}],[8464,{"text":"if ($max_routing)"}],[8511,{"text":"if $$network{'ip'} =~ /^(?:unnumbered|tunnel)$/"}],[8513,{"text":"if $$nat_network{'hidden'}"}],[8526,{"text":"if (not $$old_net{'is_aggregate'}) { }"}],[8526,{"text":"elsif (not $$network{'is_aggregate'}) { }"}],[8522,{"text":"if ($$old_net{'zone'} eq $$network{'zone'}) { }"}],[8545,{"text":"unless nat_to_loopback_ok($old_net, $nat_network)"}],[8548,{"text":"unless nat_to_loopback_ok($network, $nat_old_net)"}],[8521,{"text":"if ($$old_net{'is_aggregate'} or $$network{'is_aggregate'}) { }"}],[8521,{"text":"elsif ($$nat_old_net{'dynamic'} and $$nat_network{'dynamic'}) { }"}],[8521,{"text":"elsif ($$old_net{'loopback'} and $$nat_network{'dynamic'}) { }"}],[8521,{"text":"elsif ($$nat_old_net{'dynamic'} and $$network{'loopback'}) { }"}],[8521,{"text":"elsif (($$network{'bridged'} || 0) eq ($$old_net{'bridged'} || 1)) { }"}],[8558,{"text":"if ($error) { }"}],[8518,{"text":"if (my $old_net = $mask_ip_hash{$mask}{$ip}) { }"}],[8593,{"text":"unless @mask_list"}],[8608,{"text":"unless my $bignet = $mask_ip_hash{$m}{$i}"}],[8618,{"text":"if ($$subnet{'has_other_subnet'})"}],[8617,{"text":"if ($$bignet{'zone'} eq $$subnet{'zone'}) { }"}],[8633,{"text":"if ($seen{$nat_bignet}{$nat_subnet})"}],[8664,{"text":"if ($config{'check_subnets'} eq 'warn') { }"}],[8643,{"text":"unless ($$bignet{'is_aggregate'} or $$subnet{'is_aggregate'} or $$bignet{'has_subnets'} or $$nat_subnet{'subnet_of'} and $$nat_subnet{'subnet_of'} eq $bignet or $$nat_subnet{'is_layer3'})"}],[8638,{"text":"if ($config{'check_subnets'})"}],[8688,{"text":"unless my $max = $$network{'max_routing_net'}"}],[8689,{"text":"unless ($$max{'has_other_subnet'})"}],[8700,{"text":"unless ($$up{'is_aggregate'})"}],[8696,{"text":"if ($$up{'has_other_subnet'}) { }"}],[8706,{"text":"if $max_secondary"}],[8731,{"text":"unless 1 == grep({not $$_{'main_interface'};} @{$$hardware{'interfaces'};})"}],[8724,{"text":"if (delete $$interface{'no_in_acl'})"}],[8741,{"text":"unless $counter"}],[8744,{"text":"unless $counter == 1"}],[8749,{"text":"unless $$router{'model'}{'has_out_acl'}"}],[8753,{"text":"unless $$_{'hub'}"}],[8753,{"text":"if (grep {$$_{'spoke'} unless $$_{'hub'};} @{$$router{'interfaces'};})"}],[8760,{"text":"unless $$hardware{'no_in_acl'}"}],[8796,{"text":"unless $$network{'crosslink'}"}],[8797,{"text":"if $$network{'disabled'}"}],[8799,{"text":"if $out_intf eq $in_intf"}],[8801,{"text":"if $cluster{$router2}"}],[8809,{"text":"if $seen{$router}"}],[8844,{"text":"unless $$network{'crosslink'}"}],[8845,{"text":"if $$network{'disabled'}"}],[8854,{"text":"if $$interface{'main_interface'}"}],[8859,{"text":"unless ($$router{'managed'})"}],[8864,{"text":"unless 1 == grep({not $$_{'main_interface'};} @{$$hardware{'interfaces'};})"}],[8871,{"text":"unless my $strength = $crosslink_strength{$managed}"}],[8875,{"text":"if ($$router{'need_protect'})"}],[8879,{"text":"if ($$hardware{'need_out_acl'})"}],[8894,{"text":"if ($weakest == $crosslink_strength{'local'} and $strength2intf{$crosslink_strength{'secondary'}})"}],[8888,{"text":"if (my($weakest) = (sort numerically keys %strength2intf))"}],[8903,{"text":"unless not $out_acl_count or $out_acl_count == @{$$network{'interfaces'};}"}],[8906,{"text":"unless equal(map({$$_{'zone'};} @no_in_acl_intf))"}],[8923,{"text":"unless $$router{'managed'} =~ /^local/"}],[8924,{"text":"if $seen{$router}"}],[8939,{"text":"$zone_cluster ? :"}],[8940,{"text":"if $$zone{'disabled'}"}],[8941,{"text":"if $$zone{'local_mark'}"}],[8953,{"text":"if $mask == 0 and $$network{'is_aggregate'}"}],[8956,{"text":"if ($mask >= $m and match_ip($ip, $i, $m))"}],[8965,{"text":"if $out_intf eq $in_intf"}],[8967,{"text":"unless my $managed = $$router2{'managed'}"}],[8968,{"text":"unless $managed =~ /^local/"}],[8969,{"text":"if $seen{$router2}"}],[8977,{"text":"unless $k2 eq $k"}],[8993,{"text":"if $matched{\"$i/$m\"}"}],[9011,{"text":"unless my $group = $$interface{'reroute_permit'}"}],[9018,{"text":"if (not zone_eq($net_zone, $zone)) { }"}],[9016,{"text":"if (is_network($obj)) { }"}],[9047,{"text":"unless my $managed_hosts = $$network{'managed_hosts'}"}],[9059,{"text":"if $$network{'mask'} > $mask"}],[9060,{"text":"unless my $managed_hosts = $$network{'managed_hosts'}"}],[9045,{"text":"if (@$networks) { }"}],[9095,{"text":"if $$zone{'is_tunnel'}"}],[9096,{"text":"if $$zone{'has_id_hosts'}"}],[9098,{"text":"if ($$zone{'disabled'}) { }"}],[9127,{"text":"unless my $subnets = $$network{'networks'}"}],[9141,{"text":"unless match_ip($i, $ip, $mask)"}],[9145,{"text":"if $$up{'mask'} >= $mask"}],[9144,{"text":"if (my $up = $$obj{'up'})"}],[9150,{"text":"$$obj{'is_aggregate'} ? :"}],[9158,{"text":"unless match_ip($ip, $i, $m)"}],[9168,{"text":"if $owner = $$up{'owner'}"}],[9172,{"text":"if $owner"}],[9199,{"text":"if ($type ne 'network')"}],[9207,{"text":"unless ($network)"}],[9213,{"text":"if ($$network{'disabled'})"}],[9226,{"text":"unless $private1 eq $private2"}],[9234,{"text":"$cluster ? :"}],[9235,{"text":"if (my $other = $$zone2{'ipmask2aggregate'}{$key})"}],[9242,{"text":"if ($cluster)"}],[9255,{"text":"$cluster ? :"}],[9254,{"text":"if (my $v = delete $$aggregate{$attr})"}],[9252,{"text":"if ($mask == 0)"}],[9290,{"text":"if $$zone{'ipmask2aggregate'}{$key}"}],[9303,{"text":"if ($implicit) { }"}],[9328,{"text":"if $$_{'mask'} == $mask"}],[9328,{"text":"$cluster ? :"}],[9332,{"text":"if @networks > 1"}],[9340,{"text":"if $cluster"}],[9348,{"text":"if $prefix != 0"}],[9356,{"text":"if (my $private = $$zone{'private'})"}],[9360,{"text":"if $cluster"}],[9328,{"text":"if (my(@networks) = grep({$$_{'ip'} == $ip if $$_{'mask'} == $mask;} map({@{$$_{'networks'};};} $cluster ? @$cluster : $zone))) { }"}],[9322,{"text":"unless ($$zone{'ipmask2aggregate'}{$key})"}],[9363,{"text":"if ($cluster) { }"}],[9377,{"text":"unless $$_{'ipmask2aggregate'}{$key}"}],[9390,{"text":"if ($$network{'zone'})"}],[9396,{"text":"unless ($$network{'ip'} =~ /^(?:unnumbered|tunnel)$/)"}],[9402,{"text":"if $$network{'ip'} eq 'tunnel'"}],[9403,{"text":"if $$network{'has_id_hosts'}"}],[9409,{"text":"if ($private1 ne $private2)"}],[9407,{"text":"if ($$zone{'private'})"}],[9423,{"text":"if $interface eq $in_interface"}],[9434,{"text":"if $$router{'zone'}"}],[9440,{"text":"if $out_interface eq $interface"}],[9441,{"text":"if $$out_interface{'disabled'}"}],[9427,{"text":"if ($$router{'managed'} or $$router{'semi_managed'}) { }"}],[9459,{"text":"unless $$zone{'is_tunnel'}"}],[9466,{"text":"if $interface eq $in_interface"}],[9467,{"text":"if $$interface{'main_interface'}"}],[9469,{"text":"if $$router{'managed'}"}],[9470,{"text":"if $$router{'active_path'}"}],[9475,{"text":"if $out_interface eq $interface"}],[9477,{"text":"if $$next{'zone_cluster'}"}],[9478,{"text":"if $$out_interface{'main_interface'}"}],[9482,{"text":"unless $private1 eq $private2"}],[9515,{"text":"if $$obj{'areas'}{$area}"}],[9523,{"text":"unless ($$obj{'is_tunnel'})"}],[9522,{"text":"if ($is_zone) { }"}],[9522,{"text":"elsif ($$obj{'managed'} or $$obj{'routing_only'}) { }"}],[9537,{"text":"if $interface eq $in_interface"}],[9540,{"text":"if $$interface{'main_interface'}"}],[9547,{"text":"if ($$is_inclusive{$area} xor not $is_zone)"}],[9559,{"text":"$is_zone ? :"}],[9558,{"text":"if ($$interface{'is_border'})"}],[9543,{"text":"if ($$lookup{$interface}) { }"}],[9543,{"text":"elsif ($auto_border) { }"}],[9566,{"text":"$is_zone ? :"}],[9567,{"text":"if (my $err_path = set_area1($next, $area, $interface))"}],[9582,{"text":"unless my $attributes = $$area{'router_attributes'}"}],[9583,{"text":"if $$attributes{'owner'} and keys %$attributes == 1"}],[9589,{"text":"if $key eq 'owner'"}],[9594,{"text":"if ($r_val eq $val or ref $r_val eq 'ARRAY' and ref $val eq 'ARRAY' and aref_eq($r_val, $val))"}],[9593,{"text":"if (my $r_val = $$router{$key}) { }"}],[9620,{"text":"if defined $$nat1{$attr} xor defined $$nat2{$attr}"}],[9621,{"text":"unless defined $$nat1{$attr}"}],[9622,{"text":"if $$nat1{$attr} ne $$nat2{$attr}"}],[9635,{"text":"if (nat_equal($nat1, $nat2))"}],[9639,{"text":"if ($$nat2{'identity'})"}],[9650,{"text":"unless my $hash = $$area{'nat'}"}],[9660,{"text":"if (my $z_nat = $$zone{'nat'}{$nat_tag})"}],[9696,{"text":"is_network($net_or_zone) ? :"}],[9708,{"text":"unless $mask2 > $mask1"}],[9709,{"text":"unless match_ip($ip2, $ip1, $mask1)"}],[9736,{"text":"unless ($$nat{'dynamic'})"}],[9712,{"text":"if (my $n_nat = $$network{'nat'}{$nat_tag}) { }"}],[9712,{"text":"elsif ($$network{'ip'} eq 'bridged' and not $$nat{'identity'}) { }"}],[9761,{"text":"$$zone{'nat'} ? :"}],[9780,{"text":"unless my $href = $$network{'nat'}"}],[9781,{"text":"if ($$network{'is_aggregate'})"}],[9787,{"text":"unless $$nat_network{'identity'}"}],[9789,{"text":"unless $$nat_network{'is_used'}"}],[9809,{"text":"if $$network{'zone'}"}],[9821,{"text":"if $$network{'loopback'} and @{$$zone{'networks'};} == 1"}],[9824,{"text":"if (@{$$zone{'networks'};})"}],[9829,{"text":"if (my $unmanaged = $$zone{'unmanaged_routers'})"}],[9834,{"text":"if ($$zone{'private'} and $$zone{'private'} eq 'public')"}],[9851,{"text":"if $$zone{'zone_cluster'}"}],[9858,{"text":"if 1 >= @$cluster"}],[9876,{"text":"unless my $border = $$area{$attribute}"}],[9881,{"text":"if ($attribute eq 'inclusive_border')"}],[9903,{"text":"if $in_interface"}],[9906,{"text":"$$is_inclusive{$area} ? :"}],[9907,{"text":"$$err_obj{'areas'}{$area} ? :"}],[9900,{"text":"if (my $err_path = set_area1($obj, $area, $in_interface))"}],[9934,{"text":"unless my $borders = $$area{$attr}"}],[9936,{"text":"if $start"}],[9940,{"text":"$attr eq 'border' ? :"}],[9948,{"text":"if $err"}],[9952,{"text":"unless my $borders = $$area{$attr}"}],[9953,{"text":"unless my(@bad_intf) = grep({$$lookup{$_} ne 'found';} @$borders)"}],[9921,{"text":"if (my $network = $$area{'anchor'}) { }"}],[9963,{"text":"unless @{$$area{'zones'};}"}],[9979,{"text":"unless $$zone{'areas'}"}],[9982,{"text":"unless @{$$a{'zones'};} <=> @{$$b{'zones'};}"}],[9984,{"text":"unless my(@areas) = (sort {$$a{'name'} cmp $$b{'name'} unless @{$$a{'zones'};} <=> @{$$b{'zones'};};} values %{$$zone{'areas'};})"}],[9992,{"text":"if $seen{$small}{$next}"}],[9997,{"text":"unless ($$zone{'areas'}{$next})"}],[10006,{"text":"if (@{$$small{'zones'};} == @{$$next{'zones'};}) { }"}],[10005,{"text":"if ($ok)"}],[10041,{"text":"unless @{$$a{'zones'};} <=> @{$$b{'zones'};}"}],[10053,{"text":"if $next eq $big"}],[10062,{"text":"unless my $big = $$area{'subset_of'}"}],[10066,{"text":"if $$router{'areas'}{$big}"}],[10116,{"text":"unless my $related = $$interface{'redundancy_interfaces'}"}],[10121,{"text":"unless $$router{'managed'} or $$router{'semi_managed'}"}],[10123,{"text":"if $seen{$related}"}],[10128,{"text":"unless ($$v{'router'}{'loop'})"}],[10134,{"text":"if $err"}],[10137,{"text":"unless equal(map({$$_{'loop'};} @$related))"}],[10151,{"text":"unless @$elements"}],[10157,{"text":"unless ($$obj{'loop'} or $$obj{'router'}{'loop'} or $$obj{'zone'}{'loop'} or $$obj{'disabled'})"}],[10173,{"text":"if (1 == @$elements)"}],[10171,{"text":"if ($deleted)"}],[10177,{"text":"unless @$elements"}],[10183,{"text":"unless $$_{'router'}{'managed'}"}],[10183,{"text":"if grep {$$_{'router'}{'routing_only'} unless $$_{'router'}{'managed'};} @$elements"}],[10187,{"text":"unless $$_{'zone_cluster'}"}],[10187,{"text":"unless equal(map({$_ unless $$_{'zone_cluster'};} map({$$_{'zone'};} @$elements)))"}],[10203,{"text":"if $zone2 eq $zone"}],[10205,{"text":"if $cluster2 eq $zone_cluster"}],[10204,{"text":"if (my $cluster2 = $$zone2{'zone_cluster'})"}],[10208,{"text":"if ($loop eq $loop2)"}],[10207,{"text":"if (my $loop2 = $$zone2{'loop'})"}],[10240,{"text":"if $$obj{'reachable_part'}{$mark}"}],[10241,{"text":"if $$obj{'active_path'}"}],[10249,{"text":"if $interface eq $in_interface"}],[10250,{"text":"if $$interface{'main_interface'}"}],[10252,{"text":"$is_zone ? :"}],[10256,{"text":"unless $$interface{'loop'}"}],[10257,{"text":"$is_zone ? :"}],[10251,{"text":"if (my $hash = $$seen{$interface}) { }"}],[10292,{"text":"if $$reached{$direction}"}],[10297,{"text":"unless ($$obj{'loop'})"}],[10310,{"text":"if $mark <= $start_mark + 1"}],[10336,{"text":"if $mark eq 'none'"}],[10328,{"text":"if ($$reached{'zone'} eq $$reached{'router'} and $$reached{'zone'} ne 'none') { }"}],[10350,{"text":"unless aref_delete($$interface{'path_restrict'}, $restrict)"}],[10355,{"text":"unless (@{$$interface{'path_restrict'};})"}],[10347,{"text":"if (not $has_interior) { }"}],[10391,{"text":"if ($$obj{'active_path'})"}],[10414,{"text":"is_router($obj) ? :"}],[10418,{"text":"if $interface eq $to_zone1"}],[10422,{"text":"if $$interface{'loop'}"}],[10427,{"text":"if $max > $max_distance"}],[10444,{"text":"if ($$loop{'distance'} < $$loop2{'distance'}) { }"}],[10443,{"text":"if ($loop ne $loop2)"}],[10432,{"text":"if ($obj eq $loop_obj) { }"}],[10432,{"text":"elsif (my $loop2 = $$obj{'loop'}) { }"}],[10428,{"text":"if ($loop) { }"}],[10466,{"text":"if ($$obj{'loop'} and $$obj{'loop'}{'exit'} ne $obj) { }"}],[10489,{"text":"if ($$exit{'loop'} eq $loop) { }"}],[10482,{"text":"if (my $marker = $$loop{'cluster_exit'}) { }"}],[10506,{"text":"unless @zones"}],[10507,{"text":"unless $$_{'managed'}"}],[10512,{"text":"if $$obj{'main'} or $$obj{'loop'}"}],[10528,{"text":"unless my $loop = $$obj{'loop'}"}],[10547,{"text":"if (my $loop = $$interface{'loop'})"}],[10591,{"text":"if ($$obj{'path_restrict'} or $$obj{'reachable_at'}) { }"}],[10582,{"text":"if ($$router{'managed'} or $$router{'semi_managed'}) { }"}],[10605,{"text":"if ($$obj{'managed'} or $$obj{'semi_managed'}) { }"}],[10574,{"text":"if ($type eq 'Network') { }"}],[10574,{"text":"elsif ($type eq 'Subnet') { }"}],[10574,{"text":"elsif ($type eq 'Interface') { }"}],[10574,{"text":"elsif ($type eq 'Router') { }"}],[10574,{"text":"elsif ($type eq 'Zone') { }"}],[10574,{"text":"elsif ($type eq 'Host') { }"}],[10646,{"text":"if ($$restrict{'active_path'})"}],[10644,{"text":"if ($pathrestriction)"}],[10665,{"text":"unless ($$has_mark{$mark})"}],[10680,{"text":"if (intersect($reachable, $reachable2))"}],[10679,{"text":"if (my $reachable2 = $$reachable_at2{$$end_intf{'router'}})"}],[10678,{"text":"if (my $reachable_at2 = $$end_intf{'reachable_at'})"}],[10662,{"text":"if ($$other{'loop'}) { }"}],[10658,{"text":"if (my $reachable = $$reachable_at{$obj})"}],[10657,{"text":"if ($reachable_at and $end_intf and $end_intf ne $in_intf)"}],[10692,{"text":"if ($$obj{'active_path'})"}],[10699,{"text":"if ($obj eq $end)"}],[10711,{"text":"$end_intf ? :"}],[10714,{"text":"unless ($$has_mark{$mark})"}],[10710,{"text":"if (my $reachable = $$reachable_at{$obj})"}],[10709,{"text":"if ($reachable_at)"}],[10728,{"text":"if ($pathrestriction)"}],[10736,{"text":"is_router($obj) ? :"}],[10743,{"text":"if $interface eq $in_intf"}],[10746,{"text":"if $$interface{'main_interface'}"}],[10748,{"text":"unless $allowed"}],[10749,{"text":"unless $loop and $$allowed{$loop}"}],[10752,{"text":"if (cluster_path_mark1($next, $interface, $end, $end_intf, $path_tuples, $loop_leave, $navi))"}],[10769,{"text":"if ($pathrestriction)"}],[10795,{"text":"if ($navi = $$from{'navi'}{$to} and scalar keys %$navi)"}],[10804,{"text":"if $from eq $to"}],[10803,{"text":"if ($from_loop eq $to_loop) { }"}],[10803,{"text":"elsif ($$from_loop{'distance'} >= $$to_loop{'distance'}) { }"}],[10855,{"text":"if $$from_in{'path'}{$to_store}"}],[10870,{"text":"if (is_interface($from_store) and $$from_store{'router'} eq $from || $$from_store{'zone'} eq $from) { }"}],[10870,{"text":"elsif ($from_in and $$from_in{'path_restrict'} || $$from_in{'reachable_at'}) { }"}],[10884,{"text":"if (is_interface($to_store) and $$to_store{'router'} eq $to || $$to_store{'zone'} eq $to) { }"}],[10884,{"text":"elsif ($to_out and $$to_out{'path_restrict'} || $$to_out{'reachable_at'}) { }"}],[10904,{"text":"if ($from_in and not $$from_in{'loop'} and my $restrictions = $$from_in{'path_restrict'} and not $start_intf)"}],[10919,{"text":"if ($$restrict{'active_path'})"}],[10913,{"text":"if ($to_out and not $$to_out{'loop'} and my $restrictions = $$to_out{'path_restrict'} and not $end_intf)"}],[10936,{"text":"$end_intf ? :"}],[10942,{"text":"if ($start_intf and $$start_intf{'zone'} eq $end_node)"}],[10949,{"text":"$start_intf ? :"}],[10951,{"text":"unless my $reachable_at = $$intf{'reachable_at'}"}],[10952,{"text":"unless my $reachable = $$reachable_at{$start_node}"}],[10956,{"text":"if ($start_intf) { }"}],[10955,{"text":"unless ($$has_mark{$mark})"}],[10967,{"text":"if ($success and $start_intf)"}],[10980,{"text":"unless $intf"}],[10983,{"text":"if $interface eq $intf"}],[10981,{"text":"if (my $interfaces = $$intf{'redundancy_interfaces'})"}],[10997,{"text":"unless $intf"}],[10999,{"text":"unless $router eq $from or $router eq $to"}],[11000,{"text":"unless my $removed = delete $$intf{'path_restrict'}"}],[11003,{"text":"if $interface eq $intf"}],[11008,{"text":"if (intersect($orig, $removed)) { }"}],[11007,{"text":"if ($orig) { }"}],[11024,{"text":"unless $success"}],[11032,{"text":"if ($$start_store{'loop_enter'}{$end_store})"}],[11041,{"text":"unless my $navi = cluster_navigation($from, $to)"}],[11049,{"text":"is_router($from) ? :"}],[11050,{"text":"unless my $allowed = $$navi{$$from{'loop'}}"}],[11054,{"text":"if $$interface{'main_interface'}"}],[11056,{"text":"unless $loop"}],[11057,{"text":"unless ($$allowed{$loop})"}],[11065,{"text":"if $$interface{'loopback'} and $get_next eq 'zone'"}],[11069,{"text":"if (cluster_path_mark1($next, $interface, $to, $end_intf, $path_tuples, $loop_leave, $navi))"}],[11084,{"text":"unless $success"}],[11089,{"text":"unless my $in_intf = $key2obj{$in_intf_ref}"}],[11093,{"text":"unless my $out_intf = $key2obj{$out_intf_ref}"}],[11118,{"text":"unless $intf"}],[11119,{"text":"unless $$intf{'saved_path_restrict'}"}],[11122,{"text":"if (my $orig = delete $$interface{'saved_path_restrict'}) { }"}],[11131,{"text":"if (my $orig = delete $$start_intf{'saved_reachable_at_zone'})"}],[11130,{"text":"if ($start_intf)"}],[11137,{"text":"unless $intf"}],[11140,{"text":"if $interface eq $intf"}],[11138,{"text":"if (my $interfaces = $$intf{'redundancy_interfaces'})"}],[11148,{"text":"if ($intf and not $$intf{'loop'} and my $restrictions = $$intf{'path_restrict'})"}],[11157,{"text":"if ($success)"}],[11196,{"text":"$$from_store{'loop'} ? :"}],[11202,{"text":"if ($from eq $to)"}],[11210,{"text":"if ($from_loop and $to_loop and $$from_loop{'cluster_exit'} eq $$to_loop{'cluster_exit'})"}],[11221,{"text":"if $$from_in{'path'}{$to_store}"}],[11226,{"text":"unless $from_loop"}],[11233,{"text":"unless $from_out"}],[11235,{"text":"unless cluster_path_mark($from, $exit, $from_in, $from_out, $from_store, $to_store)"}],[11223,{"text":"unless ($from_out)"}],[11251,{"text":"unless $to_loop"}],[11257,{"text":"unless $to_in"}],[11259,{"text":"unless cluster_path_mark($entry, $to, $to_in, $to_out, $from_store, $to_store)"}],[11248,{"text":"unless ($to_in)"}],[11218,{"text":"if ($$from{'distance'} >= $$to{'distance'}) { }"}],[11285,{"text":"if (is_router($loop_entry) or is_interface($loop_entry) and $$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'} xor $call_at_zone)"}],[11314,{"text":"if $at_router xor $call_at_zone"}],[11324,{"text":"if ($exit_at_router xor $call_at_zone)"}],[11340,{"text":"unless $rule"}],[11348,{"text":"$$from_store{'loop'} ? :"}],[11360,{"text":"unless $from and $to"}],[11361,{"text":"if $from eq $to"}],[11364,{"text":"unless (path_mark($from, $to, $from_store, $to_store))"}],[11363,{"text":"unless ($$path_store{'path'}{$to_store})"}],[11389,{"text":"unless ($loop_out)"}],[11381,{"text":"if ($$from{'loop'} and $$from_store{'loop_exit'} and my $loop_exit = $$from_store{'loop_exit'}{$to_store}) { }"}],[11413,{"text":"unless ($loop_out)"}],[11423,{"text":"if ($call_it)"}],[11428,{"text":"unless ($out)"}],[11404,{"text":"if ($in and $$in{'loop_entry'} and my $loop_entry = $$in{'loop_entry'}{$to_store}) { }"}],[11453,{"text":"if $interface eq $in_intf"}],[11454,{"text":"if $$interface{'zone'}"}],[11455,{"text":"if $$interface{'orig_main'}"}],[11457,{"text":"if $active_path{$router}"}],[11463,{"text":"if $out_intf eq $interface"}],[11464,{"text":"if $$out_intf{'orig_main'}"}],[11489,{"text":"is_autointerface($src) ? :"}],[11491,{"text":"is_autointerface($dst) ? :"}],[11498,{"text":"if $from eq $to"}],[11500,{"text":"unless (path_mark($from, $to, $from_store, $to_store))"}],[11499,{"text":"unless ($$from_store{'path'}{$to_store})"}],[11511,{"text":"if ($$from_store{'loop_exit'} and my $exit = $$from_store{'loop_exit'}{$to_store}) { }"}],[11527,{"text":"unless ($border2obj2auto{$border})"}],[11524,{"text":"unless (is_router($from))"}],[11544,{"text":"if (my $orig = $$interface{'orig_main'}) { }"}],[11544,{"text":"elsif (my $layer3_intf = $$interface{'layer3_interface'}) { }"}],[11555,{"text":"if ($bridged_count > 1)"}],[11560,{"text":"$managed ? :"}],[11573,{"text":"unless my $isakmp = $isakmp{$name}"}],[11572,{"text":"if ($type eq 'isakmp') { }"}],[11593,{"text":"unless my $ipsec = $ipsec{$name2}"}],[11592,{"text":"if ($type eq 'ipsec') { }"}],[11614,{"text":"if $use_ah"}],[11616,{"text":"if $use_esp"}],[11613,{"text":"if (not $nat_traversal or $nat_traversal ne 'on')"}],[11625,{"text":"if ($nat_traversal)"}],[11652,{"text":"unless $real_hubs and @$real_hubs"}],[11655,{"text":"unless $real_spokes and @$real_spokes"}],[11664,{"text":"if $crypto_name eq $name"}],[11672,{"text":"unless $$router{'managed'}"}],[11676,{"text":"if $$router{'model'}{'do_auth'} and not $need_id"}],[11681,{"text":"if (my $orig_router = $$router{'orig_router'})"}],[11684,{"text":"unless $hub_seen{$router}++"}],[11705,{"text":"if (my $orig_router = $$router{'orig_router'})"}],[11724,{"text":"if $$real_hub{'bind_nat'}"}],[11734,{"text":"if (my $aref = $$router{'orig_interfaces'})"}],[11740,{"text":"unless ($$model{'do_auth'} or $$model{'can_dyn_crypto'})"}],[11738,{"text":"if ($$real_spoke{'ip'} =~ /^(?:negotiated|short|unnumbered)$/)"}],[11749,{"text":"unless $s_p and $s_p eq $private or $h_p and $h_p eq $private"}],[11758,{"text":"if $$real_spoke{'private'}"}],[11762,{"text":"if $$real_hub{'private'}"}],[11746,{"text":"if ($private) { }"}],[11774,{"text":"if ($$network{'has_id_hosts'}) { }"}],[11774,{"text":"elsif ($$interface{'ip'} ne 'tunnel') { }"}],[11782,{"text":"if ($has_id_hosts and @other)"}],[11789,{"text":"if ($$router{'managed'} and $$crypto{'detailed_crypto_acl'})"}],[11798,{"text":"if (@hubs > 1)"}],[11837,{"text":"unless 1 == @{$$zone{'interfaces'};}"}],[11845,{"text":"unless 1 == @{$$network{'interfaces'};}"}],[11835,{"text":"if ($managed) { }"}],[11879,{"text":"unless my $attributes = $$obj{'radius_attributes'}"}],[11882,{"text":"unless $spec"}],[11885,{"text":"unless $value =~ /^(?:tunnelall|tunnelspecified)$/"}],[11892,{"text":"unless $$obj{'range'}"}],[11897,{"text":"if grep {$$_{'ip'};} @{$$obj{'hosts'};}"}],[11891,{"text":"if (is_host($obj)) { }"}],[11891,{"text":"elsif (is_network($obj)) { }"}],[11883,{"text":"if ($key eq 'split-tunnel-policy') { }"}],[11883,{"text":"elsif ($key eq 'trust-point') { }"}],[11910,{"text":"if $id =~ /@/"}],[11916,{"text":"if &$has_attr($host)"}],[11917,{"text":"if &$has_attr($$host{'network'})"}],[11920,{"text":"if &$has_attr($$peer{'router'})"}],[11923,{"text":"if ($missing)"}],[11934,{"text":"unless $$isakmp{'trust_point'}"}],[11933,{"text":"if ($$isakmp{'authentication'} eq 'rsasig')"}],[11954,{"text":"if $$tunnel{'disabled'}"}],[11956,{"text":"if $$tunnel_intf{'is_hub'}"}],[11965,{"text":"if $interface eq $tunnel_intf"}],[11967,{"text":"if ($managed and $$router{'model'}{'crypto'} eq 'EZVPN')"}],[11966,{"text":"if ($$interface{'ip'} eq 'tunnel')"}],[11975,{"text":"if (my $intf2 = $id2interface{$id})"}],[11974,{"text":"if (my $id = $$interface{'id'})"}],[11973,{"text":"if ($$interface{'spoke'})"}],[11987,{"text":"if $managed"}],[11994,{"text":"if @all_networks > 1"}],[12007,{"text":"if (my $other = $$peer{'id_rules'}{$id})"}],[11985,{"text":"if ($$network{'has_id_hosts'}) { }"}],[12038,{"text":"if $has_id_hosts and $has_other_network"}],[12045,{"text":"unless $has_id_hosts or $has_other_network"}],[12057,{"text":"unless $need_id"}],[12064,{"text":"unless $do_auth"}],[12056,{"text":"if ($$tunnel_intf{'id'}) { }"}],[12056,{"text":"elsif ($encrypted[0]{'has_id_hosts'}) { }"}],[12056,{"text":"elsif ($need_id) { }"}],[12081,{"text":"if (is_host($obj))"}],[12076,{"text":"if (grep {$$_{'router'}{'model'}{'crypto'} eq 'ASA_VPN';} @$peers)"}],[12087,{"text":"if ($managed and $$router{'model'}{'crypto'} eq 'ASA')"}],[12109,{"text":"if $$intf1{'ip'} eq 'negotiated'"}],[12095,{"text":"if ($real_spoke and not $$real_spoke{'ip'} =~ /^(?:short|unnumbered)$/)"}],[12128,{"text":"unless my $crypto = $$model{'crypto'}"}],[12129,{"text":"unless $crypto eq 'ASA_VPN'"}],[12132,{"text":"unless @id_rules_interfaces >= 2"}],[12138,{"text":"if (my $src2 = $id2src{$id}) { }"}],[12157,{"text":"unless my $trust_point = delete $$router{'radius_attributes'}{'trust-point'}"}],[12165,{"text":"unless my $crypto = $$interface{'crypto'}"}],[12153,{"text":"if ($crypto_type eq 'ASA_VPN') { }"}],[12153,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[12237,{"text":"unless $in_intf"}],[12241,{"text":"unless $$router{'managed'}"}],[12245,{"text":"if $$out_intf{'zone'} ne $zone"}],[12251,{"text":"if $$dst{'hidden'}"}],[12248,{"text":"unless ($$dst{'is_aggregate'})"}],[12268,{"text":"if $$net1{'mask'} < $$net2{'mask'}"}],[12271,{"text":"unless $net1 = $$net1{'up'}"}],[12273,{"text":"if $net1 eq $net2"}],[12274,{"text":"unless $net2 = $$net2{'up'}"}],[12294,{"text":"if $$nat_other{'hidden'}"}],[12297,{"text":"if (my $aggregate = $$zone{'ipmask2aggregate'}{$key})"}],[12300,{"text":"if (my $result = $$zone{'ipmask2net'}{$key})"}],[12309,{"text":"if $$nat_network{'hidden'}"}],[12311,{"text":"if $i =~ /^(?:unnumbered|tunnel)$/"}],[12318,{"text":"unless ($result)"}],[12324,{"text":"if (my $super = find_supernet($result, $network)) { }"}],[12313,{"text":"if ($m >= $mask and match_ip($i, $ip, $mask) or $m < $mask and match_ip($ip, $i, $m))"}],[12348,{"text":"unless ($net_or_count)"}],[12354,{"text":"unless (ref $net_or_count)"}],[12389,{"text":"$where eq 'src' ? :"}],[12399,{"text":"if $$dst{'hidden'}"}],[12396,{"text":"unless ($$dst{'is_aggregate'})"}],[12402,{"text":"if $supernet_rule_tree{$stateless}{$src}{$src_range}{$prt}{$interface}{$ipmask}{$zone}"}],[12393,{"text":"if ($where eq 'dst')"}],[12407,{"text":"unless $networks"}],[12418,{"text":"$where eq 'src' ? :"}],[12419,{"text":"if ($rule_tree{$stateless}{$deny}{$src_range}{$src}{$dst}{$prt})"}],[12409,{"text":"if (not ref $networks) { }"}],[12429,{"text":"if $missing_supernet{$interface}{$service}"}],[12433,{"text":"$reversed ? :"}],[12434,{"text":"$config{'check_supernet_rules'} eq 'warn' ? :"}],[12470,{"text":"unless $out_intf"}],[12474,{"text":"unless $$router{'managed'}"}],[12479,{"text":"if ($$dst{'is_supernet'} and $out_zone eq $dst_zone)"}],[12495,{"text":"if ($no_acl_zone eq $dst_zone) { }"}],[12495,{"text":"elsif ($in_zone eq $no_acl_zone) { }"}],[12495,{"text":"elsif ($$no_acl_intf{'main_interface'}) { }"}],[12491,{"text":"if ($no_acl_intf = $$router{'no_in_acl'})"}],[12532,{"text":"$managed =~ /^(?:secondary|local.*)$/ ? :"}],[12530,{"text":"unless ($m2)"}],[12546,{"text":"if ($no_acl_zone eq $dst_zone) { }"}],[12546,{"text":"elsif ($no_acl_zone eq $src_zone) { }"}],[12546,{"text":"elsif ($$no_acl_intf{'main_interface'}) { }"}],[12569,{"text":"if $intf eq $in_intf"}],[12570,{"text":"if $$intf{'loopback'} and not $$intf{'vip'}"}],[12575,{"text":"if $zone eq $src_zone"}],[12576,{"text":"if $zone eq $dst_zone"}],[12577,{"text":"if $$intf{'main_interface'}"}],[12542,{"text":"if (my $no_acl_intf = $$router{'no_in_acl'}) { }"}],[12537,{"text":"if ($proto eq 'tcp' || $proto eq 'udp' || $proto eq 'ip' and $m1 == $m2)"}],[12514,{"text":"if ($$router{'model'}{'stateless'} and not $$rule{'oneway'})"}],[12586,{"text":"if $src_zone eq $in_zone"}],[12613,{"text":"unless $in_intf"}],[12617,{"text":"unless $$router{'managed'}"}],[12629,{"text":"if ($no_acl_zone eq $src_zone) { }"}],[12629,{"text":"elsif ($no_acl_zone eq $dst_zone) { }"}],[12629,{"text":"elsif ($$no_acl_intf{'main_interface'}) { }"}],[12625,{"text":"if (my $no_acl_intf = $$router{'no_in_acl'})"}],[12650,{"text":"$$router{'model'}{'has_io_acl'} ? :"}],[12658,{"text":"if $intf eq $in_intf"}],[12659,{"text":"if $$intf{'loopback'} and not $$intf{'vip'}"}],[12663,{"text":"if $zone eq $src_zone"}],[12664,{"text":"if $zone eq $dst_zone"}],[12665,{"text":"if $$intf{'main_interface'}"}],[12675,{"text":"unless keys %supernet_rule_tree"}],[12714,{"text":"if ($prt1 eq $prt2)"}],[12717,{"text":"if (defined(my $prt = $smaller_prt{$prt1}{$prt2}))"}],[12723,{"text":"if ($prt eq $prt2)"}],[12731,{"text":"if ($prt eq $prt1)"}],[12770,{"text":"if $$rule{'deleted'}"}],[12771,{"text":"if $$rule{'deny'}"}],[12772,{"text":"if $$rule{'no_check_supernet_rules'}"}],[12774,{"text":"unless $$dst{'is_supernet'}"}],[12777,{"text":"if $$dst{'mask'} != 0"}],[12781,{"text":"if @{$$dst{'zone'}{'interfaces'};} <= 1"}],[12792,{"text":"unless my $hash = $rule_tree{$stateless2}"}],[12793,{"text":"unless $hash = $$hash{$deny}"}],[12796,{"text":"unless my $smaller_src_range = find_smaller_prt($src_range1, $src_range2)"}],[12799,{"text":"unless $hash = $$hash{$src2}"}],[12803,{"text":"if $src1 eq $dst2_str"}],[12808,{"text":"if ($obj2zone{$src1} || get_zone($src1)) eq ($obj2zone{$dst2} || get_zone($dst2))"}],[12813,{"text":"if $$rule2{'no_check_supernet_rules'}"}],[12823,{"text":"unless $smaller_prt"}],[12846,{"text":"if (my $other_rule = $$hash{$prt})"}],[12851,{"text":"unless $prt = $$prt{'up'}"}],[12844,{"text":"if (my $hash = $$hash{$dst})"}],[12854,{"text":"unless $dst = $$dst{'up'}"}],[12841,{"text":"if (my $hash = $$hash{$src})"}],[12857,{"text":"unless $src = $$src{'up'}"}],[12838,{"text":"if (my $hash = $$hash{$src_range})"}],[12860,{"text":"unless $src_range = $$src_range{'up'}"}],[12835,{"text":"if (my $hash = $$hash{$deny})"}],[12863,{"text":"if $deny"}],[12832,{"text":"if (my $hash = $rule_tree{$stateless})"}],[12867,{"text":"unless $stateless"}],[12877,{"text":"if ($smaller_src_range ne $prt_ip)"}],[12889,{"text":"if $new"}],[12901,{"text":"$config{'check_transient_supernet_rules'} eq 'warn' ? :"}],[12899,{"text":"if ($missing_count)"}],[12981,{"text":"unless $$router{'model'}{'stateless'} or $$router{'managed'} =~ /^(?:secondary|local.*)$/"}],[12979,{"text":"if ($$router{'managed'})"}],[12984,{"text":"if $$router{'active_path'}"}],[12987,{"text":"if $out_interface eq $in_interface"}],[12989,{"text":"if $$next_zone{'stateful_mark'}"}],[13002,{"text":"unless ($$zone{'stateful_mark'})"}],[13007,{"text":"if $$rule{'deleted'}"}],[13008,{"text":"if $$rule{'no_check_supernet_rules'}"}],[13009,{"text":"if ($$rule{'src'}{'is_supernet'})"}],[13012,{"text":"if ($$rule{'dst'}{'is_supernet'})"}],[12997,{"text":"if ($config{'check_supernet_rules'})"}],[13019,{"text":"if ($config{'check_transient_supernet_rules'})"}],[13046,{"text":"unless (is_interface($src) and $$src{'router'}{'managed'} || $$src{'router'}{'routing_only'})"}],[13041,{"text":"if ($$rule{'deleted'})"}],[13054,{"text":"unless $proto eq 'tcp' or $proto eq 'udp' or $proto eq 'ip'"}],[13055,{"text":"if $$rule{'oneway'}"}],[13061,{"text":"if $proto eq 'tcp' and $$rule{'deny'}"}],[13080,{"text":"unless $out_intf"}],[13085,{"text":"unless $$router{'managed'}"}],[13099,{"text":"if $use_nonlocal_exit"}],[13088,{"text":"if ($$model{'stateless'} or not $in_intf and $$model{'stateless_self'})"}],[13068,{"text":"unless (defined $has_stateless_router)"}],[13116,{"text":"if ($$new_src_range{'range'} eq $aref_tcp_any)"}],[13120,{"text":"unless ($new_prt)"}],[13109,{"text":"if ($proto eq 'tcp') { }"}],[13109,{"text":"elsif ($proto eq 'udp') { }"}],[13109,{"text":"elsif ($proto eq 'ip') { }"}],[13138,{"text":"if $new_src_range"}],[13139,{"text":"if $$rule{'deny'}"}],[13106,{"text":"if ($has_stateless_router)"}],[13156,{"text":"if (keys %reverse_rule_tree)"}],[13191,{"text":"if ($type eq 'Network') { }"}],[13191,{"text":"elsif ($type eq 'Subnet') { }"}],[13191,{"text":"elsif ($type eq 'Interface') { }"}],[13213,{"text":"if $$in_interface{'main_interface'}"}],[13216,{"text":"unless $managed =~ /^(?:secondary|local.*)$/"}],[13215,{"text":"if (my $managed = $$router{'managed'})"}],[13218,{"text":"if $$router{'active_path'}"}],[13221,{"text":"if $out_interface eq $in_interface"}],[13222,{"text":"if $$out_interface{'main_interface'}"}],[13224,{"text":"if $$next_zone{'secondary_mark'}"}],[13241,{"text":"if $$in_interface{'main_interface'}"}],[13244,{"text":"if $managed eq 'primary'"}],[13243,{"text":"if (my $managed = $$router{'managed'})"}],[13246,{"text":"if $$router{'active_path'}"}],[13249,{"text":"if $out_interface eq $in_interface"}],[13250,{"text":"if $$out_interface{'main_interface'}"}],[13252,{"text":"if $$next_zone{'primary_mark'}"}],[13270,{"text":"if $$in_interface{'main_interface'}"}],[13273,{"text":"if $$router{'strict_secondary'}"}],[13272,{"text":"if ($$router{'managed'})"}],[13275,{"text":"if $$router{'active_path'}"}],[13278,{"text":"if $out_interface eq $in_interface"}],[13279,{"text":"if $$out_interface{'main_interface'}"}],[13281,{"text":"if $$next_zone{'strict_secondary_mark'}"}],[13298,{"text":"if $$in_interface{'main_interface'}"}],[13301,{"text":"if $managed ne 'local_secondary'"}],[13300,{"text":"if (my $managed = $$router{'managed'})"}],[13303,{"text":"if $$router{'active_path'}"}],[13306,{"text":"if $out_interface eq $in_interface"}],[13307,{"text":"if $$out_interface{'main_interface'}"}],[13309,{"text":"if $$next_zone{'local_secondary_mark'}"}],[13324,{"text":"unless ($$zone{'secondary_mark'})"}],[13327,{"text":"unless ($$zone{'primary_mark'})"}],[13330,{"text":"unless ($$zone{'strict_secondary_mark'})"}],[13333,{"text":"unless ($$zone{'local_secondary_mark'})"}],[13344,{"text":"if $$rule{'deleted'} and !$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}"}],[13349,{"text":"if $$src{'is_aggregate'} or $$dst{'is_aggregate'}"}],[13353,{"text":"if ($$src_zone{'secondary_mark'} != $$dst_zone{'secondary_mark'} or $$src_zone{'local_mark'} and $$dst_zone{'local_mark'} and $$src_zone{'local_mark'} == $$dst_zone{'local_mark'} and $$src_zone{'local_secondary_mark'} != $$dst_zone{'local_secondary_mark'})"}],[13363,{"text":"if ($$src_zone{'primary_mark'} != $$dst_zone{'primary_mark'})"}],[13390,{"text":"unless (is_network($what) or is_interface($what) and $$what{'loopback'} || $$what{'router'}{'managed'})"}],[13384,{"text":"if ($prt ne $prt_ip) { }"}],[13402,{"text":"if ($err)"}],[13380,{"text":"unless ($$rule{'some_non_secondary'})"}],[13377,{"text":"if ($$src_zone{'strict_secondary_mark'} != $$dst_zone{'strict_secondary_mark'})"}],[13426,{"text":"unless my $href = $$network{'nat'}"}],[13429,{"text":"unless $$nat_network{'dynamic'}"}],[13437,{"text":"$in_intf ? :"}],[13438,{"text":"$out_intf ? :"}],[13442,{"text":"unless $$no_nat_set1{$nat_tag}"}],[13440,{"text":"if ($no_nat_set1)"}],[13446,{"text":"unless $$no_nat_set2{$nat_tag}"}],[13444,{"text":"if ($no_nat_set2)"}],[13460,{"text":"if $$rule{'deleted'} and !$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}"}],[13468,{"text":"$type eq 'Network' ? :"}],[13472,{"text":"unless my $nat_hash = $$network{'nat'}"}],[13473,{"text":"$where eq 'src' ? :"}],[13475,{"text":"$otype eq 'Network' ? :"}],[13486,{"text":"$nat_domain ? :"}],[13493,{"text":"if $$no_nat_set{$nat_tag}"}],[13499,{"text":"unless $hidden_seen++"}],[13498,{"text":"if ($$nat_network{'hidden'})"}],[13505,{"text":"unless ($$nat_network{'dynamic'})"}],[13511,{"text":"if $dynamic_seen"}],[13512,{"text":"unless $type eq 'Subnet' or $type eq 'Interface'"}],[13515,{"text":"if $$obj{'nat'}{$nat_tag}"}],[13528,{"text":"unless $nat_tag"}],[13529,{"text":"if $$obj{'nat'}{$nat_tag}"}],[13530,{"text":"$where eq 'src' ? :"}],[13531,{"text":"if (not $intf or zone_eq($$network{'zone'}, $$intf{'zone'}))"}],[13541,{"text":"$dynamic_nat ? :"}],[13549,{"text":"unless $nat_found"}],[13552,{"text":"if $hidden_seen"}],[13564,{"text":"unless $$nat_network{'dynamic'}"}],[13567,{"text":"unless $dyn_nat_hash"}],[13575,{"text":"unless ($active_nat_at)"}],[13583,{"text":"unless my $interfaces = $$active_nat_at{$nat_tag}"}],[13585,{"text":"unless $is_hidden or $static_seen"}],[13588,{"text":"$is_hidden ? :"}],[13589,{"text":"$where eq 'dst' ? :"}],[13598,{"text":"if $dynamic_nat"}],[13641,{"text":"if ($cmp_rule ne $chg_rule and $cmp_log eq $chg_log)"}],[13639,{"text":"if (my $cmp_rule = $$cmp_hash{$prt})"}],[13649,{"text":"unless $prt = $$prt{'up'}"}],[13627,{"text":"if (my $cmp_hash = $$cmp_hash{$dst})"}],[13653,{"text":"unless $dst = $$dst{'up'}"}],[13623,{"text":"if (my $cmp_hash = $$cmp_hash{$src})"}],[13657,{"text":"unless $src = $$src{'up'}"}],[13619,{"text":"if (my $cmp_hash = $$cmp_hash{$src_range})"}],[13661,{"text":"unless $src_range = $$src_range{'up'}"}],[13615,{"text":"if (my $cmp_hash = $$cmp_hash{$deny})"}],[13665,{"text":"if $deny"}],[13612,{"text":"if (my $cmp_hash = $$cmp_hash{$stateless})"}],[13670,{"text":"unless $stateless"}],[13696,{"text":"unless $out_intf"}],[13699,{"text":"unless $in_intf"}],[13702,{"text":"unless $$router{'managed'}"}],[13704,{"text":"unless $$model{'has_interface_level'}"}],[13730,{"text":"if ($$in_hw{'level'} > $$out_hw{'level'})"}],[13738,{"text":"unless my $nat_info = $$dst{'nat'}"}],[13739,{"text":"unless grep {$$nat_info{$_};} @$nat_tags"}],[13724,{"text":"if ($identity_nat) { }"}],[13724,{"text":"elsif (my $nat_tags = $$in_hw{'bind_nat'}) { }"}],[13749,{"text":"unless my $nat_tags = $$out_hw{'bind_nat'}"}],[13751,{"text":"unless my $nat_info = $$src{'nat'}"}],[13756,{"text":"unless $$nat_info{$_}"}],[13756,{"text":"unless my($nat_net) = map({() unless $$nat_info{$_};} @$nat_tags)"}],[13767,{"text":"if ($$nat_net{'dynamic'} and $$in_hw{'level'} < $$out_hw{'level'})"}],[13761,{"text":"if ($identity_nat)"}],[13787,{"text":"if ($$router{'managed'} or $$router{'semi_managed'}) { }"}],[13779,{"text":"if ($type eq 'Network') { }"}],[13779,{"text":"elsif ($type eq 'Subnet') { }"}],[13779,{"text":"elsif ($type eq 'Interface') { }"}],[13803,{"text":"if ($$obj{'is_aggregate'}) { }"}],[13802,{"text":"if ($type eq 'Network') { }"}],[13802,{"text":"elsif ($type eq 'Subnet' or $type eq 'Interface') { }"}],[13819,{"text":"if fast_mode()"}],[13832,{"text":"if $$rule{'deleted'} and !$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}"}],[13839,{"text":"unless ($info)"}],[13846,{"text":"if ($$info{'nat_path'})"}],[13855,{"text":"unless my $nat_path = $$info{'nat_path'}"}],[13884,{"text":"if ($$obj{'is_aggregate'}) { }"}],[13884,{"text":"elsif (my $max = $$obj{'max_routing_net'}) { }"}],[13896,{"text":"if (my $max = $$net{'max_routing_net'}) { }"}],[13883,{"text":"if ($type eq 'Network') { }"}],[13883,{"text":"elsif ($type eq 'Subnet' or $type eq 'Interface') { }"}],[13928,{"text":"if $$in_interface{'main_interface'}"}],[13930,{"text":"if $border_networks{$network}"}],[13933,{"text":"if $$out_interface{'zone'}"}],[13934,{"text":"if $$out_interface{'main_interface'}"}],[13938,{"text":"unless keys %hop_interfaces"}],[13944,{"text":"if $$router{'active_path'}"}],[13947,{"text":"if $$interface{'main_interface'}"}],[13948,{"text":"if ($hop_interfaces{$interface})"}],[13954,{"text":"if $interface eq $in_intf"}],[13956,{"text":"if $$cluster{$network}"}],[13959,{"text":"if $out_intf eq $interface"}],[13960,{"text":"if $$out_intf{'main_interface'}"}],[13966,{"text":"if $hop2cluster{$interface}"}],[13979,{"text":"if $hop2networks{$hop}"}],[13987,{"text":"if $border eq $in_border"}],[13992,{"text":"unless $hop_interfaces{$out_hop}"}],[13993,{"text":"if $hop2cluster{$out_hop} eq $cluster"}],[14008,{"text":"if $$interface{'main_interface'}"}],[14009,{"text":"if ($$interface{'zone'}) { }"}],[14023,{"text":"if $network eq $border"}],[14037,{"text":"if $$in_intf{'routing'}"}],[14057,{"text":"if $$interface{'routing'}"}],[14061,{"text":"if $network eq $intf_net"}],[14062,{"text":"unless my $hops = $$route_in_zone{$network}"}],[14090,{"text":"if ($in_intf and $out_intf) { }"}],[14090,{"text":"elsif (not $in_intf) { }"}],[14122,{"text":"if ($$rule{'deleted'} and !$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'} and !(is_interface($src) && ($$src{'router'}{'managed'} || $$src{'router'}{'routing_only'})) || is_interface($$rule{'deleted'}{'src'}) && ($$rule{'deleted'}{'src'}{'router'}{'managed'} || $$rule{'deleted'}{'src'}{'router'}{'routing_only'}))"}],[14144,{"text":"$from eq $src ? :"}],[14145,{"text":"unless is_interface($from)"}],[14146,{"text":"unless $$from{'zone'}"}],[14142,{"text":"if ($src_zone eq $dst_zone)"}],[14154,{"text":"if ($pseudo_rule = $routing_tree{$src_zone}{$dst_zone}) { }"}],[14154,{"text":"elsif ($pseudo_rule = $routing_tree{$dst_zone}{$src_zone}) { }"}],[14176,{"text":"if (is_interface($src) and $$src{'router'}{'managed'} || $$src{'router'}{'routing_only'})"}],[14185,{"text":"if (is_interface($dst) and $$dst{'router'}{'managed'} || $$dst{'router'}{'routing_only'})"}],[14209,{"text":"if $$src_intf{'router'} eq $$entry{'router'}"}],[14211,{"text":"if (grep {$$_{'router'} eq $$entry{'router'};} @$redun_intf)"}],[14210,{"text":"if (my $redun_intf = $$src_intf{'redundancy_interfaces'})"}],[14226,{"text":"if $$dst_intf{'router'} eq $$exit{'router'}"}],[14228,{"text":"if (grep {$$_{'router'} eq $$exit{'router'};} @$redun_intf)"}],[14227,{"text":"if (my $redun_intf = $$dst_intf{'redundancy_interfaces'})"}],[14262,{"text":"if $interface eq $hop"}],[14267,{"text":"if ($$hop2{'ip'} eq 'bridge') { }"}],[14266,{"text":"if ($network eq $network2)"}],[14287,{"text":"unless $$interface{'network'}{'bridged'}"}],[14289,{"text":"if $$hop{'ip'} ne 'bridged'"}],[14307,{"text":"unless $$interface{'ip'} eq 'tunnel'"}],[14311,{"text":"if $$real_intf{'routing'}"}],[14322,{"text":"if (not $$real_peer{'ip'} =~ /^(?:short|negotiated)$/) { }"}],[14338,{"text":"unless my $hops = $$route_in_zone{$peer_net}"}],[14355,{"text":"unless $in_intf"}],[14356,{"text":"unless $in_intf eq $real_intf"}],[14357,{"text":"unless $out_intf"}],[14358,{"text":"unless $$out_intf{'network'}"}],[14370,{"text":"unless my $hops = $$route_in_zone{$hop_net}"}],[14366,{"text":"if ($hop_net eq $real_net) { }"}],[14321,{"text":"if ($real_net eq $peer_net) { }"}],[14321,{"text":"elsif ($$real_net{'zone'} eq $$peer_net{'zone'}) { }"}],[14379,{"text":"unless $$_{'redundancy_interfaces'}"}],[14379,{"text":"if (@hops > 1 and equal(map({$_ unless $$_{'redundancy_interfaces'};} @hops)) or @hops == 1) { }"}],[14416,{"text":"if ($peer_net ne $real_net)"}],[14436,{"text":"if $$interface{'loop'} and $$interface{'routing'}"}],[14437,{"text":"if $$interface{'ip'} eq 'bridged'"}],[14448,{"text":"unless ($$interface{'routing'} or $$interface2{'routing'})"}],[14443,{"text":"if ($interface2 ne $interface)"}],[14442,{"text":"if (my $interface2 = $net2intf{$network}) { }"}],[14464,{"text":"if ($group)"}],[14473,{"text":"if ($group and $group2 and $group eq $group2) { }"}],[14467,{"text":"if (my $hop2 = $net2hop{$network}) { }"}],[14462,{"text":"unless ($$interface{'routing'})"}],[14497,{"text":"if @$hops == @{$$hop1{'redundancy_interfaces'};}"}],[14503,{"text":"if (@$hops == 1 and my $phys_hop = $$hop1{'orig_main'}) { }"}],[14538,{"text":"$$router{'vrf_members'} ? :"}],[14557,{"text":"if $$interface{'ip'} eq 'bridged'"}],[14558,{"text":"if ($$interface{'routing'})"}],[14566,{"text":"if ($$interface{'hub'} and $crypto_type eq 'ASA')"}],[14580,{"text":"if ($ip == 0 and $mask == 0)"}],[14590,{"text":"unless @interfaces"}],[14613,{"text":"unless my $ip2net = $mask2ip2net{$m}"}],[14614,{"text":"unless my $big = $mask2ip2net{$m}{$i}"}],[14618,{"text":"if ($net2hop_info{$big} eq $hop_info)"}],[14602,{"text":"unless ($$interface{'hub'} and $crypto_type eq 'ASA')"}],[14646,{"text":"unless $intf2hop2nets{$interface}{$hop}"}],[14648,{"text":"if ($count > $max)"}],[14655,{"text":"if ($max_intf and $max_hop)"}],[14635,{"text":"if ($do_auto_default_route)"}],[14670,{"text":"$vrf ? :"}],[14670,{"text":"if $type eq 'IOS'"}],[14678,{"text":"$$interface{'ip'} =~ /^(?:unnumbered|negotiated|tunnel)$/ ? :"}],[14685,{"text":"if (my $net = $$netinfo[2])"}],[14684,{"text":"if ($config{'comment_routes'})"}],[14695,{"text":"if ($vrf and not $nxos_prefix)"}],[14690,{"text":"if ($type eq 'IOS') { }"}],[14690,{"text":"elsif ($type eq 'NX-OS') { }"}],[14690,{"text":"elsif ($type eq 'PIX') { }"}],[14690,{"text":"elsif ($type eq 'iproute') { }"}],[14690,{"text":"elsif ($type eq 'none') { }"}],[14742,{"text":"unless my $src_nat = $$in_hw{'src_nat'}"}],[14747,{"text":"unless my $net_hash = $$src_nat{$out_hw}"}],[14752,{"text":"unless $$a{'ip'} <=> $$b{'ip'} or $$a{'mask'} <=> $$b{'mask'}"}],[14768,{"text":"if ($out_dynamic and $in_dynamic and $out_dynamic eq $in_dynamic)"}],[14782,{"text":"if (my $out_host_ip = $$host{'nat'}{$out_dynamic})"}],[14776,{"text":"if ($out_dynamic) { }"}],[14830,{"text":"if $global_index and $nat_index"}],[14848,{"text":"$out_ip == $max ? :"}],[14839,{"text":"if ($out_ip == $out_intf_ip and $out_mask == 4294967295) { }"}],[14833,{"text":"unless ($global_index)"}],[14862,{"text":"if $$in_hw{'level'} < $$out_hw{'level'}"}],[14857,{"text":"if (not $nat_index)"}],[14877,{"text":"if ($$in_hw{'level'} > $$out_hw{'level'} or $$in_hw{'need_identity_nat'} or $in_ip != $out_ip)"}],[14894,{"text":"unless $$in_hw{'need_nat_0'}"}],[14911,{"text":"unless ($objects{$name})"}],[14924,{"text":"if ($ip == $max) { }"}],[14932,{"text":"unless ($objects{$name})"}],[14949,{"text":"if ($out_ip == $out_intf_ip and $out_mask == 4294967295) { }"}],[14985,{"text":"unless my $src_nat = $$in_hw{'src_nat'}"}],[14990,{"text":"unless my $net_hash = $$src_nat{$out_hw}"}],[14997,{"text":"unless my $identical = $$network{'is_identical'}"}],[15000,{"text":"if ($in and $out and $in eq $out)"}],[15017,{"text":"if ($$net_hash{$net} and $net2 = $$network{'is_in'}{$in_nat} and $$net_hash{$net2}) { }"}],[15039,{"text":"unless $$model{'has_interface_level'}"}],[15042,{"text":"if ($$model{'v8_4'}) { }"}],[15064,{"text":"unless $in_intf"}],[15066,{"text":"unless $$router{'managed'}"}],[15075,{"text":"unless ($$model{'stateless'} or not $out_intf and $$model{'stateless_self'})"}],[15074,{"text":"if ($$rule{'stateless'})"}],[15086,{"text":"if $$rule{'stateless_icmp'} and not $$model{'stateless_icmp'}"}],[15099,{"text":"if $out_intf and not $intf_hash && $$intf_hash{$dst}"}],[15102,{"text":"if $$rule{'deleted'}{'managed_intf'}"}],[15096,{"text":"if ($$rule{'deleted'})"}],[15106,{"text":"if $$in_intf{'loopback'}"}],[15116,{"text":"if $nat_network eq $network"}],[15117,{"text":"unless my $nat_tag = $$nat_network{'dynamic'}"}],[15120,{"text":"if $$obj{'nat'}{$nat_tag}"}],[15109,{"text":"if (my $dynamic_nat = $$rule{'dynamic_nat'})"}],[15152,{"text":"if $$in_intf{'ip'} eq 'tunnel'"}],[15146,{"text":"if ($dst eq $in_intf) { }"}],[15146,{"text":"elsif ($dst eq $network_00 or $dst eq $$in_intf{'network'}) { }"}],[15146,{"text":"elsif ($$in_intf{'ip'} =~ /^(?:tunnel|bridged)/) { }"}],[15145,{"text":"if ($$model{'filter'} eq 'PIX')"}],[15176,{"text":"unless ($$in_intf{'hardware'}{'no_in_acl'})"}],[15141,{"text":"if (not $out_intf or $intf_hash and $$intf_hash{$dst}) { }"}],[15141,{"text":"elsif ($$out_intf{'hardware'}{'need_out_acl'}) { }"}],[15193,{"text":"unless my $id = $$src{'id'}"}],[15195,{"text":"unless my $id_intf = $$id2rules{$id}"}],[15200,{"text":"unless $$src{'has_id_hosts'}"}],[15192,{"text":"if (is_subnet($src)) { }"}],[15192,{"text":"elsif (is_network($src)) { }"}],[15190,{"text":"if (my $id2rules = $$in_intf{'id_rules'})"}],[15214,{"text":"if ($$router{'no_crypto_filter'})"}],[15219,{"text":"unless ($$in_intf{'id_rules'})"}],[15184,{"text":"if ($$in_intf{'ip'} eq 'tunnel') { }"}],[15184,{"text":"elsif ($key eq 'out_rules') { }"}],[15184,{"text":"elsif ($key eq 'rules' and $$model{'has_io_acl'}) { }"}],[15261,{"text":"if ($$hardware{'need_out_acl'})"}],[15254,{"text":"if ($has_io_acl) { }"}],[15247,{"text":"if ($$hardware{'crosslink'})"}],[15277,{"text":"$has_io_acl ? :"}],[15273,{"text":"if ($$interface{'reroute_permit'})"}],[15298,{"text":"if (my $dst_range = $$prt{'dst_range'})"}],[15296,{"text":"unless ($$routing{'name'} =~ /^(?:manual|dynamic)$/)"}],[15295,{"text":"if (my $routing = $$interface{'routing'})"}],[15332,{"text":"if (my $dst_range = $$prt{'dst_range'})"}],[15328,{"text":"if (my $type = $$interface{'redundancy_type'})"}],[15345,{"text":"if ($$interface{'dhcp_server'})"}],[15367,{"text":"if ($type eq 'Network' or $type eq 'Subnet') { }"}],[15367,{"text":"elsif ($type eq 'Interface') { }"}],[15393,{"text":"if (ref $prt eq 'ARRAY') { }"}],[15393,{"text":"elsif (my $main_prt = $$prt{'main'}) { }"}],[15411,{"text":"unless my $general_permit = $$router{'general_permit'}"}],[15417,{"text":"if $$in_intf{'main_interface'}"}],[15423,{"text":"$id_rules ? :"}],[15433,{"text":"if $out_intf eq $in_intf"}],[15434,{"text":"if $$out_intf{'ip'} eq 'tunnel'"}],[15446,{"text":"if $out_intf eq $in_intf"}],[15458,{"text":"if ($$out_hw{'need_out_acl'})"}],[15451,{"text":"if ($need_protect)"}],[15463,{"text":"if $$out_intf{'main_interface'}"}],[15470,{"text":"if $$in_intf{'ip'} eq 'bridged'"}],[15421,{"text":"if ($$in_intf{'is_hub'}) { }"}],[15483,{"text":"unless ($$b{'prt'}{'prio'} || 0) <=> ($$a{'prt'}{'prio'} || 0)"}],[15496,{"text":"if fast_mode()"}],[15503,{"text":"if $$rule{'deleted'}"}],[15514,{"text":"if $$rule{'deleted'} and !$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}"}],[15542,{"text":"if ($$obj{'ip'} eq 'unnumbered') { }"}],[15552,{"text":"if (my $ip = $$obj{'nat'}{$nat_tag}) { }"}],[15551,{"text":"if (my $nat_tag = $$network{'dynamic'}) { }"}],[15574,{"text":"if ($$obj{'ip'} =~ /^(unnumbered|short)$/)"}],[15585,{"text":"if (my $ip = $$obj{'nat'}{$nat_tag}) { }"}],[15580,{"text":"if ($$obj{'ip'} eq 'negotiated') { }"}],[15580,{"text":"elsif (my $nat_tag = $$network{'dynamic'}) { }"}],[15538,{"text":"if ($type eq 'Network') { }"}],[15538,{"text":"elsif ($type eq 'Subnet') { }"}],[15538,{"text":"elsif ($type eq 'Interface') { }"}],[15538,{"text":"elsif ($type eq 'Objectgroup') { }"}],[15619,{"text":"$$model{'filter'} eq 'NX-OS' ? :"}],[15636,{"text":"if $$model{'inversed_acl_mask'}"}],[15632,{"text":"if ($mask == 4294967295) { }"}],[15618,{"text":"if (is_objectgroup($pair)) { }"}],[15618,{"text":"elsif ($$pair[0] == 0) { }"}],[15618,{"text":"elsif ($$model{'use_prefix'}) { }"}],[15658,{"text":"$prefix_code == 32 ? :"}],[15682,{"text":"if ($v1 == $v2) { }"}],[15682,{"text":"elsif ($v1 == 1 and $v2 == 65535) { }"}],[15682,{"text":"elsif ($v2 == 65535) { }"}],[15682,{"text":"elsif ($v1 == 1) { }"}],[15700,{"text":"if (defined $dst_prt) { }"}],[15699,{"text":"if (my $established = $$prt{'established'})"}],[15713,{"text":"if ($$model{'no_filter_icmp_code'}) { }"}],[15712,{"text":"if (defined(my $code = $$prt{'code'})) { }"}],[15711,{"text":"if (defined(my $type = $$prt{'type'})) { }"}],[15675,{"text":"if ($proto eq 'ip') { }"}],[15675,{"text":"elsif ($proto eq 'tcp' or $proto eq 'udp') { }"}],[15675,{"text":"elsif ($proto eq 'icmp') { }"}],[15749,{"text":"if ($v1 == $v2) { }"}],[15749,{"text":"elsif ($v1 == 1 and $v2 == 65535) { }"}],[15749,{"text":"elsif ($v2 == 65535) { }"}],[15749,{"text":"elsif ($v1 == 1) { }"}],[15767,{"text":"if $sport"}],[15769,{"text":"if $dport"}],[15774,{"text":"if (defined(my $code = $$prt{'code'})) { }"}],[15773,{"text":"if (defined(my $type = $$prt{'type'})) { }"}],[15742,{"text":"if ($proto eq 'ip') { }"}],[15742,{"text":"elsif ($proto eq 'tcp' or $proto eq 'udp') { }"}],[15742,{"text":"elsif ($proto eq 'icmp') { }"}],[15794,{"text":"unless $filter_type =~ /^(:?IOS|NX-OS|PIX|ACE)$/"}],[15799,{"text":"if $config{'comment_acls'}"}],[15803,{"text":"$deny ? :"}],[15811,{"text":"if defined $src_port_code"}],[15813,{"text":"if defined $dst_port_code"}],[15822,{"text":"if ($normalized eq ':subst') { }"}],[15820,{"text":"if (my $modifier = $$active_log{$tag}) { }"}],[15819,{"text":"if (exists $$active_log{$tag})"}],[15817,{"text":"if ($active_log and my $log = $$rule{'log'})"}],[15838,{"text":"if ($log_code) { }"}],[15838,{"text":"elsif ($$router{'log_deny'} and $deny) { }"}],[15846,{"text":"if ($filter_type eq 'NX-OS')"}],[15862,{"text":"$filter_type eq 'NX-OS' ? :"}],[15874,{"text":"unless $$hardware{$rule_type}"}],[15878,{"text":"$this eq 'src' ? :"}],[15892,{"text":"if (defined(my $type = $$active_log{$tag}))"}],[15890,{"text":"if (my $log = $$rule{'log'})"}],[15908,{"text":"if ($size >= $min_object_group_size)"}],[15934,{"text":"unless $$a[0] <=> $$b[0]"}],[15936,{"text":"unless $ref2obj{$_}"}],[15960,{"text":"if $$pair[1] == 0"}],[15964,{"text":"if ($filter_type eq 'NX-OS') { }"}],[15964,{"text":"elsif ($filter_type eq 'ACE') { }"}],[16001,{"text":"unless $$href{$key}"}],[16007,{"text":"if (my $group = $$nat2group{$no_nat_set})"}],[16021,{"text":"unless $$href{$key}"}],[16057,{"text":"if ($$glue{'active'})"}],[16076,{"text":"if $deny"}],[16077,{"text":"if $src_range"}],[16078,{"text":"if $log"}],[16054,{"text":"if (my $glue = delete $$rule{'group_glue'})"}],[16095,{"text":"$$tree{'subtree'} ? :"}],[16134,{"text":"match_ip($node_ip, $tree_ip, $mask) ? :"}],[16135,{"text":"if (my $subtree = $$tree{$branch}) { }"}],[16129,{"text":"if (not $$tree{'subtree'} && $$node{'subtree'} or $$tree{'subtree'} ne $$node{'subtree'})"}],[16154,{"text":"if ($sub1 ne $sub2)"}],[16166,{"text":"if ($node_ip & $tree_mask) == ($tree_ip & $tree_mask)"}],[16173,{"text":"$node_ip < $tree_ip ? :"}],[16118,{"text":"if ($tree_mask < $node_mask and match_ip($node_ip, $tree_ip, $tree_mask)) { }"}],[16118,{"text":"elsif ($tree_mask == $node_mask and $tree_ip == $node_ip) { }"}],[16178,{"text":"if $$result{'subtree'}"}],[16181,{"text":"unless my $lo = $$result{'lo'}"}],[16182,{"text":"unless my $hi = $$result{'hi'}"}],[16184,{"text":"unless $$lo{'mask'} == $mask"}],[16185,{"text":"unless $$hi{'mask'} == $mask"}],[16186,{"text":"unless $$lo{'subtree'} and $$hi{'subtree'}"}],[16187,{"text":"unless $$lo{'subtree'} eq $$hi{'subtree'}"}],[16190,{"text":"if $$lo{$key}"}],[16191,{"text":"if $$hi{$key}"}],[16208,{"text":"unless $$b{'mask'} <=> $$a{'mask'}"}],[16229,{"text":"if $$bintree{'mask'} == 0"}],[16279,{"text":"if ($$tree{$prt} ne $subtree)"}],[16271,{"text":"if (my $subtree = $$tree{$up})"}],[16288,{"text":"$proto =~ /^\\d+$/ ? :"}],[16261,{"text":"if ($proto eq 'ip') { }"}],[16304,{"text":"if (not $prt_aref) { }"}],[16304,{"text":"elsif (@$prt_aref == 1) { }"}],[16333,{"text":"unless $hi"}],[16356,{"text":"if @hilo"}],[16357,{"text":"if @hilo"}],[16347,{"text":"if (@hilo <= 2)"}],[16340,{"text":"if ($$lo{'range'}[1] + 1 == $$hi{'range'}[0] and $$lo{'subtree'} and $$hi{'subtree'} and $$lo{'subtree'} eq $$hi{'subtree'})"}],[16371,{"text":"unless $top_prt{$what}"}],[16376,{"text":"if (my $aref = $top_prt{'proto'})"}],[16390,{"text":"unless (defined $$icmp_aref[0]{'type'})"}],[16449,{"text":"if (my $aref3 = $sub_prt{$prt})"}],[16430,{"text":"if (@$aref2 > 1) { }"}],[16458,{"text":"if ($icmp_any) { }"}],[16458,{"text":"elsif (@seq2 > 1) { }"}],[16384,{"text":"if (my $icmp_aref = $top_prt{'icmp'})"}],[16476,{"text":"if ($ip_prt) { }"}],[16476,{"text":"elsif (@seq > 1) { }"}],[16492,{"text":"if $$bintree{'proto'} eq 'ip'"}],[16514,{"text":"if $intf_rules"}],[16534,{"text":"$$rule{'deny'} ? :"}],[16541,{"text":"$proto eq 'icmp' ? :"}],[16541,{"text":"$proto eq 'udp' ? :"}],[16541,{"text":"$proto eq 'tcp' ? :"}],[16536,{"text":"unless ($src_prt)"}],[16533,{"text":"unless ($$rule{'action'})"}],[16557,{"text":"unless ($intf_rules and $rules eq $intf_rules and $what eq 'dst')"}],[16556,{"text":"if ($$obj{'loopback'} and my $network = $$obj{'network'})"}],[16567,{"text":"if (my $other = $$identical{$no_nat_set})"}],[16574,{"text":"unless ($intf_rules and $rules eq $intf_rules and $what eq 'dst')"}],[16566,{"text":"if (my $identical = $$obj{'is_identical'}) { }"}],[16566,{"text":"elsif (my $aref = $$obj{'redundancy_interfaces'}) { }"}],[16581,{"text":"if $obj eq $orig"}],[16585,{"text":"unless $copied++"}],[16601,{"text":"if ($depth < $#$order)"}],[16617,{"text":"if ($ref2x eq \\%ref2obj) { }"}],[16644,{"text":"if (not $$subtree2{$key} or $$subtree2{$key} ne $$subtree{$key})"}],[16708,{"text":"if $seq and not @$seq"}],[16710,{"text":"if $hi"}],[16711,{"text":"if $lo"}],[16709,{"text":"unless ($seq)"}],[16722,{"text":"$depth + 1 >= @$order ? :"}],[16726,{"text":"if (@$rules > 1 and not $$bintree{'noop'})"}],[16721,{"text":"unless ($rules)"}],[16737,{"text":"if $seq"}],[16738,{"text":"unless $$bintree{'noop'}"}],[16739,{"text":"if (@add_keys) { }"}],[16713,{"text":"if ($subtree)"}],[16751,{"text":"unless $seq"}],[16762,{"text":"if (@rules > 1 and not $$tree{'noop'}) { }"}],[16821,{"text":"unless $action"}],[16792,{"text":"if ($action eq $prev_action) { }"}],[16781,{"text":"if ($rules and @$rules)"}],[16839,{"text":"if ($i != $#rule_trees)"}],[16855,{"text":"$$src_prt{'proto'} eq 'icmp' ? :"}],[16855,{"text":"$$src_prt{'proto'} eq 'udp' ? :"}],[16855,{"text":"$$src_prt{'proto'} eq 'tcp' ? :"}],[16851,{"text":"if (not $prt || $src_prt) { }"}],[16851,{"text":"elsif (not $prt) { }"}],[16892,{"text":"$action eq 'permit' ? :"}],[16892,{"text":"is_chain($action) ? :"}],[16915,{"text":"$$rule{'goto'} ? :"}],[16919,{"text":"if ($$ip_mask[1] != 0)"}],[16917,{"text":"if (my $src = $$rule{'src'})"}],[16925,{"text":"if ($$ip_mask[1] != 0)"}],[16923,{"text":"if (my $dst = $$rule{'dst'})"}],[16933,{"text":"unless $src_prt or $prt"}],[16934,{"text":"if $prt and $$prt{'proto'} eq 'ip'"}],[16936,{"text":"if $$src_prt{'proto'} eq 'ip'"}],[16937,{"text":"$$src_prt{'proto'} eq 'icmp' ? :"}],[16937,{"text":"$$src_prt{'proto'} eq 'udp' ? :"}],[16937,{"text":"$$src_prt{'proto'} eq 'tcp' ? :"}],[16935,{"text":"unless ($prt)"}],[16975,{"text":"unless $$prt{'has_neighbor'}"}],[16996,{"text":"if values %$href == 1"}],[17008,{"text":"if (defined(my $type = $$active_log{$tag}))"}],[17006,{"text":"if (my $log = $$rule{'log'})"}],[17032,{"text":"unless @sorted >= 2"}],[17042,{"text":"if (my $range = delete $$rule_a{'range'}) { }"}],[17039,{"text":"if ($a2 + 1 == $b1)"}],[17075,{"text":"if delete $$rule{'local_del'}"}],[17087,{"text":"unless ($new_prt)"}],[17079,{"text":"if (my $range = delete $$rule{'range'}) { }"}],[17070,{"text":"if ($changed)"}],[17116,{"text":"unless ($net)"}],[17127,{"text":"unless $$router{'managed'} =~ /^local/"}],[17136,{"text":"if $$rule{'deny'}"}],[17146,{"text":"if ($mask > $m and match_ip($ip, $i, $m) or match_ip($i, $ip, $mask))"}],[17157,{"text":"if ($both_match < 2)"}],[17163,{"text":"if $changed"}],[17171,{"text":"unless $$router{'managed'} =~ /^local/"}],[17172,{"text":"if $$hardware{'crosslink'}"}],[17179,{"text":"if $attr eq 'rules' and $$hardware{'no_in_acl'}"}],[17180,{"text":"if $attr eq 'out_rules' and not $$hardware{'need_out_acl'}"}],[17187,{"text":"if $attr eq 'out_rules'"}],[17190,{"text":"if $$zone{'zone_cluster'}"}],[17204,{"text":"unless @redundant == @interfaces and equal(@redundant)"}],[17196,{"text":"if (@interfaces > 1)"}],[17210,{"text":"&$check() ? :"}],[17236,{"text":"if $$rule{'deleted'} and not $$rule{'managed_intf'}"}],[17238,{"text":"if is_network($src) and $$src{'mask'} == 0"}],[17239,{"text":"if is_network($dst) and $$dst{'mask'} == 0"}],[17246,{"text":"if fast_mode()"}],[17266,{"text":"if not $$network{'mask'} or $$network{'mask'} == 0"}],[17268,{"text":"if (not $up or $$up{'mask'} == 0)"}],[17280,{"text":"$$_{'id_rules'} ? :"}],[17284,{"text":"unless my $managed = $$router{'managed'}"}],[17288,{"text":"$$interface{'ip'} eq 'tunnel' ? :"}],[17294,{"text":"if $seen{$hardware}"}],[17297,{"text":"if ($$router{'model'}{'filter'} eq 'iptables')"}],[17336,{"text":"unless ($rules eq 'intf_rules' and $what eq 'dst')"}],[17333,{"text":"if ($$obj{'loopback'} and my $network = $$obj{'network'})"}],[17346,{"text":"if (my $other = $$identical{$no_nat_set})"}],[17354,{"text":"if (not $rules eq 'intf_rules' && $what eq 'dst' or $$router{'crosslink_intf_hash'} and $$router{'crosslink_intf_hash'}{$$aref[0]})"}],[17345,{"text":"if (my $identical = $$obj{'is_identical'}) { }"}],[17345,{"text":"elsif (my $aref = $$obj{'redundancy_interfaces'}) { }"}],[17366,{"text":"unless $obj_changed"}],[17379,{"text":"if ($id_hash{$deny}{$src_range}{$src}{$dst}{$prt})"}],[17391,{"text":"if ($$src{'is_supernet'} or $$dst{'is_supernet'} or $$rule{'stateless'})"}],[17404,{"text":"unless $rule"}],[17432,{"text":"if ($rule ne $other_rule and $log eq $o_log)"}],[17430,{"text":"if (my $other_rule = $$hash{$prt})"}],[17445,{"text":"unless $prt = $$prt{'up'}"}],[17428,{"text":"if (my $hash = $$hash{$dst})"}],[17448,{"text":"unless $dst = $$dst{'up'}"}],[17425,{"text":"if (my $hash = $$hash{$src})"}],[17451,{"text":"unless $src = $$src{'up'}"}],[17422,{"text":"if (my $hash = $$hash{$src_range})"}],[17454,{"text":"unless $src_range = $$src_range{'up'}"}],[17419,{"text":"if (my $hash = $hash{$deny})"}],[17457,{"text":"if $deny"}],[17469,{"text":"if $$rule{'deny'}"}],[17490,{"text":"if $$$ref{'id'}"}],[17496,{"text":"if $$$ref{'has_id_hosts'}"}],[17489,{"text":"if ($type eq 'Subnet') { }"}],[17489,{"text":"elsif ($type eq 'Network') { }"}],[17484,{"text":"if ($do_auth)"}],[17499,{"text":"if ($$ref eq $dst and is_interface($dst) and $$dst{'router'} eq $router || $$router{'crosslink_intf_hash'} && $$router{'crosslink_intf_hash'}{$dst})"}],[17514,{"text":"if $$net{'has_other_subnet'}"}],[17512,{"text":"if (is_subnet($$ref) or is_interface($$ref))"}],[17517,{"text":"if (my $max = $$$ref{'max_secondary_net'})"}],[17524,{"text":"if (my $one_net = $$identical{$no_nat_set})"}],[17523,{"text":"if (my $identical = $$$ref{'is_identical'})"}],[17537,{"text":"if ($old ne $rule)"}],[17557,{"text":"if $$rule{'log'}"}],[17564,{"text":"if ($$src{'is_supernet'} or $$dst{'is_supernet'})"}],[17535,{"text":"if (my $old = $id_hash2{$src}{$dst}) { }"}],[17466,{"text":"if ($secondary_filter and $$rule{'some_non_secondary'} or $standard_filter and $$rule{'some_primary'})"}],[17578,{"text":"if ($changed)"}],[17654,{"text":"if (@$rules)"}],[17670,{"text":"$$hardware{'no_in_acl'} ? :"}],[17668,{"text":"unless ($permit_any)"}],[17688,{"text":"if ($$model{'has_vip'})"}],[17686,{"text":"unless ($interfaces)"}],[17712,{"text":"if $$rule{'deny'}"}],[17714,{"text":"unless is_network($src)"}],[17715,{"text":"if $$src{'mask'} != 0"}],[17716,{"text":"if $$rule{'prt'} ne $prt_ip"}],[17718,{"text":"if $$intf_hash{$dst}"}],[17719,{"text":"if $$dst{'redundancy_interfaces'}"}],[17722,{"text":"if ($permit_any)"}],[17727,{"text":"if ($changed)"}],[17740,{"text":"if $$intf{'ip'} =~ /^(unnumbered|negotiated|tunnel|bridged)$/"}],[17743,{"text":"if (match_ip($i, $ip, $mask))"}],[17752,{"text":"if $$rule{'deny'}"}],[17753,{"text":"if $$rule{'prt'}{'established'}"}],[17758,{"text":"if $local_filter and $rule eq $permit_any_rule"}],[17768,{"text":"if $mask == 4294967295"}],[17773,{"text":"if ($$dst{'mask'} == 0)"}],[17764,{"text":"if (is_objectgroup($dst)) { }"}],[17764,{"text":"elsif (is_network($dst)) { }"}],[17786,{"text":"if ($no_protect{$interface} or not $protect_all || $need_protect{$interface} || $$hardware{'no_in_acl'})"}],[17800,{"text":"if ($$interface{'ip'} =~ /^(?:unnumbered|negotiated|tunnel|bridged)$/)"}],[17805,{"text":"if $$interface{'ip'} eq 'short'"}],[17812,{"text":"if $$nat_network{'dynamic'}"}],[17809,{"text":"if ($$interface{'hardware'} ne $hardware)"}],[17814,{"text":"if ($$interface{'redundancy_interfaces'} and $seen{$$interface{'redundancy_interfaces'}}++)"}],[17829,{"text":"if ($$hardware{'crosslink'})"}],[17676,{"text":"if ($$router{'need_protect'} or $$router{'crosslink_intf_hash'}) { }"}],[17841,{"text":"@$intf_rules ? :"}],[17856,{"text":"if $$rule{'deny'}"}],[17858,{"text":"is_network($dst) ? :"}],[17862,{"text":"if $$dst_network{'mask'} == 0"}],[17865,{"text":"unless $$a{'ip'} <=> $$b{'ip'}"}],[17902,{"text":"if ($$model{'v8_4'}) { }"}],[17929,{"text":"if $asa_vpn_attr_need_value{$key}"}],[17928,{"text":"if (defined $value)"}],[17940,{"text":"unless $$interface{'ip'} eq 'tunnel'"}],[17976,{"text":"if ($$split_tunnel_nets[$i] ne $$cached_nets[$i])"}],[17971,{"text":"if (my $href = $split_t_cache{@$split_tunnel_nets})"}],[17988,{"text":"if (@$split_tunnel_nets) { }"}],[17986,{"text":"unless ($acl_name)"}],[17958,{"text":"if (not defined $split_tunnel_policy) { }"}],[17958,{"text":"elsif ($split_tunnel_policy eq 'tunnelall') { }"}],[17958,{"text":"elsif ($split_tunnel_policy eq 'tunnelspecified') { }"}],[18031,{"text":"if ($$model{'v8_4'})"}],[18038,{"text":"if (%$attributes)"}],[18047,{"text":"if $group_policy_name"}],[18057,{"text":"if ($id =~ /^@/)"}],[18075,{"text":"defined $value ? :"}],[18073,{"text":"if ($spec and $$spec{'tg_general'})"}],[18082,{"text":"$$model{'v8_4'} ? :"}],[18113,{"text":"if ($$model{'v8_4'})"}],[18028,{"text":"if ($$src{'mask'} == 4294967295) { }"}],[18154,{"text":"unless my $id = $$interface{'peers'}[0]{'id'}"}],[18159,{"text":"if (keys %$attributes)"}],[18167,{"text":"if $group_policy_name"}],[17943,{"text":"if (my $hash = $$interface{'id_rules'}) { }"}],[18174,{"text":"if (keys %cert_group_map or keys %single_cert_map)"}],[18197,{"text":"$action eq 'permit' ? :"}],[18197,{"text":"is_chain($action) ? :"}],[18201,{"text":"$$rule{'goto'} ? :"}],[18203,{"text":"if ($$spair[1] != 0)"}],[18206,{"text":"if ($$dpair[1] != 0)"}],[18209,{"text":"if ($prt ne $prt_ip)"}],[18220,{"text":"if $$model{'filter'} ne 'iptables'"}],[18253,{"text":"if $$model{'filter'} ne 'iptables'"}],[18273,{"text":"if $$hardware{'loopback'}"}],[18277,{"text":"if ($config{'comment_acls'})"}],[18323,{"text":"if $$hardware{'loopback'}"}],[18326,{"text":"if $$hardware{'name'} eq 'device' and $$model{'class'} eq 'ASA'"}],[18333,{"text":"unless ($$router{'no_group_code'})"}],[18332,{"text":"if ($$model{'can_objectgroup'})"}],[18342,{"text":"if $suffix eq 'out' and not $$hardware{'need_out_acl'}"}],[18347,{"text":"unless @$rules != 1"}],[18346,{"text":"unless (grep {my $rules = $$hardware{$_} || [];\n$$rules[0] ne $permit_any_rule unless @$rules != 1;} 'rules', 'intf_rules')"}],[18345,{"text":"unless ($$model{'need_acl'})"}],[18356,{"text":"if ($config{'comment_acls'})"}],[18374,{"text":"if $$model{'class'} eq 'ASA'"}],[18361,{"text":"if ($filter eq 'IOS') { }"}],[18361,{"text":"elsif ($filter eq 'NX-OS') { }"}],[18361,{"text":"elsif ($filter eq 'ACE') { }"}],[18361,{"text":"elsif ($filter eq 'PIX') { }"}],[18389,{"text":"unless (@$out_rules and $$out_rules[-1] eq $permit_any_rule)"}],[18378,{"text":"if ($suffix eq 'in') { }"}],[18396,{"text":"if ($filter eq 'IOS' or $filter eq 'NX-OS') { }"}],[18396,{"text":"elsif ($filter eq 'ACE') { }"}],[18396,{"text":"elsif ($filter eq 'PIX') { }"}],[18427,{"text":"if ($filter eq 'iptables') { }"}],[18459,{"text":"unless @tunnel_intf == 1"}],[18464,{"text":"if $_ ne $wan_intf"}],[18505,{"text":"if $$tunnel_intf{'crypto'}{'detailed_crypto_acl'}"}],[18525,{"text":"if $crypto_filter_name"}],[18536,{"text":"if ($crypto_type eq 'IOS') { }"}],[18536,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[18551,{"text":"$is_hub ? :"}],[18553,{"text":"$detailed ? :"}],[18555,{"text":"unless $is_hub"}],[18569,{"text":"if $$router{'no_crypto_filter'}"}],[18573,{"text":"if ($crypto_type eq 'IOS') { }"}],[18595,{"text":"if ($crypto_filter_name)"}],[18601,{"text":"if ($$isakmp{'ike_version'} == 2) { }"}],[18601,{"text":"elsif ($$model{'v8_4'}) { }"}],[18600,{"text":"if ($crypto_type eq 'ASA') { }"}],[18615,{"text":"if (my $pfs_group = $$ipsec{'pfs_group'})"}],[18622,{"text":"unless ($lifetime == 3600 and $crypto_type eq 'IOS')"}],[18619,{"text":"if (my $lifetime = $$ipsec{'lifetime'})"}],[18639,{"text":"if ($$isakmp{'ike_version'} == 2) { }"}],[18639,{"text":"elsif ($$model{'v8_4'}) { }"}],[18637,{"text":"if ($authentication eq 'rsasig') { }"}],[18708,{"text":"if ($crypto_type eq 'IOS') { }"}],[18708,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[18717,{"text":"if ($crypto_type eq 'IOS') { }"}],[18717,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[18746,{"text":"if (my $id = $$peer{'id'})"}],[18738,{"text":"if ($crypto_type eq 'ASA')"}],[18759,{"text":"unless $crypto_type eq 'ASA'"}],[18818,{"text":"unless @ipsec"}],[18827,{"text":"if ($crypto_type eq 'EZVPN')"}],[18835,{"text":"if ($crypto_type =~ /^ASA/)"}],[18840,{"text":"if ($crypto_type eq 'ASA_VPN')"}],[18847,{"text":"if ($crypto_type eq 'ASA_EZVPN')"}],[18851,{"text":"unless $crypto_type =~ /^(:?IOS|ASA)$/"}],[18858,{"text":"unless $crypto_type eq 'IOS'"}],[18868,{"text":"unless ($authentication eq 'rsa-sig')"}],[18874,{"text":"$crypto_type eq 'ASA' ? :"}],[18873,{"text":"if ($encryption =~ /^aes(\\d+)$/)"}],[18886,{"text":"unless ($lifetime == 86400)"}],[18903,{"text":"if (my $ah = $$ipsec{'ah'})"}],[18907,{"text":"if (not my $esp = $$ipsec{'esp_encryption'}) { }"}],[18907,{"text":"elsif ($esp =~ /^(aes|des|3des)$/) { }"}],[18907,{"text":"elsif ($esp =~ /^aes(192|256)$/) { }"}],[18917,{"text":"if (my $esp_ah = $$ipsec{'esp_authentication'})"}],[18926,{"text":"if (my $ah = $$ipsec{'ah'})"}],[18936,{"text":"$crypto_type eq 'ASA' ? :"}],[18929,{"text":"if (not my $esp = $$ipsec{'esp_encryption'}) { }"}],[18929,{"text":"elsif ($esp =~ /^(aes|des|3des)$/) { }"}],[18929,{"text":"elsif ($esp =~ /^aes(192|256)$/) { }"}],[18939,{"text":"if (my $esp_ah = $$ipsec{'esp_authentication'})"}],[18942,{"text":"$crypto_type eq 'ASA' && $$model{'v8_4'} ? :"}],[18901,{"text":"if ($crypto_type eq 'ASA' and $$isakmp{'ike_version'} == 2) { }"}],[18954,{"text":"unless $$interface{'ip'} eq 'tunnel'"}],[18956,{"text":"if ($ip =~ /^(?:negotiated|short|unnumbered)$/) { }"}],[18971,{"text":"if (my $interfaces = $hardware2crypto{$hardware})"}],[18976,{"text":"if (my $interfaces = $hardware2dyn_crypto{$hardware})"}],[18983,{"text":"unless $have_crypto_map"}],[18984,{"text":"if ($crypto_type eq 'IOS') { }"}],[18984,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[18997,{"text":"unless $$model{'print_interface'}"}],[19002,{"text":"if $name eq 'VIP' and $$model{'has_vip'}"}],[19021,{"text":"if $secondary"}],[19027,{"text":"if $secondary"}],[19008,{"text":"if ($ip eq 'tunnel') { }"}],[19008,{"text":"elsif ($ip eq 'unnumbered') { }"}],[19008,{"text":"elsif ($ip eq 'negotiated') { }"}],[19008,{"text":"elsif ($$model{'use_prefix'}) { }"}],[19033,{"text":"if ($class eq 'NX-OS') { }"}],[19032,{"text":"if (my $vrf = $$router{'vrf'})"}],[19044,{"text":"if ($class eq 'IOS' and $stateful and not $$hardware{'loopback'})"}],[19047,{"text":"if (my $other = $$hardware{'subcmd'})"}],[19052,{"text":"if $class eq 'ACE'"}],[19067,{"text":"unless mkdir $dir"}],[19066,{"text":"unless (-e $dir)"}],[19070,{"text":"unless -d $dir"}],[19086,{"text":"if $seen{$router}"}],[19089,{"text":"if $$router{'orig_router'}"}],[19100,{"text":"unless open my $code_fd, '>', $file"}],[19108,{"text":"if (my $orig_interfaces = $$router{'orig_interfaces'})"}],[19115,{"text":"if (my $members = $$router{'vrf_members'}) { }"}],[19127,{"text":"$ips ? :"}],[19129,{"text":"if (@ips)"}],[19126,{"text":"if ($$router{'policy_distribution_point'})"}],[19139,{"text":"if ($$router{'managed'}) { }"}],[19154,{"text":"unless close $code_fd"}],[19163,{"text":"unless defined $in_path and -d $in_path"}],[19164,{"text":"unless defined $out_dir"}],[19173,{"text":"unless -d $raw_dir"}],[19183,{"text":"unless opendir my $dh, $raw_dir"}],[19185,{"text":"if $file =~ /^\\./"}],[19186,{"text":"if $file =~ /$config{'ignore_files'}/o"}],[19191,{"text":"unless (-f $raw_path)"}],[19195,{"text":"unless ($device_names{$file})"}],[19200,{"text":"unless system(\"cp -f $raw_path $copy\") == 0"}],[19212,{"text":"if $config{'time_stamps'}"}],[19393,{"text":"if (my $expected = check_config_pair($key, $val))"}],[19401,{"text":"get_config_pattern($key) eq '0|1' ? :"}],[19412,{"text":"unless open my $fh, '>', \\$out"}],[19408,{"text":"unless (GetOptionsFromArray $args, %options)"}],[19426,{"text":"if defined $main_file"}],[19435,{"text":"if defined $out_dir"}],[19438,{"text":"if @$args"}],[19484,{"text":"if ($out_dir)"}]],"file":"lib/Netspoc.pm","condition":[[218,{"op":"||","right":"$config_type{'_default'}","type":"or_3","left":"$pattern"}],[624,{"op":"||=","right":"qr/\\G$token/","left":"$token2regex{$token}","type":"or_3"}],[631,{"op":"||","right":"syntax_err(\"Expected '${token}'\")","type":"or_2","left":"check($token)"}],[655,{"left":"$1 > 255","type":"or_3","op":"or","right":"$2 > 255"}],[655,{"left":"$1 > 255 or $2 > 255","type":"or_3","op":"or","right":"$3 > 255"}],[655,{"op":"or","right":"$4 > 255","left":"$1 > 255 or $2 > 255 or $3 > 255","type":"or_3"}],[801,{"left":"$user_ref_error","type":"or_3","right":"$has_user_ref != $$user_object{'refcount'} > $count","op":"||="}],[825,{"op":"or","right":"$type eq 'interface'","type":"or_3","left":"$type eq 'network'"}],[839,{"type":"or_3","left":"check_typed_name()","right":"syntax_err('Typed name expected')","op":"||"}],[882,{"type":"or_3","left":"$interface","right":"$type eq 'host'","op":"||"}],[882,{"left":"$interface || $type eq 'host'","type":"and_3","right":"check('managed')","op":"and"}],[882,{"left":"$type eq 'any'","type":"and_3","right":"check('ip')","op":"and"}],[881,{"right":"$input =~ / \\G ( [\\w-]+ (?: \\@ [\\w-]+ ) ) /cgx","op":"and","left":"$interface","type":"and_3"}],[881,{"type":"or_3","left":"$interface and $input =~ / \\G ( [\\w-]+ (?: \\@ [\\w-]+ ) ) /cgx","right":"$input =~ / \\G ( [\\w-]+ ) /cgx","op":"or"}],[1208,{"left":"$$info{'extension'}","type":"or_2","right":"{}","op":"||"}],[1339,{"type":"xor_4","left":"$$host{'ip'}","op":"xor","right":"$$host{'range'}"}],[1349,{"op":"||=","right":"'short'","type":"or_2","left":"$$host{'ip'}"}],[1353,{"right":"{}","op":"||=","type":"or_2","left":"$$host{'radius_attributes'}"}],[1503,{"left":"$$network{'nat'}","type":"and_3","op":"and","right":"$$network{'nat'}{$nat_tag}"}],[1566,{"type":"and_3","left":"match_ip($ip1, $ip, $mask)","op":"and","right":"match_ip($ip2, $ip, $mask)"}],[1582,{"right":"$$network{'crosslink'}","op":"and","type":"and_3","left":"@{$$network{'hosts'};}"}],[1605,{"right":"{}","op":"||=","left":"$$network{'radius_attributes'}","type":"or_2"}],[1777,{"op":"and","right":"not $$virtual{'redundancy_type'}","left":"$$virtual{'redundancy_id'}","type":"and_3"}],[1815,{"right":"'bridged'","op":"||=","left":"$$interface{'ip'}","type":"or_2"}],[1841,{"right":"'short'","op":"||=","type":"or_2","left":"$$interface{'ip'}"}],[1854,{"right":"not $$interface{'vip'}","op":"and","type":"and_3","left":"$$interface{'owner'}"}],[1937,{"left":"@levels >= 2","type":"and_3","op":"and","right":"not equal(@levels)"}],[1932,{"left":"($level) = $hwname =~ /(\\d+)$/","type":"and_3","op":"and","right":"$level <= 100"}],[2082,{"op":"&&","right":"$$model{'has_vip'}","type":"and_3","left":"$model"}],[2082,{"left":"$$interface{'vip'}","type":"and_3","right":"not $model && $$model{'has_vip'}","op":"and"}],[2115,{"type":"and_3","left":"$$router{'vrf'}","right":"not $$model{'can_vrf'}","op":"and"}],[2153,{"left":"$$interface{'bind_nat'}","type":"or_3","right":"$bind_nat0","op":"||"}],[2153,{"left":"$$hardware{'bind_nat'}","type":"or_3","right":"$bind_nat0","op":"||"}],[2169,{"right":"$$model{'has_vip'}","op":"and","type":"and_3","left":"$hw_name eq 'VIP'"}],[2169,{"type":"and_3","left":"$hw_name eq 'VIP' and $$model{'has_vip'}","right":"not $$interface{'vip'}","op":"and"}],[2199,{"op":"||=","right":"$all_routing","left":"$$interface{'routing'}","type":"or_3"}],[2201,{"type":"and_3","left":"my $routing = $$interface{'routing'}","right":"$$interface{'ip'} eq 'unnumbered'","op":"and"}],[2219,{"type":"and_3","left":"$$router{'log_deny'}","op":"and","right":"not $$model{'can_log_deny'}"}],[2251,{"op":"and","right":"not $$model{'need_protect'}","type":"and_3","left":"$$router{'no_protect_self'}"}],[2259,{"right":"not $managed =~ /secondary$/","op":"and","type":"and_3","left":"$$router{'strict_secondary'}"}],[2266,{"right":"not $$model{'has_interface_level'}","op":"and","left":"defined $$interface{'security_level'}","type":"and_3"}],[2272,{"type":"or_3","left":"$$interface{'hub'}","right":"$$interface{'spoke'}","op":"or"}],[2277,{"left":"$$interface{'hub'}","type":"and_3","op":"&&","right":"$$model{'do_auth'}"}],[2277,{"left":"$$interface{'no_check'}","type":"and_3","op":"and","right":"not $$interface{'hub'} && $$model{'do_auth'}"}],[2371,{"op":"||=","right":"{}","left":"$$router{'radius_attributes'}","type":"or_2"}],[2496,{"op":"||","right":"$$interface{'hub'}","type":"or_3","left":"$$interface{'spoke'}"}],[2496,{"type":"and_3","left":"$$interface{'spoke'} || $$interface{'hub'}","op":"and","right":"not $$interface{'no_check'}"}],[2530,{"left":"$$orig_router{'orig_interfaces'}","type":"or_2","op":"||=","right":"[@$interfaces]"}],[2665,{"right":"ref $$pair[1]","op":"or","type":"or_3","left":"$$pair[0] ne 'network'"}],[2688,{"right":"$$area{'inclusive_border'}","op":"||","left":"$$area{'border'}","type":"or_3"}],[2688,{"type":"and_3","left":"$$area{'border'} || $$area{'inclusive_border'}","op":"and","right":"$$area{'anchor'}"}],[2691,{"op":"or","right":"$$area{'border'}","type":"or_3","left":"$$area{'anchor'}"}],[2691,{"right":"$$area{'inclusive_border'}","op":"or","type":"or_3","left":"$$area{'anchor'} or $$area{'border'}"}],[2729,{"left":"$port1 == 1","type":"and_3","op":"and","right":"$port2 == 65535"}],[2780,{"type":"or_3","left":"$type == 0","op":"or","right":"$type == 3"}],[2780,{"left":"$type == 0 or $type == 3","type":"or_3","op":"or","right":"$type == 11"}],[2825,{"right":"$proto eq 'udp'","op":"or","type":"or_3","left":"$proto eq 'tcp'"}],[2830,{"left":"$v1 == 1","type":"and_3","op":"and","right":"$v2 == 65535"}],[2841,{"type":"and_3","left":"$src_range","right":"&$port_name(@$src_range)","op":"&&"}],[2937,{"right":"read_simple_protocol()","op":"||","left":"check_typed_name()","type":"or_3"}],[3019,{"op":"or","right":"$dst_user","type":"or_3","left":"$src_user"}],[3021,{"right":"$dst_user","op":"&&","type":"and_3","left":"$src_user"}],[3021,{"left":"$$service{'foreach'}","type":"and_3","op":"and","right":"not $src_user && $dst_user"}],[3248,{"type":"and_3","left":"$$owner{'extend_only'}","op":"and","right":"$$owner{'watchers'}"}],[3337,{"op":"and","right":"-d $path","left":"defined $path","type":"and_3"}],[3408,{"left":"$read_syntax","type":"or_2","op":"||=","right":"\\&read_netspoc"}],[3411,{"type":"and_3","left":"defined $path","op":"and","right":"-d $path"}],[3518,{"right":"$$rule{'rule'}{'service'}","op":"&&","type":"and_3","left":"$$rule{'rule'}"}],[3523,{"type":"or_3","left":"$$rule{'orig_prt'}","op":"||","right":"$$rule{'prt'}"}],[3548,{"op":"or","right":"$proto eq 'udp'","type":"or_3","left":"$proto eq 'tcp'"}],[3620,{"left":"$$hash{$$prt{'type'}}","type":"or_3","right":"$up","op":"||"}],[3789,{"type":"and_3","left":"$a1 == 1","op":"and","right":"$a2 == 65535"}],[3900,{"left":"$key","type":"or_2","right":"'owner'","op":"||="}],[3981,{"right":"$name","op":"||","type":"or_3","left":"$$owner{'alias'}"}],[4121,{"left":"$range","type":"and_3","op":"and","right":"$range ne $aref_tcp_any"}],[4121,{"right":"$range and $range ne $aref_tcp_any","op":"or","type":"or_3","left":"$src_range"}],[4459,{"left":"$$interface{'spoke'}","type":"or_3","right":"$$interface{'hub'}","op":"or"}],[4500,{"right":"''","op":"||","left":"$$virtual1{'redundancy_type'}","type":"or_2"}],[4501,{"type":"or_2","left":"$$virtual1{'redundancy_id'}","right":"''","op":"||"}],[4504,{"type":"or_2","left":"$$virtual2{'redundancy_type'}","op":"||","right":"''"}],[4510,{"right":"''","op":"||","type":"or_2","left":"$$virtual2{'redundancy_id'}"}],[4594,{"right":"$$router{'routing_only'}","op":"or","left":"$$router{'managed'}","type":"or_3"}],[4607,{"type":"and_3","left":"$$network{'ip'} eq 'unnumbered'","op":"and","right":"$$network{'interfaces'}"}],[4607,{"right":"@{$$network{'interfaces'};} > 2","op":"and","left":"$$network{'ip'} eq 'unnumbered' and $$network{'interfaces'}","type":"and_3"}],[4637,{"op":"||","right":"$$router{'routing_only'}","type":"or_3","left":"$$router{'managed'}"}],[4637,{"left":"$$router{'managed'} || $$router{'routing_only'}","type":"and_3","op":"and","right":"not $$interface{'routing'}"}],[4643,{"op":"and","right":"$$interface{'redundant'}","type":"and_3","left":"$$old_intf{'redundant'}"}],[4655,{"left":"$short_intf","type":"and_3","right":"$route_intf","op":"and"}],[4738,{"left":"not $network","type":"or_3","op":"or","right":"$$network{'disabled'}"}],[4810,{"op":"and","right":"$mask == $mask1","type":"and_3","left":"$ip == $ip1"}],[4869,{"type":"or_3","left":"$$router{'managed'}","right":"$$router{'routing_only'}","op":"or"}],[4918,{"op":"||","right":"$$_{'routing_only'}","type":"or_3","left":"$$_{'managed'}"}],[4995,{"op":"and","right":"$low + $mask <= $high","left":"($low & $mask) == 0","type":"and_3"}],[5055,{"op":"xor","right":"$nat2","type":"xor_4","left":"$nat"}],[5055,{"op":"and","right":"$nat2","type":"and_3","left":"$nat"}],[5065,{"left":"$$nat2{$name}","type":"and_3","right":"$$nat{$name} eq $$nat2{$name}","op":"and"}],[5082,{"op":"xor","right":"$owner2","type":"xor_4","left":"$owner"}],[5082,{"right":"$owner2","op":"and","left":"$owner","type":"and_3"}],[5082,{"op":"and","right":"$owner ne $owner2","left":"$owner and $owner2","type":"and_3"}],[5082,{"right":"$owner and $owner2 and $owner ne $owner2","op":"or","type":"or_3","left":"$owner xor $owner2"}],[5122,{"type":"or_3","left":"$$subnet{'nat'}","right":"$$subnet{'id'}","op":"||"}],[5122,{"right":"$ip % $modulo == 0","op":"and","type":"and_3","left":"not $$subnet{'nat'} || $$subnet{'id'}"}],[5146,{"right":"$up = $inv_prefix_aref[$up_inv_prefix]{$ip}","op":"and","left":"$up_inv_prefix < @inv_prefix_aref","type":"and_3"}],[5195,{"left":"$$subnet{'up'}","type":"or_3","op":"||=","right":"$network"}],[5217,{"op":"and","right":"$hash{$neighbor}","left":"$neighbor = $$subnet{'neighbor'}","type":"and_3"}],[5280,{"left":"$managed","type":"or_2","right":"0","op":"||="}],[5329,{"type":"or_3","left":"$$info{'r'}{$router}","op":"||","right":"$$info{'n'}{$router}{$network}"}],[5348,{"type":"and_3","left":"not $other","op":"and","right":"$other = $$info{'i'}{$router}"}],[5497,{"right":"$$router{'routing_only'}","op":"||","type":"or_3","left":"$$router{'managed'}"}],[5497,{"op":"and","right":"not $$router{'managed'} || $$router{'routing_only'}","type":"and_3","left":"$managed"}],[5557,{"left":"$$obj{'managed'}","type":"or_3","right":"$$obj{'routing_only'}","op":"||"}],[5557,{"type":"and_3","left":"$managed","op":"and","right":"not $$obj{'managed'} || $$obj{'routing_only'}"}],[5627,{"right":"$$object{'is_aggregate'}","op":"and","type":"and_3","left":"$type eq 'Network'"}],[5643,{"left":"$type eq 'Host'","type":"or_3","op":"or","right":"$type eq 'Interface'"}],[5825,{"type":"or_2","left":"$$object{'private'}","op":"||","right":"'public'"}],[5793,{"op":"and","right":"$$object{'zone'}{'zone_cluster'}","type":"and_3","left":"$$object{'is_aggregate'}"}],[5976,{"type":"or_3","left":"$$network{'has_id_hosts'}","right":"$subnet_warning_seen{$subnet}++","op":"or"}],[6108,{"type":"or_3","left":"$proto eq 'tcp'","right":"$proto eq 'udp'","op":"or"}],[6122,{"left":"$src_range","type":"or_3","right":"$$prt{'flags'}","op":"or"}],[6122,{"type":"or_3","left":"$src_range or $$prt{'flags'}","right":"$$dst_range{'name'} ne $$prt{'name'}","op":"or"}],[6162,{"op":"||=","right":"\\%rule_tree","left":"$rule_tree","type":"or_2"}],[6174,{"op":"||","right":"$$dst{'router'}{'routing_only'}","type":"or_3","left":"$$dst{'router'}{'managed'}"}],[6174,{"op":"and","right":"$$dst{'router'}{'managed'} || $$dst{'router'}{'routing_only'}","left":"is_interface($dst)","type":"and_3"}],[6179,{"type":"or_2","left":"$stateless","op":"||=","right":"''"}],[6180,{"left":"$deny","type":"or_2","right":"''","op":"||="}],[6181,{"left":"$src_range","type":"or_3","right":"$prt_ip","op":"||="}],[6275,{"right":"$type eq 'Host'","op":"or","left":"$type eq 'Subnet'","type":"or_3"}],[6288,{"left":"$$obj{'router'}{'managed'}","type":"or_3","op":"or","right":"$$obj{'loopback'}"}],[6309,{"right":"$type eq 'Interface'","op":"or","type":"or_3","left":"$type eq 'Subnet'"}],[6309,{"type":"or_3","left":"$type eq 'Subnet' or $type eq 'Interface'","op":"or","right":"$type eq 'Host'"}],[6369,{"right":"is_autointerface($dst)","op":"or","left":"is_autointerface($src)","type":"or_3"}],[6365,{"left":"is_subnet($src)","type":"and_3","right":"is_subnet($dst)","op":"and"}],[6365,{"right":"$$dst{'is_aggregate'}","op":"and","type":"and_3","left":"$$src{'is_aggregate'}"}],[6390,{"right":"$$src{'ip'} == $$dst{'ip'}","op":"and","type":"and_3","left":"zone_eq($$src{'zone'}, $$dst{'zone'})"}],[6390,{"type":"and_3","left":"zone_eq($$src{'zone'}, $$dst{'zone'}) and $$src{'ip'} == $$dst{'ip'}","right":"$$src{'mask'} == $$dst{'mask'}","op":"and"}],[6365,{"op":"and","right":"$$src{'mask'} == 0","left":"$$src{'is_aggregate'}","type":"and_3"}],[6365,{"type":"and_3","left":"$$dst{'is_aggregate'}","op":"and","right":"$$dst{'mask'} == 0"}],[6409,{"right":"[$src, $dst]","op":"||=","type":"or_2","left":"$$service{'seen_unenforceable'}{$src}{$dst}"}],[6417,{"op":"&&","right":"$$service{'seen_enforceable'}","left":"$$service{'seen_unenforceable'}","type":"and_3"}],[6417,{"type":"and_3","left":"$$service{'has_unenforceable'}","right":"not $$service{'seen_unenforceable'} && $$service{'seen_enforceable'}","op":"and"}],[6432,{"op":"or","right":"$$service{'silent_unenforceable'}","left":"$$service{'seen_unenforceable'}","type":"or_3"}],[6472,{"type":"or_3","left":"$$rule{'orig_prt'}","right":"$$rule{'prt'}","op":"||"}],[6473,{"type":"or_3","left":"$$other{'orig_prt'}","op":"||","right":"$$other{'prt'}"}],[6474,{"left":"$$prt1{'flags'}{'overlaps'}","type":"and_3","right":"$$prt2{'flags'}{'overlaps'}","op":"and"}],[6527,{"left":"$$rule{'orig_prt'}","type":"or_3","right":"$$rule{'prt'}","op":"||"}],[6528,{"left":"$$other{'orig_prt'}","type":"or_3","op":"||","right":"$$other{'prt'}"}],[6529,{"type":"and_3","left":"$$prt1{'flags'}{'overlaps'}","op":"and","right":"$$prt2{'flags'}{'overlaps'}"}],[6532,{"left":"$$rule{'managed_intf'}","type":"and_3","op":"and","right":"not $$rule{'deleted'}{'managed_intf'}"}],[6541,{"type":"or_3","left":"$$router{'managed'}","right":"$$router{'routing_only'}","op":"or"}],[6652,{"left":"$key2log{$key}","type":"or_2","op":"||=","right":"\\@tags"}],[6716,{"right":"get_zone($src)","op":"||","left":"$obj2zone{$src}","type":"or_3"}],[6719,{"type":"or_3","left":"$obj2zone{$dst}","op":"||","right":"get_zone($dst)"}],[6721,{"right":"$dst_zone_cluster","op":"and","left":"$src_zone_cluster","type":"and_3"}],[6721,{"left":"$src_zone_cluster and $dst_zone_cluster","type":"and_3","right":"$src_zone_cluster eq $dst_zone_cluster","op":"and"}],[6721,{"op":"or","right":"$src_zone_cluster and $dst_zone_cluster and $src_zone_cluster eq $dst_zone_cluster","left":"$src_zone eq $dst_zone","type":"or_3"}],[6746,{"op":"and","right":"$src_p eq $private","type":"and_3","left":"$src_p"}],[6746,{"op":"and","right":"$dst_p eq $private","type":"and_3","left":"$dst_p"}],[6746,{"op":"or","right":"$dst_p and $dst_p eq $private","left":"$src_p and $src_p eq $private","type":"or_3"}],[6813,{"op":"or","right":"$$rule{'dst'}{'is_supernet'}","left":"$$rule{'src'}{'is_supernet'}","type":"or_3"}],[6909,{"type":"and_3","left":"$p1 <= 23","op":"and","right":"23 <= $p2"}],[6909,{"op":"and","right":"22 <= $p2","left":"$p1 <= 22","type":"and_3"}],[6989,{"right":"''","op":"||","type":"or_2","left":"$$b{'loopback'}"}],[6989,{"left":"$$a{'loopback'}","type":"or_2","op":"||","right":"''"}],[7080,{"right":"equal(map({$$_{'owner'};} @implicit_owner_zones))","op":"and","type":"and_3","left":"@implicit_owner_zones == @$cluster"}],[7143,{"op":"or","right":"$$router{'routing_only'}","type":"or_3","left":"$$router{'managed'}"}],[7209,{"right":"$$owner{'extend_only'}","op":"and","left":"$owner","type":"and_3"}],[7215,{"type":"and_3","left":"$owner","right":"$$owner{'extend_only'}","op":"and"}],[7237,{"type":"or_2","left":"$extended{$owner}","op":"||","right":"[]"}],[7267,{"right":"@$combined","op":"and","type":"and_3","left":"$combined"}],[7273,{"type":"or_2","left":"$$node{'owner'}","op":"||","right":"''"}],[7315,{"op":"||=","right":"$owner","left":"$$interface{'owner'}","type":"or_3"}],[7322,{"op":"||","right":"$$router{'routing_only'}","left":"$$router{'managed'}","type":"or_3"}],[7382,{"type":"and_3","left":"$unknown2services{$up}","op":"and","right":"$unknown2services{$obj} eq $unknown2services{$up}"}],[7466,{"type":"and_3","left":"keys %$service_owners == 1","right":"$$service_owners{$sub_owner}","op":"and"}],[7475,{"right":"$$service{'multi_owner'}","op":"xor","type":"xor_4","left":"$multi_count > 1"}],[7494,{"type":"and_3","left":"$unknown_owners","op":"and","right":"keys %$unknown_owners"}],[7494,{"left":"$unknown_owners and keys %$unknown_owners","type":"xor_4","op":"xor","right":"$$service{'unknown_owner'}"}],[7548,{"op":"||","right":"$bind_nat0","left":"$$interface{'bind_nat'}","type":"or_3"}],[7556,{"left":"$$out_interface{'bind_nat'}","type":"or_3","right":"$bind_nat0","op":"||"}],[7584,{"op":"||","right":"'(none)'","left":"join(',', @$old_nat_tags)","type":"or_2"}],[7585,{"right":"'(none)'","op":"||","left":"join(',', @$nat_tags)","type":"or_2"}],[7981,{"left":"$nat_network = $$network{'nat'}{$nat_tag}","type":"and_3","op":"and","right":"$$nat_network{'dynamic'}"}],[8017,{"op":"and","right":"$$intf_nat{$nat_tag}","left":"$intf_nat","type":"and_3"}],[8077,{"left":"$partition2tags{$mark}","type":"or_2","right":"{}","op":"||="}],[8094,{"op":"or","right":"$$router{'semi_managed'}","type":"or_3","left":"$$router{'managed'}"}],[8098,{"type":"or_3","left":"$$router{'managed'}","op":"or","right":"$$router{'routing_only'}"}],[8139,{"type":"and_3","left":"my $href = $$network{'nat'}","op":"and","right":"$no_nat_set"}],[8157,{"type":"or_3","left":"$$network{'is_aggregate'}","right":"$$subnet{'is_aggregate'}","op":"or"}],[8161,{"right":"$ip1 <= $sub_ip && $sub_ip <= $ip2","op":"||","left":"match_ip($ip2, $sub_ip, $sub_mask)","type":"or_3"}],[8161,{"op":"and","right":"match_ip($ip2, $sub_ip, $sub_mask) || $ip1 <= $sub_ip && $sub_ip <= $ip2","type":"and_3","left":"$ip2"}],[8161,{"right":"$ip2 and match_ip($ip2, $sub_ip, $sub_mask) || $ip1 <= $sub_ip && $sub_ip <= $ip2","op":"or","type":"or_3","left":"match_ip($ip1, $sub_ip, $sub_mask)"}],[8169,{"type":"and_3","left":"my $nat_tags = $$object{'bind_nat'}","right":"my($nat_tag2) = $$subnet{'name'} =~ /^nat:(.*)\\(/","op":"and"}],[8172,{"left":"grep {$_ eq $nat_tag2;} @$nat_tags","type":"and_3","op":"and","right":"$$object{'ip'} == $$subnet{'ip'}"}],[8172,{"type":"and_3","left":"grep {$_ eq $nat_tag2;} @$nat_tags and $$object{'ip'} == $$subnet{'ip'}","right":"$$subnet{'mask'} == 4294967295","op":"and"}],[8421,{"type":"or_2","left":"$$network{'nat'}","op":"||","right":"{}"}],[8521,{"left":"$$old_net{'is_aggregate'}","type":"or_3","right":"$$network{'is_aggregate'}","op":"or"}],[8521,{"left":"$$nat_old_net{'dynamic'}","type":"and_3","op":"and","right":"$$nat_network{'dynamic'}"}],[8521,{"right":"$$nat_network{'dynamic'}","op":"and","type":"and_3","left":"$$old_net{'loopback'}"}],[8521,{"left":"$$nat_old_net{'dynamic'}","type":"and_3","right":"$$network{'loopback'}","op":"and"}],[8521,{"op":"||","right":"0","type":"or_2","left":"$$network{'bridged'}"}],[8521,{"left":"$$old_net{'bridged'}","type":"or_2","op":"||","right":"1"}],[8567,{"left":"$identical{$old_net}","type":"or_2","op":"||=","right":"[$old_net]"}],[8643,{"type":"or_3","left":"$$bignet{'is_aggregate'}","right":"$$subnet{'is_aggregate'}","op":"or"}],[8643,{"left":"$$bignet{'is_aggregate'} or $$subnet{'is_aggregate'}","type":"or_3","op":"or","right":"$$bignet{'has_subnets'}"}],[8643,{"left":"$$nat_subnet{'subnet_of'}","type":"and_3","right":"$$nat_subnet{'subnet_of'} eq $bignet","op":"and"}],[8643,{"left":"$$bignet{'is_aggregate'} or $$subnet{'is_aggregate'} or $$bignet{'has_subnets'}","type":"or_3","right":"$$nat_subnet{'subnet_of'} and $$nat_subnet{'subnet_of'} eq $bignet","op":"or"}],[8643,{"op":"or","right":"$$nat_subnet{'is_layer3'}","left":"$$bignet{'is_aggregate'} or $$subnet{'is_aggregate'} or $$bignet{'has_subnets'} or $$nat_subnet{'subnet_of'} and $$nat_subnet{'subnet_of'} eq $bignet","type":"or_3"}],[8655,{"op":"||=","right":"$bignet","type":"or_3","left":"$$nat_subnet{'subnet_of'}"}],[8894,{"right":"$strength2intf{$crosslink_strength{'secondary'}}","op":"and","left":"$weakest == $crosslink_strength{'local'}","type":"and_3"}],[8903,{"type":"or_3","left":"not $out_acl_count","right":"$out_acl_count == @{$$network{'interfaces'};}","op":"or"}],[8953,{"left":"$mask == 0","type":"and_3","right":"$$network{'is_aggregate'}","op":"and"}],[8956,{"type":"and_3","left":"$mask >= $m","op":"and","right":"match_ip($ip, $i, $m)"}],[8973,{"type":"or_3","left":"$k","right":"join(',', map({join '/', @$_;} @$filter_only))","op":"||="}],[9092,{"right":"[]","op":"||=","type":"or_2","left":"$$aggregate{'networks'}"}],[9171,{"left":"$owner","type":"or_3","op":"||=","right":"$$zone{'owner'}"}],[9223,{"op":"||","right":"'public'","left":"$$aggregate{'private'}","type":"or_2"}],[9225,{"right":"'public'","op":"||=","left":"$private2","type":"or_2"}],[9406,{"type":"or_2","left":"$$network{'private'}","right":"'public'","op":"||"}],[9427,{"left":"$$router{'managed'}","type":"or_3","op":"or","right":"$$router{'semi_managed'}"}],[9462,{"left":"$$zone{'private'}","type":"or_2","op":"||","right":"'public'"}],[9481,{"right":"'public'","op":"||","left":"$$next{'private'}","type":"or_2"}],[9500,{"left":"$$zone1{'zone_cluster'}","type":"or_3","right":"$zone1","op":"||"}],[9500,{"right":"$zone2","op":"||","left":"$$zone2{'zone_cluster'}","type":"or_3"}],[9522,{"right":"$$obj{'routing_only'}","op":"or","left":"$$obj{'managed'}","type":"or_3"}],[9547,{"op":"xor","right":"not $is_zone","left":"$$is_inclusive{$area}","type":"xor_4"}],[9583,{"left":"$$attributes{'owner'}","type":"and_3","op":"and","right":"keys %$attributes == 1"}],[9594,{"type":"and_3","left":"ref $r_val eq 'ARRAY'","right":"ref $val eq 'ARRAY'","op":"and"}],[9594,{"type":"and_3","left":"ref $r_val eq 'ARRAY' and ref $val eq 'ARRAY'","op":"and","right":"aref_eq($r_val, $val)"}],[9594,{"op":"or","right":"ref $r_val eq 'ARRAY' and ref $val eq 'ARRAY' and aref_eq($r_val, $val)","type":"or_3","left":"$r_val eq $val"}],[9620,{"left":"defined $$nat1{$attr}","type":"xor_4","right":"defined $$nat2{$attr}","op":"xor"}],[9712,{"type":"and_3","left":"$$network{'ip'} eq 'bridged'","right":"not $$nat{'identity'}","op":"and"}],[9821,{"left":"$$network{'loopback'}","type":"and_3","right":"@{$$zone{'networks'};} == 1","op":"and"}],[9834,{"right":"$$zone{'private'} eq 'public'","op":"and","type":"and_3","left":"$$zone{'private'}"}],[10052,{"left":"$$small{'subset_of'}","type":"or_2","op":"||","right":"''"}],[10121,{"type":"or_3","left":"$$router{'managed'}","op":"or","right":"$$router{'semi_managed'}"}],[10157,{"op":"or","right":"$$obj{'router'}{'loop'}","left":"$$obj{'loop'}","type":"or_3"}],[10157,{"right":"$$obj{'zone'}{'loop'}","op":"or","left":"$$obj{'loop'} or $$obj{'router'}{'loop'}","type":"or_3"}],[10157,{"op":"or","right":"$$obj{'disabled'}","type":"or_3","left":"$$obj{'loop'} or $$obj{'router'}{'loop'} or $$obj{'zone'}{'loop'}"}],[10197,{"left":"$$zone{'zone_cluster'}","type":"or_2","op":"||","right":"[$zone]"}],[10328,{"op":"and","right":"$$reached{'zone'} ne 'none'","left":"$$reached{'zone'} eq $$reached{'router'}","type":"and_3"}],[10438,{"right":"{'exit', $obj, 'distance', $distance}","op":"||=","left":"$$obj{'loop'}","type":"or_2"}],[10466,{"op":"and","right":"$$obj{'loop'}{'exit'} ne $obj","type":"and_3","left":"$$obj{'loop'}"}],[10512,{"type":"or_3","left":"$$obj{'main'}","op":"or","right":"$$obj{'loop'}"}],[10582,{"left":"$$router{'managed'}","type":"or_3","right":"$$router{'semi_managed'}","op":"or"}],[10587,{"right":"$obj","op":"||","type":"or_3","left":"$$obj{'main_interface'}"}],[10591,{"type":"or_3","left":"$$obj{'path_restrict'}","right":"$$obj{'reachable_at'}","op":"or"}],[10605,{"left":"$$obj{'managed'}","type":"or_3","right":"$$obj{'semi_managed'}","op":"or"}],[10657,{"left":"$reachable_at","type":"and_3","right":"$end_intf","op":"and"}],[10657,{"type":"and_3","left":"$reachable_at and $end_intf","op":"and","right":"$end_intf ne $in_intf"}],[10749,{"op":"and","right":"$$allowed{$loop}","left":"$loop","type":"and_3"}],[10795,{"op":"and","right":"scalar keys %$navi","type":"and_2","left":"$navi = $$from{'navi'}{$to}"}],[10870,{"type":"or_3","left":"$$from_store{'router'} eq $from","right":"$$from_store{'zone'} eq $from","op":"||"}],[10870,{"right":"$$from_store{'router'} eq $from || $$from_store{'zone'} eq $from","op":"and","type":"and_3","left":"is_interface($from_store)"}],[10870,{"type":"or_3","left":"$$from_in{'path_restrict'}","op":"||","right":"$$from_in{'reachable_at'}"}],[10870,{"left":"$from_in","type":"and_3","op":"and","right":"$$from_in{'path_restrict'} || $$from_in{'reachable_at'}"}],[10884,{"left":"$$to_store{'router'} eq $to","type":"or_3","op":"||","right":"$$to_store{'zone'} eq $to"}],[10884,{"type":"and_3","left":"is_interface($to_store)","right":"$$to_store{'router'} eq $to || $$to_store{'zone'} eq $to","op":"and"}],[10884,{"right":"$$to_out{'reachable_at'}","op":"||","left":"$$to_out{'path_restrict'}","type":"or_3"}],[10884,{"op":"and","right":"$$to_out{'path_restrict'} || $$to_out{'reachable_at'}","type":"and_3","left":"$to_out"}],[10904,{"left":"$from_in","type":"and_3","right":"not $$from_in{'loop'}","op":"and"}],[10904,{"type":"and_3","left":"$from_in and not $$from_in{'loop'}","op":"and","right":"my $restrictions = $$from_in{'path_restrict'}"}],[10904,{"left":"$from_in and not $$from_in{'loop'} and my $restrictions = $$from_in{'path_restrict'}","type":"and_3","op":"and","right":"not $start_intf"}],[10913,{"right":"not $$to_out{'loop'}","op":"and","type":"and_3","left":"$to_out"}],[10913,{"op":"and","right":"my $restrictions = $$to_out{'path_restrict'}","left":"$to_out and not $$to_out{'loop'}","type":"and_3"}],[10913,{"right":"not $end_intf","op":"and","left":"$to_out and not $$to_out{'loop'} and my $restrictions = $$to_out{'path_restrict'}","type":"and_3"}],[10942,{"type":"and_3","left":"$start_intf","right":"$$start_intf{'zone'} eq $end_node","op":"and"}],[10950,{"type":"or_3","left":"$start_intf","op":"||","right":"$from_in"}],[10967,{"type":"and_3","left":"$success","right":"$start_intf","op":"and"}],[10999,{"left":"$router eq $from","type":"or_3","right":"$router eq $to","op":"or"}],[11065,{"left":"$$interface{'loopback'}","type":"and_3","right":"$get_next eq 'zone'","op":"and"}],[11148,{"right":"not $$intf{'loop'}","op":"and","type":"and_3","left":"$intf"}],[11148,{"right":"my $restrictions = $$intf{'path_restrict'}","op":"and","type":"and_3","left":"$intf and not $$intf{'loop'}"}],[11210,{"type":"and_3","left":"$from_loop","right":"$to_loop","op":"and"}],[11210,{"type":"and_3","left":"$from_loop and $to_loop","op":"and","right":"$$from_loop{'cluster_exit'} eq $$to_loop{'cluster_exit'}"}],[11285,{"type":"and_3","left":"is_interface($loop_entry)","op":"and","right":"$$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'}"}],[11285,{"right":"is_interface($loop_entry) and $$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'}","op":"or","left":"is_router($loop_entry)","type":"or_3"}],[11285,{"left":"is_router($loop_entry) or is_interface($loop_entry) and $$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'}","type":"xor_4","op":"xor","right":"$call_at_zone"}],[11314,{"right":"$call_at_zone","op":"xor","type":"xor_4","left":"$at_router"}],[11319,{"type":"or_3","left":"is_router($loop_exit)","op":"||","right":"is_interface($loop_exit) && $$loop_exit{'router'} eq $$loop_entry{'loop_leave'}{$loop_exit}[0]{'router'}"}],[11324,{"left":"$exit_at_router","type":"xor_4","op":"xor","right":"$call_at_zone"}],[11344,{"type":"or_3","left":"$obj2path{$src}","right":"get_path($src)","op":"||"}],[11345,{"op":"||","right":"get_path($dst)","left":"$obj2path{$dst}","type":"or_3"}],[11346,{"type":"or_3","left":"$$from_store{'router'}","op":"||","right":"$from_store"}],[11347,{"left":"$$to_store{'router'}","type":"or_3","right":"$to_store","op":"||"}],[11360,{"left":"$from","type":"and_3","op":"and","right":"$to"}],[11376,{"right":"$where eq 'Zone'","op":"&&","type":"and_3","left":"$where"}],[11377,{"left":"is_router($from)","type":"xor_4","op":"xor","right":"$at_zone"}],[11381,{"left":"$$from{'loop'}","type":"and_3","right":"$$from_store{'loop_exit'}","op":"and"}],[11381,{"type":"and_3","left":"$$from{'loop'} and $$from_store{'loop_exit'}","op":"and","right":"my $loop_exit = $$from_store{'loop_exit'}{$to_store}"}],[11396,{"op":"xor","right":"$at_zone","left":"$exit_at_router","type":"xor_4"}],[11404,{"type":"and_3","left":"$in","right":"$$in{'loop_entry'}","op":"and"}],[11404,{"right":"my $loop_entry = $$in{'loop_entry'}{$to_store}","op":"and","type":"and_3","left":"$in and $$in{'loop_entry'}"}],[11418,{"left":"$exit_at_router","type":"xor_4","op":"xor","right":"$at_zone"}],[11493,{"right":"get_path($src2)","op":"||","type":"or_3","left":"$obj2path{$src2}"}],[11494,{"right":"get_path($dst2)","op":"||","left":"$obj2path{$dst2}","type":"or_3"}],[11495,{"type":"or_3","left":"$$from_store{'router'}","op":"||","right":"$from_store"}],[11496,{"left":"$$to_store{'router'}","type":"or_3","right":"$to_store","op":"||"}],[11511,{"type":"and_3","left":"$$from_store{'loop_exit'}","right":"my $exit = $$from_store{'loop_exit'}{$to_store}","op":"and"}],[11609,{"right":"$$ipsec{'esp_encryption'}","op":"||","type":"or_3","left":"$$ipsec{'esp_authentication'}"}],[11613,{"type":"or_3","left":"not $nat_traversal","right":"$nat_traversal ne 'on'","op":"or"}],[11652,{"op":"and","right":"@$real_hubs","left":"$real_hubs","type":"and_3"}],[11655,{"type":"and_3","left":"$real_spokes","op":"and","right":"@$real_spokes"}],[11676,{"type":"and_3","left":"$$router{'model'}{'do_auth'}","right":"not $need_id","op":"and"}],[11740,{"right":"$$model{'can_dyn_crypto'}","op":"or","left":"$$model{'do_auth'}","type":"or_3"}],[11749,{"op":"and","right":"$s_p eq $private","left":"$s_p","type":"and_3"}],[11749,{"left":"$h_p","type":"and_3","op":"and","right":"$h_p eq $private"}],[11749,{"right":"$h_p and $h_p eq $private","op":"or","left":"$s_p and $s_p eq $private","type":"or_3"}],[11782,{"right":"@other","op":"and","type":"and_3","left":"$has_id_hosts"}],[11789,{"left":"$$router{'managed'}","type":"and_3","op":"and","right":"$$crypto{'detailed_crypto_acl'}"}],[11914,{"right":"$$attributes{'check-subject-name'}","op":"&&","type":"and_3","left":"$attributes"}],[11967,{"op":"and","right":"$$router{'model'}{'crypto'} eq 'EZVPN'","left":"$managed","type":"and_3"}],[12038,{"type":"and_3","left":"$has_id_hosts","right":"$has_other_network","op":"and"}],[12045,{"type":"or_3","left":"$has_id_hosts","right":"$has_other_network","op":"or"}],[12087,{"right":"$$router{'model'}{'crypto'} eq 'ASA'","op":"and","left":"$managed","type":"and_3"}],[12095,{"type":"and_3","left":"$real_spoke","right":"not $$real_spoke{'ip'} =~ /^(?:short|unnumbered)$/","op":"and"}],[12257,{"left":"$stateless","type":"or_2","right":"''","op":"||="}],[12258,{"left":"$src_range","type":"or_3","right":"$prt_ip","op":"||="}],[12313,{"left":"$m >= $mask","type":"and_3","right":"match_ip($i, $ip, $mask)","op":"and"}],[12313,{"right":"match_ip($ip, $i, $m)","op":"and","type":"and_3","left":"$m < $mask"}],[12313,{"op":"or","right":"$m < $mask and match_ip($ip, $i, $m)","left":"$m >= $mask and match_ip($i, $ip, $mask)","type":"or_3"}],[12387,{"right":"''","op":"||=","left":"$stateless","type":"or_2"}],[12388,{"right":"$prt_ip","op":"||=","type":"or_3","left":"$src_range"}],[12416,{"type":"or_2","left":"$deny","right":"''","op":"||="}],[12479,{"left":"$$dst{'is_supernet'}","type":"and_3","right":"$out_zone eq $dst_zone","op":"and"}],[12514,{"left":"$$router{'model'}{'stateless'}","type":"and_3","right":"not $$rule{'oneway'}","op":"and"}],[12537,{"left":"$proto eq 'tcp' || $proto eq 'udp'","type":"or_3","right":"$proto eq 'ip'","op":"||"}],[12537,{"left":"$proto eq 'tcp' || $proto eq 'udp' || $proto eq 'ip'","type":"and_3","op":"and","right":"$m1 == $m2"}],[12570,{"op":"and","right":"not $$intf{'vip'}","type":"and_3","left":"$$intf{'loopback'}"}],[12659,{"right":"not $$intf{'vip'}","op":"and","type":"and_3","left":"$$intf{'loopback'}"}],[12785,{"op":"||=","right":"''","type":"or_2","left":"$stateless1"}],[12787,{"op":"||=","right":"$prt_ip","left":"$src_range1","type":"or_3"}],[12808,{"type":"or_3","left":"$obj2zone{$src1}","op":"||","right":"get_zone($src1)"}],[12808,{"right":"get_zone($dst2)","op":"||","left":"$obj2zone{$dst2}","type":"or_3"}],[12816,{"right":"$prt_ip","op":"||","type":"or_3","left":"$$rule2{'src_range'}"}],[12826,{"op":"||","right":"$stateless2","type":"or_3","left":"$stateless1"}],[12981,{"op":"or","right":"$$router{'managed'} =~ /^(?:secondary|local.*)$/","left":"$$router{'model'}{'stateless'}","type":"or_3"}],[13046,{"right":"$$src{'router'}{'routing_only'}","op":"||","type":"or_3","left":"$$src{'router'}{'managed'}"}],[13046,{"op":"and","right":"$$src{'router'}{'managed'} || $$src{'router'}{'routing_only'}","left":"is_interface($src)","type":"and_3"}],[13054,{"op":"or","right":"$proto eq 'udp'","type":"or_3","left":"$proto eq 'tcp'"}],[13054,{"op":"or","right":"$proto eq 'ip'","type":"or_3","left":"$proto eq 'tcp' or $proto eq 'udp'"}],[13061,{"op":"and","right":"$$rule{'deny'}","type":"and_3","left":"$proto eq 'tcp'"}],[13065,{"right":"get_path($src)","op":"||","type":"or_3","left":"$obj2path{$src}"}],[13066,{"type":"or_3","left":"$obj2path{$dst}","op":"||","right":"get_path($dst)"}],[13088,{"right":"$$model{'stateless_self'}","op":"and","left":"not $in_intf","type":"and_3"}],[13088,{"type":"or_3","left":"$$model{'stateless'}","op":"or","right":"not $in_intf and $$model{'stateless_self'}"}],[13104,{"type":"or_2","left":"$has_stateless_router","right":"0","op":"||"}],[13344,{"right":"$$rule{'deleted'}{'managed_intf'}","op":"||","type":"or_3","left":"!$$rule{'managed_intf'}"}],[13344,{"op":"and","right":"!$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}","left":"$$rule{'deleted'}","type":"and_3"}],[13349,{"left":"$$src{'is_aggregate'}","type":"or_3","right":"$$dst{'is_aggregate'}","op":"or"}],[13353,{"right":"$$dst_zone{'local_mark'}","op":"and","type":"and_3","left":"$$src_zone{'local_mark'}"}],[13353,{"left":"$$src_zone{'local_mark'} and $$dst_zone{'local_mark'}","type":"and_3","op":"and","right":"$$src_zone{'local_mark'} == $$dst_zone{'local_mark'}"}],[13353,{"type":"and_3","left":"$$src_zone{'local_mark'} and $$dst_zone{'local_mark'} and $$src_zone{'local_mark'} == $$dst_zone{'local_mark'}","right":"$$src_zone{'local_secondary_mark'} != $$dst_zone{'local_secondary_mark'}","op":"and"}],[13353,{"right":"$$src_zone{'local_mark'} and $$dst_zone{'local_mark'} and $$src_zone{'local_mark'} == $$dst_zone{'local_mark'} and $$src_zone{'local_secondary_mark'} != $$dst_zone{'local_secondary_mark'}","op":"or","type":"or_3","left":"$$src_zone{'secondary_mark'} != $$dst_zone{'secondary_mark'}"}],[13390,{"type":"or_3","left":"$$what{'loopback'}","right":"$$what{'router'}{'managed'}","op":"||"}],[13390,{"type":"and_3","left":"is_interface($what)","right":"$$what{'loopback'} || $$what{'router'}{'managed'}","op":"and"}],[13390,{"left":"is_network($what)","type":"or_3","right":"is_interface($what) and $$what{'loopback'} || $$what{'router'}{'managed'}","op":"or"}],[13460,{"left":"!$$rule{'managed_intf'}","type":"or_3","right":"$$rule{'deleted'}{'managed_intf'}","op":"||"}],[13460,{"type":"and_3","left":"$$rule{'deleted'}","op":"and","right":"!$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}"}],[13512,{"right":"$type eq 'Interface'","op":"or","type":"or_3","left":"$type eq 'Subnet'"}],[13531,{"right":"zone_eq($$network{'zone'}, $$intf{'zone'})","op":"or","type":"or_3","left":"not $intf"}],[13569,{"op":"||","right":"get_path($obj)","type":"or_3","left":"$obj2path{$obj}"}],[13570,{"op":"||","right":"get_path($other)","left":"$obj2path{$other}","type":"or_3"}],[13571,{"left":"$cache{$from_store}{$to_store}","type":"or_3","op":"||","right":"$cache{$to_store}{$from_store}"}],[13585,{"right":"$static_seen","op":"or","left":"$is_hidden","type":"or_3"}],[13637,{"op":"||","right":"''","type":"or_2","left":"$$chg_rule{'log'}"}],[13640,{"left":"$$cmp_rule{'log'}","type":"or_2","right":"''","op":"||"}],[13641,{"left":"$cmp_rule ne $chg_rule","type":"and_3","right":"$cmp_log eq $chg_log","op":"and"}],[13767,{"left":"$$nat_net{'dynamic'}","type":"and_3","op":"and","right":"$$in_hw{'level'} < $$out_hw{'level'}"}],[13787,{"type":"or_3","left":"$$router{'managed'}","op":"or","right":"$$router{'semi_managed'}"}],[13802,{"op":"or","right":"$type eq 'Interface'","type":"or_3","left":"$type eq 'Subnet'"}],[13832,{"left":"!$$rule{'managed_intf'}","type":"or_3","op":"||","right":"$$rule{'deleted'}{'managed_intf'}"}],[13832,{"type":"and_3","left":"$$rule{'deleted'}","right":"!$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}","op":"and"}],[13836,{"right":"get_zone3($src)","op":"||=","left":"$obj2zone{$src}","type":"or_3"}],[13837,{"right":"get_zone3($dst)","op":"||=","left":"$obj2zone{$dst}","type":"or_3"}],[13847,{"left":"$obj2networks{$src}","type":"or_3","op":"||=","right":"get_networks($src)"}],[13849,{"op":"||=","right":"get_networks($dst)","left":"$obj2networks{$dst}","type":"or_3"}],[13883,{"left":"$type eq 'Subnet'","type":"or_3","right":"$type eq 'Interface'","op":"or"}],[14039,{"left":"$$in_intf{'route_in_zone'}{$out_net}","type":"or_2","op":"||","right":"[$out_intf]"}],[14090,{"left":"$in_intf","type":"and_3","op":"and","right":"$out_intf"}],[14122,{"type":"or_3","left":"!$$rule{'managed_intf'}","op":"||","right":"$$rule{'deleted'}{'managed_intf'}"}],[14122,{"left":"$$rule{'deleted'}","type":"and_3","op":"and","right":"!$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}"}],[14122,{"left":"!(is_interface($src) && ($$src{'router'}{'managed'} || $$src{'router'}{'routing_only'}))","type":"or_3","op":"||","right":"is_interface($$rule{'deleted'}{'src'}) && ($$rule{'deleted'}{'src'}{'router'}{'managed'} || $$rule{'deleted'}{'src'}{'router'}{'routing_only'})"}],[14122,{"right":"!(is_interface($src) && ($$src{'router'}{'managed'} || $$src{'router'}{'routing_only'})) || is_interface($$rule{'deleted'}{'src'}) && ($$rule{'deleted'}{'src'}{'router'}{'managed'} || $$rule{'deleted'}{'src'}{'router'}{'routing_only'})","op":"and","type":"and_3","left":"$$rule{'deleted'} and !$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}"}],[14147,{"type":"or_3","left":"$$from{'main_interface'}","op":"||","right":"$from"}],[14176,{"right":"$$src{'router'}{'routing_only'}","op":"||","left":"$$src{'router'}{'managed'}","type":"or_3"}],[14176,{"type":"and_3","left":"is_interface($src)","right":"$$src{'router'}{'managed'} || $$src{'router'}{'routing_only'}","op":"and"}],[14179,{"left":"$$src{'main_interface'}","type":"or_3","right":"$src","op":"||"}],[14185,{"op":"||","right":"$$dst{'router'}{'routing_only'}","type":"or_3","left":"$$dst{'router'}{'managed'}"}],[14185,{"right":"$$dst{'router'}{'managed'} || $$dst{'router'}{'routing_only'}","op":"and","left":"is_interface($dst)","type":"and_3"}],[14188,{"left":"$$dst{'main_interface'}","type":"or_3","op":"||","right":"$dst"}],[14379,{"left":"@hops > 1","type":"and_3","right":"equal(map({$_ unless $$_{'redundancy_interfaces'};} @hops))","op":"and"}],[14379,{"left":"@hops > 1 and equal(map({$_ unless $$_{'redundancy_interfaces'};} @hops))","type":"or_3","op":"or","right":"@hops == 1"}],[14385,{"type":"or_2","left":"$$real_intf{'routes'}{$hop}","op":"||=","right":"{}"}],[14436,{"right":"$$interface{'routing'}","op":"and","left":"$$interface{'loop'}","type":"and_3"}],[14448,{"left":"$$interface{'routing'}","type":"or_3","op":"or","right":"$$interface2{'routing'}"}],[14473,{"type":"and_3","left":"$group","right":"$group2","op":"and"}],[14473,{"type":"and_3","left":"$group and $group2","op":"and","right":"$group eq $group2"}],[14503,{"right":"my $phys_hop = $$hop1{'orig_main'}","op":"and","type":"and_3","left":"@$hops == 1"}],[14550,{"op":"||","right":"''","type":"or_2","left":"$$model{'crypto'}"}],[14566,{"type":"and_3","left":"$$interface{'hub'}","right":"$crypto_type eq 'ASA'","op":"and"}],[14580,{"op":"and","right":"$mask == 0","type":"and_3","left":"$ip == 0"}],[14602,{"right":"$crypto_type eq 'ASA'","op":"and","left":"$$interface{'hub'}","type":"and_3"}],[14655,{"right":"$max_hop","op":"and","type":"and_3","left":"$max_intf"}],[14695,{"op":"and","right":"not $nxos_prefix","left":"$vrf","type":"and_3"}],[14752,{"type":"or_3","left":"$$a{'ip'} <=> $$b{'ip'}","op":"or","right":"$$a{'mask'} <=> $$b{'mask'}"}],[14768,{"right":"$in_dynamic","op":"and","type":"and_3","left":"$out_dynamic"}],[14768,{"type":"and_3","left":"$out_dynamic and $in_dynamic","op":"and","right":"$out_dynamic eq $in_dynamic"}],[14830,{"op":"and","right":"$nat_index","left":"$global_index","type":"and_3"}],[14832,{"op":"||","right":"$dyn_index++","type":"or_3","left":"$global_index || $nat_index"}],[14839,{"op":"and","right":"$out_mask == 4294967295","left":"$out_ip == $out_intf_ip","type":"and_3"}],[14877,{"left":"$$in_hw{'level'} > $$out_hw{'level'}","type":"or_3","right":"$$in_hw{'need_identity_nat'}","op":"or"}],[14877,{"right":"$in_ip != $out_ip","op":"or","left":"$$in_hw{'level'} > $$out_hw{'level'} or $$in_hw{'need_identity_nat'}","type":"or_3"}],[14949,{"left":"$out_ip == $out_intf_ip","type":"and_3","op":"and","right":"$out_mask == 4294967295"}],[15000,{"op":"and","right":"$out","type":"and_3","left":"$in"}],[15000,{"left":"$in and $out","type":"and_3","right":"$in eq $out","op":"and"}],[15017,{"type":"and_3","left":"$$net_hash{$net}","op":"and","right":"$net2 = $$network{'is_in'}{$in_nat}"}],[15017,{"op":"and","right":"$$net_hash{$net2}","type":"and_3","left":"$$net_hash{$net} and $net2 = $$network{'is_in'}{$in_nat}"}],[15075,{"right":"$$model{'stateless_self'}","op":"and","left":"not $out_intf","type":"and_3"}],[15075,{"type":"or_3","left":"$$model{'stateless'}","right":"not $out_intf and $$model{'stateless_self'}","op":"or"}],[15086,{"right":"not $$model{'stateless_icmp'}","op":"and","type":"and_3","left":"$$rule{'stateless_icmp'}"}],[15099,{"left":"$intf_hash","type":"and_3","right":"$$intf_hash{$dst}","op":"&&"}],[15099,{"type":"and_3","left":"$out_intf","op":"and","right":"not $intf_hash && $$intf_hash{$dst}"}],[15141,{"right":"$$intf_hash{$dst}","op":"and","type":"and_3","left":"$intf_hash"}],[15141,{"right":"$intf_hash and $$intf_hash{$dst}","op":"or","type":"or_3","left":"not $out_intf"}],[15146,{"left":"$dst eq $network_00","type":"or_3","op":"or","right":"$dst eq $$in_intf{'network'}"}],[15184,{"left":"$key eq 'rules'","type":"and_3","right":"$$model{'has_io_acl'}","op":"and"}],[15367,{"op":"or","right":"$type eq 'Subnet'","type":"or_3","left":"$type eq 'Network'"}],[15483,{"left":"$$a{'prt'}{'prio'}","type":"or_2","right":"0","op":"||"}],[15483,{"type":"or_3","left":"cmp_address($$a{'src'}) cmp cmp_address($$b{'src'})","right":"cmp_address($$a{'dst'}) cmp cmp_address($$b{'dst'})","op":"||"}],[15483,{"left":"$$a{'prt'}{'prio'} || 0","type":"and_3","op":"and","right":"cmp_address($$a{'src'}) cmp cmp_address($$b{'src'}) || cmp_address($$a{'dst'}) cmp cmp_address($$b{'dst'})"}],[15483,{"left":"$$b{'prt'}{'prio'}","type":"or_2","right":"0","op":"||"}],[15483,{"type":"or_2","left":"$$a{'prt'}{'prio'}","right":"0","op":"||"}],[15514,{"op":"||","right":"$$rule{'deleted'}{'managed_intf'}","type":"or_3","left":"!$$rule{'managed_intf'}"}],[15514,{"right":"!$$rule{'managed_intf'} || $$rule{'deleted'}{'managed_intf'}","op":"and","type":"and_3","left":"$$rule{'deleted'}"}],[15675,{"right":"$proto eq 'udp'","op":"or","left":"$proto eq 'tcp'","type":"or_3"}],[15682,{"right":"$v2 == 65535","op":"and","type":"and_3","left":"$v1 == 1"}],[15707,{"right":"&$port_code($src_range)","op":"&&","left":"$src_range","type":"and_3"}],[15742,{"right":"$proto eq 'udp'","op":"or","left":"$proto eq 'tcp'","type":"or_3"}],[15749,{"right":"$v2 == 65535","op":"and","left":"$v1 == 1","type":"and_3"}],[15766,{"op":"&&","right":"&$port_code($src_range)","left":"$src_range","type":"and_3"}],[15817,{"left":"$active_log","type":"and_3","op":"and","right":"my $log = $$rule{'log'}"}],[15838,{"type":"and_3","left":"$$router{'log_deny'}","op":"and","right":"$deny"}],[15867,{"op":"||=","right":"{}","type":"or_2","left":"$$router{'size2first2group_hash'}"}],[15868,{"type":"or_2","left":"$$router{'vrf_shared_data'}{'obj_group_counter'}","right":"0","op":"||="}],[15884,{"op":"||","right":"''","left":"$$rule{'deny'}","type":"or_2"}],[15887,{"left":"$$rule{'src_range'}","type":"or_2","right":"''","op":"||"}],[16092,{"right":"''","op":"||=","left":"$depth","type":"or_2"}],[16118,{"type":"and_3","left":"$tree_mask < $node_mask","op":"and","right":"match_ip($node_ip, $tree_ip, $tree_mask)"}],[16129,{"type":"and_3","left":"$$tree{'subtree'}","op":"&&","right":"$$node{'subtree'}"}],[16129,{"op":"or","right":"$$tree{'subtree'} ne $$node{'subtree'}","left":"not $$tree{'subtree'} && $$node{'subtree'}","type":"or_3"}],[16118,{"op":"and","right":"$tree_ip == $node_ip","left":"$tree_mask == $node_mask","type":"and_3"}],[16152,{"right":"''","op":"||","type":"or_2","left":"$$tree{'subtree'}"}],[16153,{"right":"''","op":"||","left":"$$node{'subtree'}","type":"or_2"}],[16186,{"type":"and_3","left":"$$lo{'subtree'}","op":"and","right":"$$hi{'subtree'}"}],[16340,{"left":"$$lo{'range'}[1] + 1 == $$hi{'range'}[0]","type":"and_3","right":"$$lo{'subtree'}","op":"and"}],[16340,{"type":"and_3","left":"$$lo{'range'}[1] + 1 == $$hi{'range'}[0] and $$lo{'subtree'}","right":"$$hi{'subtree'}","op":"and"}],[16340,{"op":"and","right":"$$lo{'subtree'} eq $$hi{'subtree'}","type":"and_3","left":"$$lo{'range'}[1] + 1 == $$hi{'range'}[0] and $$lo{'subtree'} and $$hi{'subtree'}"}],[16508,{"op":"||=","right":"1","left":"$$router{'vrf_shared_data'}{'chain_counter'}","type":"or_2"}],[16556,{"op":"and","right":"my $network = $$obj{'network'}","left":"$$obj{'loopback'}","type":"and_3"}],[16557,{"right":"$rules eq $intf_rules","op":"and","type":"and_3","left":"$intf_rules"}],[16557,{"right":"$what eq 'dst'","op":"and","type":"and_3","left":"$intf_rules and $rules eq $intf_rules"}],[16574,{"right":"$rules eq $intf_rules","op":"and","type":"and_3","left":"$intf_rules"}],[16574,{"type":"and_3","left":"$intf_rules and $rules eq $intf_rules","op":"and","right":"$what eq 'dst'"}],[16644,{"right":"$$subtree2{$key} ne $$subtree{$key}","op":"or","type":"or_3","left":"not $$subtree2{$key}"}],[16708,{"op":"and","right":"not @$seq","left":"$seq","type":"and_3"}],[16726,{"left":"@$rules > 1","type":"and_3","op":"and","right":"not $$bintree{'noop'}"}],[16762,{"left":"@rules > 1","type":"and_3","op":"and","right":"not $$tree{'noop'}"}],[16781,{"right":"@$rules","op":"and","left":"$rules","type":"and_3"}],[16847,{"op":"||=","right":"$network_00","left":"$$rule{'src'}","type":"or_3"}],[16848,{"right":"$network_00","op":"||=","type":"or_3","left":"$$rule{'dst'}"}],[16851,{"op":"||","right":"$src_prt","left":"$prt","type":"or_3"}],[16933,{"type":"or_3","left":"$src_prt","right":"$prt","op":"or"}],[16934,{"right":"$$prt{'proto'} eq 'ip'","op":"and","left":"$prt","type":"and_3"}],[16977,{"op":"||=","right":"''","type":"or_2","left":"$deny"}],[16978,{"right":"''","op":"||=","type":"or_2","left":"$src_range"}],[17146,{"left":"$mask > $m","type":"and_3","op":"and","right":"match_ip($ip, $i, $m)"}],[17146,{"op":"or","right":"match_ip($i, $ip, $mask)","type":"or_3","left":"$mask > $m and match_ip($ip, $i, $m)"}],[17179,{"left":"$attr eq 'rules'","type":"and_3","op":"and","right":"$$hardware{'no_in_acl'}"}],[17180,{"right":"not $$hardware{'need_out_acl'}","op":"and","left":"$attr eq 'out_rules'","type":"and_3"}],[17204,{"right":"equal(@redundant)","op":"and","left":"@redundant == @interfaces","type":"and_3"}],[17236,{"op":"and","right":"not $$rule{'managed_intf'}","left":"$$rule{'deleted'}","type":"and_3"}],[17238,{"type":"and_3","left":"is_network($src)","right":"$$src{'mask'} == 0","op":"and"}],[17239,{"left":"is_network($dst)","type":"and_3","op":"and","right":"$$dst{'mask'} == 0"}],[17266,{"op":"or","right":"$$network{'mask'} == 0","type":"or_3","left":"not $$network{'mask'}"}],[17268,{"op":"or","right":"$$up{'mask'} == 0","left":"not $up","type":"or_3"}],[17333,{"op":"and","right":"my $network = $$obj{'network'}","type":"and_3","left":"$$obj{'loopback'}"}],[17336,{"right":"$what eq 'dst'","op":"and","type":"and_3","left":"$rules eq 'intf_rules'"}],[17354,{"left":"$rules eq 'intf_rules'","type":"and_3","right":"$what eq 'dst'","op":"&&"}],[17354,{"left":"$$router{'crosslink_intf_hash'}","type":"and_3","op":"and","right":"$$router{'crosslink_intf_hash'}{$$aref[0]}"}],[17354,{"left":"not $rules eq 'intf_rules' && $what eq 'dst'","type":"or_3","right":"$$router{'crosslink_intf_hash'} and $$router{'crosslink_intf_hash'}{$$aref[0]}","op":"or"}],[17375,{"left":"$deny","type":"or_2","op":"||=","right":"''"}],[17376,{"type":"or_3","left":"$src_range","op":"||=","right":"$prt_ip"}],[17391,{"right":"$$dst{'is_supernet'}","op":"or","type":"or_3","left":"$$src{'is_supernet'}"}],[17391,{"left":"$$src{'is_supernet'} or $$dst{'is_supernet'}","type":"or_3","right":"$$rule{'stateless'}","op":"or"}],[17413,{"right":"''","op":"||=","type":"or_2","left":"$deny"}],[17414,{"type":"or_3","left":"$src_range","right":"$prt_ip","op":"||="}],[17415,{"left":"$log","type":"or_2","right":"''","op":"||="}],[17431,{"op":"||","right":"''","type":"or_2","left":"$$other_rule{'log'}"}],[17432,{"type":"and_3","left":"$rule ne $other_rule","right":"$log eq $o_log","op":"and"}],[17466,{"type":"and_3","left":"$secondary_filter","op":"and","right":"$$rule{'some_non_secondary'}"}],[17466,{"type":"and_3","left":"$standard_filter","op":"and","right":"$$rule{'some_primary'}"}],[17466,{"op":"or","right":"$standard_filter and $$rule{'some_primary'}","type":"or_3","left":"$secondary_filter and $$rule{'some_non_secondary'}"}],[17499,{"left":"$$ref eq $dst","type":"and_3","op":"and","right":"is_interface($dst)"}],[17499,{"right":"$$router{'crosslink_intf_hash'} && $$router{'crosslink_intf_hash'}{$dst}","op":"||","type":"or_3","left":"$$dst{'router'} eq $router"}],[17499,{"op":"and","right":"$$dst{'router'} eq $router || $$router{'crosslink_intf_hash'} && $$router{'crosslink_intf_hash'}{$dst}","left":"$$ref eq $dst and is_interface($dst)","type":"and_3"}],[17512,{"right":"is_interface($$ref)","op":"or","type":"or_3","left":"is_subnet($$ref)"}],[17564,{"right":"$$dst{'is_supernet'}","op":"or","left":"$$src{'is_supernet'}","type":"or_3"}],[17653,{"right":"[]","op":"||=","type":"or_2","left":"$$hardware{'rules'}"}],[17657,{"op":"&&","right":"$prt eq $prt_ip","type":"and_3","left":"!$deny && is_network($src) && $$src{'mask'} == 0 && is_network($dst) && $$dst{'mask'} == 0"}],[17676,{"left":"$$router{'need_protect'}","type":"or_3","op":"or","right":"$$router{'crosslink_intf_hash'}"}],[17696,{"type":"or_2","left":"$$router{'crosslink_intf_hash'}","op":"||=","right":"{map({$_, $_;} @{$$router{'interfaces'};})}"}],[17758,{"right":"$rule eq $permit_any_rule","op":"and","left":"$local_filter","type":"and_3"}],[17786,{"left":"$protect_all || $need_protect{$interface}","type":"or_3","op":"||","right":"$$hardware{'no_in_acl'}"}],[17786,{"right":"not $protect_all || $need_protect{$interface} || $$hardware{'no_in_acl'}","op":"or","type":"or_3","left":"$no_protect{$interface}"}],[17814,{"left":"$$interface{'redundancy_interfaces'}","type":"and_3","right":"$seen{$$interface{'redundancy_interfaces'}}++","op":"and"}],[18073,{"type":"and_3","left":"$spec","op":"and","right":"$$spec{'tg_general'}"}],[18080,{"op":"||","right":"$trust_point","type":"or_3","left":"delete $$attributes{'trust-point'}"}],[18174,{"right":"keys %single_cert_map","op":"or","type":"or_3","left":"keys %cert_group_map"}],[18326,{"type":"and_3","left":"$$hardware{'name'} eq 'device'","op":"and","right":"$$model{'class'} eq 'ASA'"}],[18330,{"type":"or_2","left":"$$hardware{'rules'}","op":"||=","right":"[]"}],[18342,{"left":"$suffix eq 'out'","type":"and_3","right":"not $$hardware{'need_out_acl'}","op":"and"}],[18346,{"right":"[]","op":"||","left":"$$hardware{$_}","type":"or_2"}],[18386,{"op":"||=","right":"[]","type":"or_2","left":"$$hardware{'out_rules'}"}],[18389,{"type":"and_3","left":"@$out_rules","right":"$$out_rules[-1] eq $permit_any_rule","op":"and"}],[18396,{"op":"or","right":"$filter eq 'NX-OS'","left":"$filter eq 'IOS'","type":"or_3"}],[18517,{"type":"or_2","left":"$$tunnel_intf{'intf_rules'}","right":"[]","op":"||="}],[18518,{"op":"||=","right":"[]","type":"or_2","left":"$$tunnel_intf{'rules'}"}],[18622,{"left":"$lifetime == 3600","type":"and_3","op":"and","right":"$crypto_type eq 'IOS'"}],[18808,{"op":"||","right":"''","type":"or_2","left":"$$model{'crypto'}"}],[18901,{"type":"and_3","left":"$crypto_type eq 'ASA'","op":"and","right":"$$isakmp{'ike_version'} == 2"}],[18942,{"left":"$crypto_type eq 'ASA'","type":"and_3","right":"$$model{'v8_4'}","op":"&&"}],[19002,{"type":"and_3","left":"$name eq 'VIP'","right":"$$model{'has_vip'}","op":"and"}],[19044,{"right":"$stateful","op":"and","left":"$class eq 'IOS'","type":"and_3"}],[19044,{"right":"not $$hardware{'loopback'}","op":"and","left":"$class eq 'IOS' and $stateful","type":"and_3"}],[19163,{"type":"and_3","left":"defined $in_path","right":"-d $in_path","op":"and"}],[19415,{"op":"||","right":"''","left":"$out","type":"or_2"}]],"digest":"e5b786a82a9c17097e4a6283928e9b88","subroutine":[[29,"BEGIN"],[30,"BEGIN"],[31,"BEGIN"],[33,"BEGIN"],[34,"BEGIN"],[41,"BEGIN"],[4005,"BEGIN"],[13098,"BEGIN"],[19385,"BEGIN"],[19386,"BEGIN"],[201,"get_config_keys"],[205,"valid_config_key"],[210,"get_config_pattern"],[224,"check_config_pair"],[232,"set_config"],[245,"store_description"],[256,"fast_mode"],[407,"equal"],[415,"unique"],[420,"find_duplicates"],[426,"intersect"],[432,"max"],[442,"aref_delete"],[456,"aref_eq"],[465,"keys_eq"],[476,"info"],[482,"progress"],[492,"warn_msg"],[497,"debug"],[519,"context"],[532,"at_line"],[539,"check_abort"],[549,"abort_on_error"],[554,"set_abort_immediately"],[559,"error_atline"],[566,"err_msg"],[573,"fatal_err"],[579,"syntax_err"],[584,"internal_err"],[608,"skip_space_and_comment"],[622,"check"],[630,"skip"],[636,"check_int"],[646,"read_int"],[653,"check_ip"],[666,"read_ip"],[674,"read_ip_prefix"],[686,"read_ip_prefix_pair"],[691,"gen_ip"],[698,"print_ip"],[716,"mask2prefix"],[721,"prefix2mask"],[727,"complement_32bit"],[733,"match_ip"],[738,"read_identifier"],[749,"read_owner_pattern"],[760,"read_name"],[771,"read_string"],[785,"read_union"],[812,"check_typed_name"],[839,"read_typed_name"],[868,"read_extended_name"],[936,"read_user_id"],[947,"check_hostname"],[963,"read_complement"],[972,"read_intersection"],[994,"read_time_val"],[1001,"add_description"],[1017,"check_permit_deny"],[1027,"check_nat_name"],[1036,"split_typed_name"],[1043,"check_flag"],[1054,"check_assign"],[1072,"read_list"],[1088,"read_list_or_null"],[1094,"read_assign_list"],[1101,"check_assign_list"],[1110,"check_assign_pair"],[1136,"new"],[1142,"add_attribute"],[1151,"check_radius_attributes"],[1166,"check_routing"],[1173,"check_managed"],[1199,"check_model"],[1230,"host_as_interface"],[1271,"read_host"],[1373,"read_nat"],[1430,"read_network"],[1633,"read_interface"],[1928,"set_pix_interface_level"],[1970,"read_router"],[2513,"move_locked_interfaces"],[2557,"read_aggregate"],[2606,"check_router_attributes"],[2638,"read_area"],[2700,"read_group"],[2713,"read_protocolgroup"],[2720,"read_port_range"],[2750,"read_port_ranges"],[2765,"read_icmp_type_code"],[2793,"read_proto_nr"],[2821,"gen_protocol_name"],[2829,"__ANON__"],[2867,"cache_anonymous_protocol"],[2881,"read_simple_protocol"],[2918,"check_protocol_flags"],[2937,"read_typed_name_or_simple_protocol"],[2941,"read_protocol"],[2952,"assign_union_allow_user"],[2962,"read_service"],[3047,"read_pathrestriction"],[3058,"read_attributed_object"],[3136,"read_isakmp"],[3171,"read_ipsec"],[3178,"read_crypto"],[3205,"read_owner"],[3274,"read_netspoc"],[3293,"read_file"],[3323,"read_config"],[3326,"__ANON__"],[3349,"read_json_watchers"],[3389,"read_json"],[3407,"read_file_or_dir"],[3419,"__ANON__"],[3437,"__ANON__"],[3485,"show_read_statistics"],[3500,"is_network"],[3501,"is_router"],[3502,"is_interface"],[3503,"is_host"],[3504,"is_subnet"],[3505,"is_area"],[3506,"is_zone"],[3507,"is_group"],[3508,"is_protocolgroup"],[3509,"is_objectgroup"],[3510,"is_chain"],[3511,"is_autointerface"],[3516,"print_rule"],[3545,"prepare_prt_ordering"],[3607,"order_icmp"],[3633,"order_proto"],[3650,"order_ranges"],[3667,"__ANON__"],[3799,"expand_splitted_protocol"],[3854,"order_protocols"],[3899,"link_to_owner"],[3913,"link_to_real_owner"],[3930,"expand_watchers"],[3974,"link_owners"],[4065,"link_policy_distribution_point"],[4090,"link_general_permit"],[4135,"link_areas"],[4195,"link_interfaces"],[4248,"check_interface_ip"],[4306,"link_routers"],[4315,"link_subnet"],[4318,"__ANON__"],[4366,"link_subnets"],[4381,"add_pathrestriction"],[4394,"link_pathrestrictions"],[4491,"link_virtual_interfaces"],[4606,"check_ip_addresses"],[4704,"link_topology"],[4733,"disable_behind"],[4786,"check_bridged_networks"],[4849,"mark_disabled"],[4990,"split_ip_range"],[5006,"convert_hosts"],[5211,"combine_subnets"],[5264,"get_intf"],[5279,"get_auto_intf"],[5319,"check_auto_intf"],[5384,"expand_group1"],[5624,"__ANON__"],[5640,"__ANON__"],[5880,"remove_duplicates"],[5899,"expand_group"],[5918,"expand_group_in_rule"],[6012,"__ANON__"],[6019,"check_unused_groups"],[6043,"expand_protocols"],[6104,"split_protocols"],[6161,"add_rules"],[6203,"get_zone"],[6249,"expand_special"],[6328,"add_managed_hosts"],[6350,"collect_unenforceable"],[6414,"show_unenforceable"],[6455,"warn_useless_unenforceable"],[6466,"show_deleted_rules1"],[6521,"collect_redundant_rules"],[6565,"show_deleted_rules2"],[6606,"warn_unused_overlaps"],[6626,"collect_log"],[6636,"check_log"],[6649,"normalize_log"],[6660,"expand_rules"],[6799,"print_rulecount"],[6808,"split_expanded_rule_types"],[6831,"expand_services"],[6904,"set_policy_distribution_ip"],[6918,"__ANON__"],[7040,"propagate_owners"],[7112,"__ANON__"],[7137,"__ANON__"],[7152,"__ANON__"],[7182,"__ANON__"],[7351,"expand_auto_intf"],[7371,"show_unknown_owners"],[7395,"set_service_owner"],[7485,"__ANON__"],[7531,"set_natdomain"],[7611,"distribute_nat1"],[7744,"distribute_nat"],[7755,"distribute_nat_info"],[7804,"__ANON__"],[8041,"invert_nat_set"],[8044,"__ANON__"],[8111,"adjust_crypto_nat"],[8138,"get_nat_network"],[8156,"check_subnets"],[8160,"__ANON__"],[8202,"nat_to_loopback_ok"],[8229,"numerically"],[8230,"by_name"],[8237,"find_subnets_in_zone"],[8391,"__ANON__"],[8420,"__ANON__"],[8500,"find_subnets_in_nat_domain"],[8719,"check_no_in_acl"],[8784,"cluster_crosslink_routers"],[8791,"__ANON__"],[8840,"check_crosslink"],[8920,"check_managed_local"],[8931,"__ANON__"],[9009,"link_reroute_permit"],[9041,"add_managed_hosts_to_aggregate"],[9084,"link_aggregate_to_zone"],[9117,"link_implicit_aggregate_to_zone"],[9126,"__ANON__"],[9189,"link_aggregates"],[9283,"duplicate_aggregate_to_cluster"],[9319,"get_any"],[9374,"get_cluster_aggregates"],[9387,"set_zone1"],[9456,"set_zone_cluster"],[9499,"zone_eq"],[9513,"set_area1"],[9579,"inherit_router_attributes"],[9616,"nat_equal"],[9634,"check_useless_nat"],[9649,"inherit_area_nat"],[9681,"inherit_attributes_from_area"],[9694,"inherit_nat_to_subnets_in_zone"],[9751,"inherit_nat_in_zone"],[9779,"cleanup_after_inheritance"],[9797,"inherit_attributes"],[9808,"set_zones"],[9850,"cluster_zones"],[9871,"prepare_area_borders"],[9899,"set_area"],[9919,"set_areas"],[9975,"find_subset_relations"],[10035,"check_routers_in_nested_areas"],[10079,"clean_areas"],[10092,"set_zone"],[10114,"check_virtual_interfaces"],[10149,"check_pathrestrictions"],[10239,"traverse_loop_part"],[10267,"optimize_pathrestrictions"],[10388,"setpath_obj"],[10481,"set_loop_cluster"],[10504,"setpath"],[10571,"get_path"],[10636,"cluster_path_mark1"],[10788,"cluster_navigation"],[10852,"cluster_path_mark"],[11180,"path_mark"],[11276,"loop_path_walk"],[11339,"path_walk"],[11444,"set_auto_intf_from_border"],[11448,"__ANON__"],[11485,"path_auto_interfaces"],[11568,"link_ipsec"],[11586,"link_crypto"],[11607,"gen_tunnel_rules"],[11640,"link_tunnels"],[11834,"crypto_behind"],[11878,"verify_asa_vpn_attributes"],[11908,"verify_subject_name"],[11912,"__ANON__"],[11931,"verify_asa_trustpoint"],[11942,"expand_crypto"],[12180,"setup_ref2obj"],[12234,"collect_supernet_dst_rules"],[12265,"find_supernet"],[12291,"find_zone_network"],[12343,"find_matching_supernet"],[12383,"check_supernet_in_zone"],[12466,"check_supernet_src_rule"],[12610,"check_supernet_dst_rule"],[12675,"check_supernet_dst_collections"],[12712,"find_smaller_prt"],[12766,"check_for_transient_supernet_rule"],[12975,"mark_stateful"],[12997,"check_supernet_rules"],[13037,"gen_reverse_rules1"],[13075,"__ANON__"],[13151,"gen_reverse_rules"],[13189,"get_zone2"],[13208,"mark_secondary"],[13238,"mark_primary"],[13266,"mark_strict_secondary"],[13294,"mark_local_secondary"],[13317,"mark_secondary_rules"],[13420,"mark_dynamic_nat_rules"],[13436,"__ANON__"],[13523,"__ANON__"],[13609,"optimize_rules"],[13678,"optimize_and_warn_deleted"],[13693,"collect_nat_path"],[13712,"distribute_nat_to_device"],[13777,"get_zone3"],[13800,"get_networks"],[13819,"prepare_nat_commands"],[13881,"get_route_networks"],[13922,"set_routes_in_zone"],[13943,"__ANON__"],[13978,"__ANON__"],[14036,"add_path_routes"],[14056,"add_end_routes"],[14081,"get_route_path"],[14105,"find_active_routes"],[14258,"fix_bridged_hops"],[14282,"check_and_convert_routes"],[14354,"__ANON__"],[14536,"print_header"],[14544,"print_routes"],[14732,"print_nat1"],[14806,"print_pix_static"],[14819,"__ANON__"],[14867,"__ANON__"],[14876,"__ANON__"],[14901,"print_asa_nat"],[14907,"__ANON__"],[14919,"__ANON__"],[14941,"__ANON__"],[14958,"__ANON__"],[14970,"__ANON__"],[14982,"optimize_nat_networks"],[15035,"print_nat"],[15057,"distribute_rule"],[15241,"add_router_acls"],[15365,"cmp_address"],[15379,"distribute_rules"],[15387,"create_general_permit_rules"],[15410,"distribute_general_permit"],[15482,"sort_rules_by_prio"],[15496,"rules_distribution"],[15536,"address"],[15617,"cisco_acl_addr"],[15644,"ios_route_code"],[15654,"prefix_code"],[15662,"full_prefix_code"],[15672,"cisco_prt_code"],[15680,"__ANON__"],[15739,"iptables_prt_code"],[15747,"__ANON__"],[15791,"cisco_acl_line"],[15858,"find_object_groups"],[15933,"__ANON__"],[15942,"__ANON__"],[15980,"__ANON__"],[16091,"debug_bintree"],[16110,"add_bintree"],[16205,"gen_addr_bintree"],[16249,"gen_prt_bintree"],[16303,"__ANON__"],[16331,"__ANON__"],[16406,"__ANON__"],[16504,"find_chains"],[16594,"__ANON__"],[16608,"__ANON__"],[16633,"__ANON__"],[16665,"__ANON__"],[16686,"__ANON__"],[16699,"__ANON__"],[16876,"print_chains"],[16963,"join_ranges"],[17113,"get_filter_network"],[17126,"remove_non_local_rules"],[17170,"add_local_deny_rules"],[17187,"__ANON__"],[17235,"prepare_local_optimization"],[17246,"local_optimization"],[17650,"print_cisco_acl_add_deny"],[17738,"__ANON__"],[17852,"get_split_tunnel_nets"],[17875,"print_asavpn"],[17922,"__ANON__"],[18192,"iptables_acl_line"],[18218,"print_acl_prefix"],[18251,"print_acl_suffix"],[18264,"print_iptables_acls"],[18315,"print_cisco_acls"],[18421,"print_acls"],[18437,"gen_crypto_rules"],[18455,"print_ezvpn"],[18533,"print_crypto_acl"],[18566,"print_crypto_filter_acl"],[18588,"print_crypto_map_attributes"],[18631,"print_tunnel_group"],[18662,"print_ca_and_tunnel_group_map"],[18673,"print_static_crypto_map"],[18756,"print_dynamic_crypto_map"],[18806,"print_crypto"],[18995,"print_interface"],[19065,"check_output_dir"],[19076,"print_code"],[19134,"__ANON__"],[19162,"copy_raw"],[19207,"show_version"],[19212,"show_finished"],[19220,"init_protocols"],[19343,"init_global_vars"],[19389,"parse_options"],[19392,"__ANON__"],[19404,"__ANON__"],[19405,"__ANON__"],[19406,"__ANON__"],[19422,"parse_args"],[19443,"compile"]],"pod":[[201,"get_config_keys"],[205,"valid_config_key"],[210,"get_config_pattern"],[224,"check_config_pair"],[232,"set_config"],[245,"store_description"],[256,"fast_mode"],[407,"equal"],[415,"unique"],[420,"find_duplicates"],[426,"intersect"],[432,"max"],[442,"aref_delete"],[456,"aref_eq"],[465,"keys_eq"],[476,"info"],[482,"progress"],[492,"warn_msg"],[497,"debug"],[519,"context"],[532,"at_line"],[539,"check_abort"],[549,"abort_on_error"],[554,"set_abort_immediately"],[559,"error_atline"],[566,"err_msg"],[573,"fatal_err"],[579,"syntax_err"],[584,"internal_err"],[608,"skip_space_and_comment"],[622,"check"],[630,"skip"],[636,"check_int"],[646,"read_int"],[653,"check_ip"],[666,"read_ip"],[674,"read_ip_prefix"],[686,"read_ip_prefix_pair"],[691,"gen_ip"],[698,"print_ip"],[716,"mask2prefix"],[721,"prefix2mask"],[727,"complement_32bit"],[733,"match_ip"],[738,"read_identifier"],[749,"read_owner_pattern"],[760,"read_name"],[771,"read_string"],[785,"read_union"],[812,"check_typed_name"],[839,"read_typed_name"],[868,"read_extended_name"],[936,"read_user_id"],[947,"check_hostname"],[963,"read_complement"],[972,"read_intersection"],[994,"read_time_val"],[1001,"add_description"],[1017,"check_permit_deny"],[1027,"check_nat_name"],[1036,"split_typed_name"],[1043,"check_flag"],[1054,"check_assign"],[1072,"read_list"],[1088,"read_list_or_null"],[1094,"read_assign_list"],[1101,"check_assign_list"],[1110,"check_assign_pair"],[1136,"new"],[1142,"add_attribute"],[1151,"check_radius_attributes"],[1166,"check_routing"],[1173,"check_managed"],[1199,"check_model"],[1230,"host_as_interface"],[1271,"read_host"],[1373,"read_nat"],[1430,"read_network"],[1633,"read_interface"],[1928,"set_pix_interface_level"],[1970,"read_router"],[2513,"move_locked_interfaces"],[2557,"read_aggregate"],[2606,"check_router_attributes"],[2638,"read_area"],[2700,"read_group"],[2713,"read_protocolgroup"],[2720,"read_port_range"],[2750,"read_port_ranges"],[2765,"read_icmp_type_code"],[2793,"read_proto_nr"],[2821,"gen_protocol_name"],[2867,"cache_anonymous_protocol"],[2881,"read_simple_protocol"],[2918,"check_protocol_flags"],[2937,"read_typed_name_or_simple_protocol"],[2941,"read_protocol"],[2952,"assign_union_allow_user"],[2962,"read_service"],[3047,"read_pathrestriction"],[3058,"read_attributed_object"],[3136,"read_isakmp"],[3171,"read_ipsec"],[3178,"read_crypto"],[3205,"read_owner"],[3274,"read_netspoc"],[3293,"read_file"],[3323,"read_config"],[3349,"read_json_watchers"],[3389,"read_json"],[3407,"read_file_or_dir"],[3485,"show_read_statistics"],[3500,"is_network"],[3501,"is_router"],[3502,"is_interface"],[3503,"is_host"],[3504,"is_subnet"],[3505,"is_area"],[3506,"is_zone"],[3507,"is_group"],[3508,"is_protocolgroup"],[3509,"is_objectgroup"],[3510,"is_chain"],[3511,"is_autointerface"],[3516,"print_rule"],[3545,"prepare_prt_ordering"],[3607,"order_icmp"],[3633,"order_proto"],[3650,"order_ranges"],[3799,"expand_splitted_protocol"],[3854,"order_protocols"],[3899,"link_to_owner"],[3913,"link_to_real_owner"],[3930,"expand_watchers"],[3974,"link_owners"],[4065,"link_policy_distribution_point"],[4090,"link_general_permit"],[4135,"link_areas"],[4195,"link_interfaces"],[4248,"check_interface_ip"],[4306,"link_routers"],[4315,"link_subnet"],[4366,"link_subnets"],[4381,"add_pathrestriction"],[4394,"link_pathrestrictions"],[4491,"link_virtual_interfaces"],[4606,"check_ip_addresses"],[4704,"link_topology"],[4733,"disable_behind"],[4786,"check_bridged_networks"],[4849,"mark_disabled"],[4990,"split_ip_range"],[5006,"convert_hosts"],[5211,"combine_subnets"],[5264,"get_intf"],[5279,"get_auto_intf"],[5319,"check_auto_intf"],[5384,"expand_group1"],[5880,"remove_duplicates"],[5899,"expand_group"],[5918,"expand_group_in_rule"],[6019,"check_unused_groups"],[6043,"expand_protocols"],[6104,"split_protocols"],[6161,"add_rules"],[6203,"get_zone"],[6249,"expand_special"],[6328,"add_managed_hosts"],[6350,"collect_unenforceable"],[6414,"show_unenforceable"],[6455,"warn_useless_unenforceable"],[6466,"show_deleted_rules1"],[6521,"collect_redundant_rules"],[6565,"show_deleted_rules2"],[6606,"warn_unused_overlaps"],[6626,"collect_log"],[6636,"check_log"],[6649,"normalize_log"],[6660,"expand_rules"],[6799,"print_rulecount"],[6808,"split_expanded_rule_types"],[6831,"expand_services"],[6904,"set_policy_distribution_ip"],[7040,"propagate_owners"],[7351,"expand_auto_intf"],[7371,"show_unknown_owners"],[7395,"set_service_owner"],[7531,"set_natdomain"],[7611,"distribute_nat1"],[7744,"distribute_nat"],[7755,"distribute_nat_info"],[8041,"invert_nat_set"],[8111,"adjust_crypto_nat"],[8138,"get_nat_network"],[8156,"check_subnets"],[8202,"nat_to_loopback_ok"],[8229,"numerically"],[8230,"by_name"],[8237,"find_subnets_in_zone"],[8500,"find_subnets_in_nat_domain"],[8719,"check_no_in_acl"],[8784,"cluster_crosslink_routers"],[8840,"check_crosslink"],[8920,"check_managed_local"],[9009,"link_reroute_permit"],[9041,"add_managed_hosts_to_aggregate"],[9084,"link_aggregate_to_zone"],[9117,"link_implicit_aggregate_to_zone"],[9189,"link_aggregates"],[9283,"duplicate_aggregate_to_cluster"],[9319,"get_any"],[9374,"get_cluster_aggregates"],[9387,"set_zone1"],[9456,"set_zone_cluster"],[9499,"zone_eq"],[9513,"set_area1"],[9579,"inherit_router_attributes"],[9616,"nat_equal"],[9634,"check_useless_nat"],[9649,"inherit_area_nat"],[9681,"inherit_attributes_from_area"],[9694,"inherit_nat_to_subnets_in_zone"],[9751,"inherit_nat_in_zone"],[9779,"cleanup_after_inheritance"],[9797,"inherit_attributes"],[9808,"set_zones"],[9850,"cluster_zones"],[9871,"prepare_area_borders"],[9899,"set_area"],[9919,"set_areas"],[9975,"find_subset_relations"],[10035,"check_routers_in_nested_areas"],[10079,"clean_areas"],[10092,"set_zone"],[10114,"check_virtual_interfaces"],[10149,"check_pathrestrictions"],[10239,"traverse_loop_part"],[10267,"optimize_pathrestrictions"],[10388,"setpath_obj"],[10481,"set_loop_cluster"],[10504,"setpath"],[10571,"get_path"],[10636,"cluster_path_mark1"],[10788,"cluster_navigation"],[10852,"cluster_path_mark"],[11180,"path_mark"],[11276,"loop_path_walk"],[11339,"path_walk"],[11444,"set_auto_intf_from_border"],[11485,"path_auto_interfaces"],[11568,"link_ipsec"],[11586,"link_crypto"],[11607,"gen_tunnel_rules"],[11640,"link_tunnels"],[11834,"crypto_behind"],[11878,"verify_asa_vpn_attributes"],[11908,"verify_subject_name"],[11931,"verify_asa_trustpoint"],[11942,"expand_crypto"],[12180,"setup_ref2obj"],[12234,"collect_supernet_dst_rules"],[12265,"find_supernet"],[12291,"find_zone_network"],[12343,"find_matching_supernet"],[12383,"check_supernet_in_zone"],[12466,"check_supernet_src_rule"],[12610,"check_supernet_dst_rule"],[12675,"check_supernet_dst_collections"],[12712,"find_smaller_prt"],[12766,"check_for_transient_supernet_rule"],[12975,"mark_stateful"],[12997,"check_supernet_rules"],[13037,"gen_reverse_rules1"],[13151,"gen_reverse_rules"],[13189,"get_zone2"],[13208,"mark_secondary"],[13238,"mark_primary"],[13266,"mark_strict_secondary"],[13294,"mark_local_secondary"],[13317,"mark_secondary_rules"],[13420,"mark_dynamic_nat_rules"],[13609,"optimize_rules"],[13678,"optimize_and_warn_deleted"],[13693,"collect_nat_path"],[13712,"distribute_nat_to_device"],[13777,"get_zone3"],[13800,"get_networks"],[13819,"prepare_nat_commands"],[13881,"get_route_networks"],[13922,"set_routes_in_zone"],[14036,"add_path_routes"],[14056,"add_end_routes"],[14081,"get_route_path"],[14105,"find_active_routes"],[14258,"fix_bridged_hops"],[14282,"check_and_convert_routes"],[14536,"print_header"],[14544,"print_routes"],[14732,"print_nat1"],[14806,"print_pix_static"],[14901,"print_asa_nat"],[14982,"optimize_nat_networks"],[15035,"print_nat"],[15057,"distribute_rule"],[15241,"add_router_acls"],[15365,"cmp_address"],[15379,"distribute_rules"],[15387,"create_general_permit_rules"],[15410,"distribute_general_permit"],[15482,"sort_rules_by_prio"],[15496,"rules_distribution"],[15536,"address"],[15617,"cisco_acl_addr"],[15644,"ios_route_code"],[15654,"prefix_code"],[15662,"full_prefix_code"],[15672,"cisco_prt_code"],[15739,"iptables_prt_code"],[15791,"cisco_acl_line"],[15858,"find_object_groups"],[16091,"debug_bintree"],[16110,"add_bintree"],[16205,"gen_addr_bintree"],[16249,"gen_prt_bintree"],[16504,"find_chains"],[16876,"print_chains"],[16963,"join_ranges"],[17113,"get_filter_network"],[17126,"remove_non_local_rules"],[17170,"add_local_deny_rules"],[17235,"prepare_local_optimization"],[17246,"local_optimization"],[17650,"print_cisco_acl_add_deny"],[17852,"get_split_tunnel_nets"],[17875,"print_asavpn"],[18192,"iptables_acl_line"],[18218,"print_acl_prefix"],[18251,"print_acl_suffix"],[18264,"print_iptables_acls"],[18315,"print_cisco_acls"],[18421,"print_acls"],[18437,"gen_crypto_rules"],[18455,"print_ezvpn"],[18533,"print_crypto_acl"],[18566,"print_crypto_filter_acl"],[18588,"print_crypto_map_attributes"],[18631,"print_tunnel_group"],[18662,"print_ca_and_tunnel_group_map"],[18673,"print_static_crypto_map"],[18756,"print_dynamic_crypto_map"],[18806,"print_crypto"],[18995,"print_interface"],[19065,"check_output_dir"],[19076,"print_code"],[19162,"copy_raw"],[19207,"show_version"],[19212,"show_finished"],[19220,"init_protocols"],[19343,"init_global_vars"],[19389,"parse_options"],[19422,"parse_args"],[19443,"compile"]],"statement":[29,29,29,30,30,30,31,31,31,33,33,33,34,34,34,41,41,41,4005,4005,4005,13098,13098,13098,19385,19385,19385,19386,19386,19386,201,205,206,210,211,212,213,214,215,218,224,225,226,232,233,234,235,238,245,246,247,250,256,257,258,261,407,408,409,409,415,416,416,420,421,422,422,426,427,427,428,428,432,433,434,436,442,443,444,445,448,451,456,457,458,459,461,465,466,467,468,470,476,477,478,482,483,484,485,487,488,492,493,497,498,499,519,520,521,524,526,528,532,539,540,541,544,549,550,554,555,559,560,561,562,566,567,568,569,573,574,575,579,580,584,588,589,591,592,593,594,596,608,609,613,614,622,623,624,625,630,631,636,637,638,641,646,647,648,653,654,655,656,658,661,666,667,668,674,675,676,677,678,681,682,686,687,691,692,698,699,716,717,721,722,727,728,733,734,738,739,740,743,749,750,751,754,760,761,762,765,771,772,773,776,785,786,787,788,789,790,791,792,793,796,798,799,800,801,805,807,812,813,814,815,816,817,818,821,824,825,826,829,832,835,839,868,871,873,874,876,877,878,879,881,882,883,884,887,888,889,891,894,896,899,901,906,909,911,912,913,914,915,916,917,920,921,923,926,927,931,936,937,938,941,947,948,949,950,953,957,963,964,967,972,973,974,976,977,980,994,995,996,997,1001,1002,1003,1008,1009,1010,1012,1017,1018,1019,1022,1027,1028,1029,1032,1036,1039,1043,1044,1045,1046,1049,1054,1055,1056,1057,1058,1059,1060,1063,1064,1065,1068,1072,1073,1074,1075,1076,1077,1080,1082,1084,1088,1089,1090,1094,1095,1096,1097,1101,1102,1103,1104,1106,1110,1111,1112,1113,1114,1115,1116,1117,1119,1136,1137,1138,1142,1143,1144,1145,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1166,1167,1169,1173,1174,1175,1176,1179,1180,1183,1186,1190,1193,1195,1199,1201,1202,1203,1206,1208,1211,1210,1212,1213,1215,1216,1217,1218,1220,1230,1231,1232,1233,1234,1235,1238,1241,1243,1244,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1266,1267,1271,1272,1273,1274,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1290,1291,1297,1299,1302,1303,1306,1309,1312,1315,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1329,1332,1336,1339,1342,1343,1345,1346,1347,1349,1350,1352,1353,1356,1360,1361,1366,1369,1373,1376,1377,1378,1379,1380,1381,1382,1383,1384,1387,1390,1396,1399,1402,1405,1406,1407,1407,1408,1412,1415,1416,1416,1417,1419,1422,1424,1430,1434,1435,1436,1437,1438,1440,1441,1442,1443,1444,1445,1446,1447,1450,1451,1456,1461,1464,1467,1470,1473,1474,1475,1476,1476,1477,1482,1482,1483,1486,1486,1489,1491,1492,1493,1494,1495,1497,1499,1502,1503,1506,1507,1510,1515,1518,1520,1521,1524,1525,1526,1533,1537,1538,1539,1544,1545,1546,1547,1548,1549,1554,1555,1555,1558,1559,1560,1565,1565,1566,1571,1576,1582,1582,1583,1585,1588,1588,1589,1590,1597,1597,1597,1600,1600,1604,1605,1608,1613,1633,1634,1637,1638,1639,1640,1643,1644,1645,1646,1647,1648,1649,1650,1654,1655,1656,1658,1662,1665,1668,1671,1674,1677,1682,1685,1686,1687,1688,1688,1692,1693,1694,1697,1700,1703,1706,1707,1708,1709,1710,1711,1712,1713,1714,1715,1717,1722,1723,1724,1725,1726,1727,1728,1731,1734,1735,1738,1742,1746,1749,1754,1755,1756,1757,1758,1759,1762,1764,1767,1769,1770,1773,1776,1777,1781,1782,1785,1788,1791,1794,1794,1795,1796,1798,1801,1804,1807,1814,1815,1821,1822,1823,1824,1828,1830,1834,1837,1836,1836,1838,1841,1843,1844,1845,1848,1849,1850,1852,1854,1855,1856,1858,1859,1863,1866,1867,1867,1868,1869,1871,1872,1873,1874,1878,1881,1882,1883,1883,1884,1884,1885,1888,1890,1892,1897,1900,1901,1902,1904,1905,1905,1908,1909,1910,1912,1915,1916,1917,1918,1921,1928,1929,1929,1930,1931,1932,1933,1933,1934,1937,1938,1943,1947,1950,1958,1960,1962,1970,1975,1977,1978,1981,1982,1984,1985,1986,1987,1988,1989,1990,1992,1997,2000,2003,2006,2009,2012,2015,2018,2021,2024,2029,2034,2037,2038,2039,2040,2042,2043,2044,2045,2048,2052,2053,2054,2054,2055,2056,2057,2061,2064,2067,2070,2075,2080,2080,2081,2081,2082,2083,2086,2087,2090,2091,2091,2093,2098,2099,2101,2102,2105,2109,2110,2111,2112,2115,2123,2124,2124,2127,2128,2132,2136,2139,2140,2144,2147,2148,2153,2161,2162,2163,2163,2164,2165,2169,2175,2179,2180,2185,2185,2191,2192,2198,2199,2201,2204,2205,2211,2212,2213,2215,2219,2224,2225,2226,2229,2231,2233,2234,2236,2237,2240,2245,2246,2251,2255,2256,2259,2265,2265,2266,2269,2272,2273,2277,2280,2281,2287,2288,2288,2289,2290,2291,2292,2293,2299,2303,2305,2306,2311,2314,2320,2321,2325,2331,2332,2337,2338,2339,2339,2340,2341,2342,2344,2345,2348,2348,2348,2351,2352,2354,2355,2355,2355,2359,2361,2361,2361,2367,2367,2367,2371,2374,2378,2379,2385,2386,2387,2389,2389,2390,2391,2394,2395,2398,2399,2404,2405,2410,2412,2412,2415,2416,2422,2427,2428,2435,2436,2438,2439,2450,2451,2453,2455,2460,2461,2462,2470,2471,2472,2475,2476,2478,2479,2479,2482,2487,2488,2490,2493,2493,2496,2499,2503,2505,2513,2514,2515,2516,2517,2521,2522,2525,2529,2530,2531,2533,2534,2535,2536,2539,2540,2541,2541,2544,2547,2551,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2570,2573,2576,2579,2580,2581,2583,2586,2589,2590,2591,2592,2593,2594,2594,2596,2600,2602,2606,2609,2610,2611,2612,2613,2614,2615,2616,2621,2626,2629,2632,2638,2639,2640,2641,2642,2643,2644,2645,2646,2646,2647,2648,2650,2655,2655,2656,2657,2659,2662,2665,2666,2667,2669,2672,2675,2678,2679,2680,2682,2685,2688,2691,2694,2700,2701,2702,2703,2704,2705,2706,2707,2713,2714,2715,2716,2720,2721,2722,2723,2724,2725,2726,2727,2729,2730,2733,2737,2741,2745,2750,2751,2752,2753,2754,2756,2759,2761,2765,2766,2767,2768,2769,2770,2771,2772,2775,2779,2780,2781,2789,2793,2794,2795,2796,2797,2798,2803,2804,2807,2808,2811,2815,2817,2821,2822,2823,2825,2839,2829,2830,2831,2834,2837,2840,2841,2842,2842,2843,2844,2845,2846,2849,2850,2851,2854,2859,2861,2867,2868,2869,2870,2873,2874,2875,2876,2881,2882,2883,2884,2885,2888,2889,2892,2893,2896,2897,2900,2903,2906,2908,2909,2912,2914,2918,2919,2920,2921,2922,2927,2930,2933,2937,2941,2942,2943,2944,2945,2946,2952,2953,2954,2955,2956,2957,2958,2962,2963,2964,2965,2966,2967,2968,2969,2970,2971,2974,2977,2980,2983,2986,2989,2992,2997,2998,2999,3001,3002,3004,3005,3006,3007,3008,3009,3014,3015,3016,3019,3021,3022,3026,3034,3035,3035,3038,3041,3047,3048,3049,3050,3051,3052,3053,3054,3058,3059,3060,3061,3062,3063,3064,3065,3066,3068,3069,3070,3071,3072,3072,3076,3079,3081,3082,3084,3085,3086,3087,3088,3091,3096,3097,3098,3099,3103,3136,3137,3171,3172,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3190,3192,3195,3198,3199,3205,3206,3207,3208,3209,3210,3211,3212,3213,3215,3218,3220,3223,3224,3227,3229,3232,3235,3238,3241,3244,3247,3248,3250,3252,3274,3275,3276,3278,3279,3280,3281,3282,3288,3293,3294,3297,3298,3300,3301,3306,3307,3310,3311,3313,3314,3315,3316,3318,3323,3324,3335,3326,3327,3328,3329,3330,3331,3333,3334,3337,3338,3339,3339,3340,3341,3343,3345,3349,3350,3351,3351,3352,3353,3354,3355,3356,3357,3358,3358,3359,3360,3361,3362,3363,3364,3365,3366,3368,3369,3371,3371,3372,3374,3375,3376,3377,3378,3380,3382,3385,3389,3390,3391,3391,3392,3393,3394,3395,3396,3397,3398,3399,3401,3403,3407,3408,3411,3412,3413,3417,3433,3419,3420,3421,3422,3423,3424,3425,3426,3428,3431,3450,3437,3440,3441,3442,3444,3445,3448,3454,3455,3455,3456,3458,3458,3459,3461,3462,3463,3467,3469,3470,3473,3475,3476,3478,3479,3481,3485,3486,3487,3488,3489,3490,3491,3492,3493,3494,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,3516,3517,3518,3519,3520,3521,3522,3523,3524,3525,3526,3529,3545,3546,3547,3548,3556,3559,3560,3561,3562,3563,3568,3571,3573,3577,3578,3579,3580,3584,3590,3591,3594,3601,3603,3607,3610,3611,3612,3614,3617,3620,3623,3627,3629,3633,3634,3635,3638,3640,3650,3657,3651,3664,3778,3667,3668,3669,3670,3671,3671,3675,3679,3684,3689,3690,3693,3696,3697,3706,3707,3708,3709,3770,3713,3714,3715,3716,3718,3719,3719,3723,3724,3725,3729,3733,3734,3735,3739,3742,3747,3752,3754,3764,3767,3769,3771,3772,3773,3776,3781,3783,3784,3785,3785,3789,3794,3795,3799,3802,3803,3806,3807,3811,3854,3861,3861,3870,3873,3874,3879,3881,3882,3883,3884,3885,3888,3889,3899,3900,3901,3902,3903,3905,3907,3909,3913,3914,3915,3918,3919,3923,3930,3931,3934,3935,3939,3940,3940,3942,3943,3944,3946,3947,3948,3949,3950,3951,3952,3953,3955,3957,3958,3958,3961,3964,3967,3969,3969,3974,3977,3978,3981,3982,3983,3984,3985,3986,3987,3990,3994,3997,3998,3998,4004,4006,4014,4020,4020,4020,4021,4022,4022,4023,4023,4024,4028,4028,4029,4031,4036,4037,4038,4038,4039,4042,4043,4045,4046,4047,4048,4051,4052,4053,4054,4054,4055,4058,4059,4061,4065,4066,4067,4068,4069,4073,4074,4076,4077,4078,4082,4083,4085,4086,4090,4091,4092,4101,4097,4098,4105,4106,4108,4109,4110,4111,4114,4115,4117,4118,4119,4121,4122,4124,4125,4126,4130,4135,4136,4138,4137,4139,4140,4141,4142,4145,4149,4153,4155,4160,4161,4162,4163,4163,4164,4165,4166,4171,4172,4176,4180,4185,4186,4187,4190,4195,4196,4196,4197,4198,4200,4201,4203,4204,4207,4210,4215,4216,4219,4223,4224,4225,4231,4241,4241,4242,4244,4248,4249,4250,4251,4258,4263,4276,4277,4278,4281,4282,4283,4290,4291,4293,4294,4295,4299,4306,4307,4308,4309,4311,4315,4321,4318,4322,4323,4323,4324,4325,4329,4330,4332,4333,4334,4338,4339,4341,4342,4343,4344,4347,4348,4352,4353,4358,4359,4362,4366,4367,4369,4370,4371,4371,4372,4375,4381,4382,4383,4385,4385,4386,4387,4389,4390,4394,4395,4397,4398,4399,4399,4400,4401,4402,4403,4404,4410,4410,4414,4415,4418,4424,4425,4426,4432,4433,4438,4439,4442,4443,4443,4443,4445,4445,4446,4447,4449,4452,4458,4458,4459,4463,4464,4465,4465,4466,4467,4468,4471,4471,4472,4472,4476,4491,4496,4497,4498,4499,4500,4501,4502,4503,4504,4505,4506,4508,4510,4511,4513,4518,4519,4522,4527,4528,4531,4536,4551,4552,4553,4554,4555,4555,4556,4556,4557,4558,4558,4559,4560,4561,4562,4566,4563,4564,4565,4567,4568,4569,4570,4571,4572,4572,4573,4575,4577,4590,4591,4592,4593,4594,4595,4596,4597,4602,4606,4607,4607,4611,4613,4613,4614,4616,4619,4624,4625,4625,4626,4627,4630,4630,4631,4635,4636,4637,4640,4642,4643,4646,4651,4655,4656,4661,4662,4662,4663,4664,4665,4669,4673,4674,4675,4679,4683,4683,4684,4685,4686,4687,4696,4704,4705,4706,4707,4708,4709,4710,4711,4712,4713,4714,4715,4733,4736,4737,4738,4741,4743,4744,4744,4745,4747,4747,4748,4751,4754,4756,4757,4758,4759,4759,4760,4761,4764,4786,4787,4788,4789,4791,4792,4793,4798,4799,4800,4801,4802,4803,4804,4804,4808,4809,4809,4810,4813,4814,4814,4815,4816,4817,4818,4819,4820,4821,4825,4825,4826,4827,4828,4829,4830,4831,4833,4837,4838,4845,4849,4849,4851,4852,4853,4854,4860,4864,4867,4868,4869,4870,4875,4876,4877,4878,4881,4882,4883,4883,4884,4885,4889,4890,4893,4897,4898,4899,4900,4901,4904,4910,4911,4912,4913,4914,4914,4916,4917,4918,4918,4925,4926,4927,4927,4928,4929,4930,4936,4940,4941,4942,4943,4951,4952,4953,4953,4954,4955,4956,4961,4962,4963,4964,4965,4966,4969,4974,4974,4975,4976,4990,4991,4993,4994,4995,4996,4997,4998,5002,5006,5007,5008,5009,5013,5013,5015,5014,5016,5017,5018,5019,5020,5021,5025,5030,5030,5031,5032,5033,5034,5038,5041,5047,5049,5050,5051,5052,5053,5054,5055,5056,5061,5064,5065,5068,5069,5074,5078,5081,5082,5085,5088,5088,5091,5098,5099,5100,5101,5102,5103,5106,5107,5107,5108,5108,5114,5115,5116,5117,5118,5119,5120,5122,5139,5142,5143,5144,5145,5146,5149,5157,5159,5160,5167,5168,5170,5172,5173,5174,5174,5177,5182,5185,5186,5187,5188,5189,5190,5195,5202,5202,5203,5206,5211,5212,5212,5213,5214,5215,5216,5217,5218,5219,5220,5221,5223,5224,5227,5231,5232,5235,5243,5243,5264,5265,5266,5266,5269,5272,5272,5279,5280,5281,5282,5283,5284,5285,5288,5290,5291,5297,5298,5302,5319,5320,5323,5324,5325,5326,5327,5328,5329,5330,5333,5334,5335,5336,5337,5338,5339,5341,5344,5345,5345,5346,5347,5348,5349,5350,5353,5357,5358,5364,5365,5366,5367,5368,5369,5369,5372,5376,5384,5385,5386,5388,5389,5390,5392,5393,5394,5397,5395,5396,5396,5402,5403,5404,5407,5410,5413,5414,5415,5416,5418,5419,5420,5421,5422,5425,5427,5428,5429,5436,5436,5439,5445,5446,5449,5450,5451,5453,5454,5456,5457,5458,5459,5460,5461,5462,5467,5472,5472,5478,5475,5476,5481,5481,5485,5486,5491,5496,5497,5504,5507,5511,5517,5517,5518,5523,5523,5524,5525,5529,5530,5531,5534,5537,5537,5545,5542,5544,5543,5547,5548,5548,5551,5551,5555,5556,5557,5564,5567,5571,5576,5584,5585,5588,5589,5590,5593,5597,5603,5606,5614,5611,5612,5621,5618,5619,5619,5620,5638,5624,5625,5626,5627,5629,5628,5628,5632,5635,5637,5671,5640,5641,5642,5643,5644,5647,5648,5655,5655,5664,5664,5659,5668,5670,5672,5673,5674,5675,5676,5677,5678,5681,5682,5685,5690,5691,5691,5692,5693,5698,5702,5703,5703,5705,5708,5709,5710,5711,5741,5720,5722,5723,5724,5725,5728,5729,5734,5738,5720,5745,5746,5753,5756,5757,5758,5759,5762,5765,5765,5769,5770,5778,5781,5788,5793,5796,5797,5799,5802,5803,5804,5805,5812,5815,5817,5820,5825,5826,5827,5828,5837,5839,5840,5841,5842,5845,5846,5846,5848,5847,5849,5854,5856,5861,5861,5862,5867,5872,5875,5880,5881,5883,5884,5885,5886,5889,5891,5890,5892,5893,5893,5895,5899,5900,5901,5904,5905,5906,5907,5908,5911,5911,5912,5918,5919,5922,5923,5924,5925,5926,5927,5930,5933,5934,5937,5942,5943,5947,5949,5950,5951,5952,5955,5955,5957,5958,5960,5961,5964,5965,5965,5974,5975,5976,5979,5983,5986,5990,5991,5996,6001,5999,6002,6005,6012,6013,6014,6015,6016,6017,6019,6020,6021,6022,6025,6026,6027,6032,6033,6043,6044,6045,6048,6049,6050,6053,6054,6055,6056,6059,6062,6063,6067,6068,6069,6070,6071,6079,6080,6081,6084,6088,6091,6092,6096,6099,6104,6105,6106,6107,6108,6109,6110,6114,6115,6122,6123,6124,6125,6126,6127,6130,6132,6135,6136,6140,6161,6162,6164,6166,6165,6174,6177,6179,6180,6181,6182,6185,6188,6189,6190,6194,6197,6203,6204,6205,6208,6209,6210,6213,6214,6217,6220,6221,6224,6230,6231,6234,6238,6241,6243,6249,6250,6251,6252,6253,6254,6262,6267,6269,6270,6272,6273,6274,6275,6276,6279,6280,6281,6284,6288,6289,6290,6293,6297,6299,6301,6304,6305,6306,6307,6308,6309,6310,6314,6317,6319,6321,6321,6323,6328,6329,6330,6331,6332,6334,6335,6336,6338,6350,6352,6353,6354,6355,6358,6359,6363,6365,6369,6378,6379,6380,6381,6390,6398,6401,6407,6409,6410,6414,6415,6417,6420,6422,6423,6425,6429,6432,6434,6436,6438,6440,6441,6442,6443,6444,6445,6448,6450,6451,6455,6456,6457,6458,6459,6460,6462,6466,6467,6469,6470,6472,6473,6474,6476,6477,6478,6479,6480,6481,6482,6486,6487,6488,6489,6490,6494,6495,6496,6497,6498,6499,6500,6500,6502,6503,6504,6505,6506,6507,6508,6509,6509,6510,6516,6517,6521,6524,6525,6527,6528,6529,6532,6533,6538,6539,6540,6541,6542,6546,6547,6548,6549,6550,6552,6553,6554,6555,6556,6560,6561,6565,6566,6567,6568,6570,6571,6572,6573,6574,6575,6576,6577,6578,6578,6580,6581,6582,6583,6584,6585,6586,6590,6587,6591,6594,6600,6602,6606,6607,6608,6609,6610,6611,6612,6613,6619,6626,6627,6628,6629,6632,6636,6637,6638,6639,6640,6642,6649,6650,6651,6652,6660,6661,6662,6663,6664,6665,6666,6668,6669,6670,6671,6672,6673,6674,6677,6680,6682,6683,6684,6687,6688,6691,6692,6695,6700,6702,6703,6706,6707,6710,6711,6712,6715,6716,6717,6718,6719,6720,6721,6726,6728,6734,6736,6739,6741,6742,6743,6744,6745,6746,6754,6759,6765,6767,6773,6774,6775,6776,6777,6778,6779,6781,6784,6792,6795,6799,6800,6801,6801,6801,6803,6804,6808,6810,6812,6813,6814,6817,6820,6824,6827,6831,6832,6833,6835,6836,6839,6840,6841,6844,6845,6846,6847,6848,6849,6853,6856,6860,6866,6867,6868,6869,6869,6870,6874,6880,6881,6884,6885,6887,6888,6890,6889,6891,6894,6895,6896,6904,6911,6907,6909,6908,6912,6912,6916,6930,6918,6919,6920,6921,6923,6923,6923,6924,6925,6926,6929,6931,6932,6933,6935,6936,6937,6938,6939,6940,6941,6942,6946,6946,6949,6951,6952,6953,6957,6960,6961,6966,6970,6971,6972,6978,6979,6979,6979,6984,6990,6988,6989,6993,6995,6996,6997,6998,6999,7000,7001,7002,7004,7011,7009,7015,7018,7020,7023,7024,7025,7027,7028,7032,7040,7043,7044,7045,7050,7055,7056,7056,7057,7058,7059,7060,7061,7064,7067,7069,7070,7077,7078,7078,7080,7082,7087,7096,7097,7098,7098,7099,7099,7099,7099,7100,7108,7110,7117,7112,7113,7113,7114,7115,7116,7120,7121,7122,7127,7128,7128,7129,7130,7147,7137,7138,7138,7139,7141,7141,7142,7143,7144,7150,7159,7152,7153,7154,7155,7156,7157,7162,7163,7163,7164,7165,7171,7170,7171,7175,7229,7182,7183,7184,7185,7188,7189,7190,7191,7193,7199,7200,7204,7205,7206,7207,7207,7209,7210,7211,7215,7216,7217,7218,7221,7222,7224,7225,7226,7230,7231,7236,7237,7238,7240,7241,7242,7243,7244,7245,7246,7247,7251,7252,7253,7253,7254,7260,7263,7264,7267,7268,7270,7271,7272,7273,7274,7275,7278,7279,7279,7280,7290,7290,7290,7290,7291,7292,7293,7294,7294,7295,7296,7297,7303,7308,7309,7310,7312,7315,7321,7322,7323,7323,7324,7325,7326,7327,7328,7332,7337,7338,7338,7339,7340,7341,7342,7344,7347,7351,7352,7353,7354,7355,7356,7357,7362,7364,7371,7372,7374,7379,7380,7381,7382,7385,7388,7390,7391,7395,7397,7399,7400,7401,7403,7406,7409,7411,7411,7412,7413,7414,7415,7417,7418,7420,7419,7425,7432,7433,7434,7437,7439,7442,7446,7449,7450,7451,7452,7455,7459,7464,7465,7466,7471,7475,7476,7477,7485,7485,7487,7486,7489,7494,7497,7498,7501,7502,7503,7504,7504,7513,7514,7517,7518,7531,7534,7537,7538,7538,7539,7539,7542,7544,7547,7548,7549,7550,7550,7553,7556,7557,7565,7566,7568,7570,7571,7581,7582,7583,7584,7585,7586,7592,7594,7596,7596,7597,7597,7601,7611,7614,7618,7622,7623,7627,7628,7629,7630,7631,7640,7644,7644,7645,7646,7647,7653,7657,7658,7661,7661,7662,7663,7667,7667,7671,7671,7672,7673,7676,7676,7679,7682,7684,7690,7690,7691,7692,7696,7697,7698,7699,7700,7705,7706,7712,7713,7719,7720,7726,7732,7735,7736,7740,7744,7745,7747,7749,7748,7751,7755,7759,7761,7762,7763,7764,7765,7766,7775,7796,7797,7798,7802,7821,7804,7805,7806,7807,7808,7812,7812,7813,7819,7820,7824,7825,7826,7830,7831,7832,7833,7839,7840,7844,7844,7847,7848,7849,7852,7855,7856,7857,7859,7864,7865,7867,7877,7882,7883,7883,7884,7887,7892,7893,7901,7901,7906,7907,7908,7909,7910,7911,7915,7916,7917,7918,7919,7926,7927,7931,7932,7932,7933,7939,7941,7942,7943,7944,7944,7945,7946,7947,7948,7955,7959,7960,7961,7963,7966,7976,7977,7977,7977,7978,7979,7979,7980,7981,7984,7985,7985,7986,7987,7992,8001,8002,8008,8009,8010,8011,8012,8013,8013,8014,8017,8019,8020,8021,8021,8022,8023,8023,8024,8032,8033,8041,8054,8044,8045,8047,8048,8048,8049,8049,8050,8051,8055,8056,8057,8058,8062,8063,8064,8065,8065,8066,8067,8068,8074,8075,8076,8077,8079,8080,8080,8081,8089,8090,8091,8091,8092,8092,8093,8094,8097,8098,8103,8111,8112,8113,8113,8114,8115,8115,8116,8117,8118,8119,8120,8123,8124,8125,8126,8127,8129,8134,8138,8139,8140,8141,8142,8145,8156,8157,8158,8158,8182,8160,8161,8169,8172,8172,8176,8179,8183,8183,8184,8185,8186,8188,8188,8189,8190,8193,8196,8202,8204,8205,8206,8211,8211,8212,8213,8216,8216,8217,8218,8218,8219,8220,8224,8226,8229,8230,8237,8238,8246,8247,8254,8254,8255,8257,8261,8263,8263,8263,8266,8269,8270,8271,8272,8273,8273,8274,8275,8279,8280,8281,8282,8288,8290,8290,8293,8294,8295,8296,8302,8308,8309,8312,8314,8316,8318,8322,8324,8325,8328,8329,8335,8332,8333,8339,8344,8345,8346,8356,8368,8370,8371,8372,8388,8408,8391,8392,8393,8394,8396,8397,8398,8402,8404,8405,8407,8409,8409,8415,8415,8416,8433,8420,8421,8426,8427,8428,8429,8432,8434,8435,8436,8438,8441,8442,8443,8444,8445,8446,8447,8453,8454,8454,8455,8456,8459,8460,8462,8464,8465,8472,8471,8472,8475,8475,8476,8485,8488,8489,8490,8500,8501,8502,8504,8505,8508,8510,8511,8512,8513,8514,8514,8518,8519,8520,8521,8522,8523,8526,8532,8535,8545,8548,8556,8558,8559,8560,8561,8567,8568,8568,8574,8579,8580,8581,8582,8583,8589,8590,8593,8595,8596,8602,8606,8607,8608,8609,8610,8614,8617,8618,8620,8625,8631,8633,8634,8636,8638,8643,8655,8657,8664,8665,8668,8673,8674,8687,8688,8689,8690,8691,8693,8694,8695,8696,8697,8700,8701,8703,8706,8708,8719,8720,8723,8723,8724,8725,8726,8731,8729,8731,8735,8738,8741,8744,8749,8753,8753,8753,8754,8759,8759,8760,8764,8784,8785,8787,8805,8791,8792,8793,8794,8794,8795,8796,8797,8798,8798,8799,8800,8801,8802,8808,8809,8812,8813,8819,8816,8818,8817,8818,8823,8823,8824,8826,8828,8831,8840,8843,8844,8845,8848,8849,8850,8853,8853,8854,8855,8856,8859,8860,8862,8864,8864,8864,8870,8871,8873,8873,8875,8876,8879,8880,8884,8883,8884,8888,8889,8889,8890,8894,8896,8903,8902,8906,8906,8911,8920,8921,8922,8923,8924,8927,8986,8931,8932,8933,8934,8935,8935,8936,8937,8938,8939,8940,8941,8942,8946,8945,8946,8949,8949,8953,8954,8955,8956,8957,8958,8961,8964,8964,8965,8966,8967,8968,8969,8973,8973,8976,8975,8975,8977,8982,8988,8989,8991,8991,8992,8993,8994,8995,8996,9000,9009,9010,9010,9011,9012,9014,9015,9016,9017,9018,9019,9024,9028,9032,9035,9041,9044,9045,9046,9047,9048,9048,9056,9056,9057,9058,9058,9059,9060,9062,9061,9061,9065,9084,9087,9088,9092,9095,9096,9098,9099,9104,9106,9117,9118,9119,9123,9123,9124,9130,9126,9127,9128,9129,9131,9131,9132,9132,9135,9135,9136,9136,9139,9140,9140,9141,9144,9145,9147,9150,9149,9149,9156,9156,9157,9157,9158,9159,9161,9165,9166,9167,9168,9169,9171,9172,9174,9175,9176,9189,9192,9193,9194,9194,9195,9199,9200,9201,9202,9206,9207,9208,9210,9211,9213,9214,9215,9219,9220,9223,9224,9225,9226,9231,9231,9232,9233,9234,9235,9236,9242,9243,9252,9253,9254,9255,9256,9262,9266,9267,9269,9283,9284,9285,9285,9286,9289,9290,9294,9303,9304,9307,9310,9319,9320,9321,9322,9328,9328,9329,9328,9332,9333,9334,9337,9340,9345,9346,9347,9348,9349,9356,9357,9359,9360,9363,9364,9367,9374,9375,9377,9377,9377,9387,9390,9391,9395,9396,9397,9397,9402,9403,9406,9407,9408,9409,9410,9411,9419,9422,9422,9423,9424,9427,9428,9429,9429,9434,9435,9436,9436,9439,9439,9440,9441,9442,9446,9456,9459,9460,9462,9465,9465,9466,9467,9468,9469,9470,9471,9474,9474,9475,9476,9477,9478,9481,9482,9489,9492,9499,9500,9513,9515,9517,9519,9522,9523,9524,9524,9528,9528,9531,9532,9534,9534,9537,9540,9543,9544,9547,9548,9552,9553,9558,9559,9559,9561,9566,9567,9568,9569,9572,9579,9582,9583,9586,9586,9587,9589,9592,9593,9594,9598,9606,9610,9616,9619,9620,9621,9622,9626,9634,9635,9636,9639,9640,9642,9649,9650,9653,9654,9657,9657,9660,9663,9664,9668,9672,9681,9681,9681,9681,9682,9683,9685,9694,9696,9695,9698,9699,9700,9704,9704,9705,9705,9708,9709,9712,9716,9720,9726,9736,9739,9740,9743,9747,9751,9757,9755,9755,9756,9761,9764,9764,9767,9770,9779,9780,9781,9782,9783,9785,9786,9787,9788,9789,9793,9797,9798,9799,9800,9808,9809,9812,9813,9814,9817,9821,9820,9824,9824,9825,9829,9830,9834,9835,9838,9850,9851,9854,9855,9858,9863,9871,9874,9875,9876,9877,9880,9881,9882,9885,9886,9891,9899,9900,9903,9904,9905,9906,9907,9910,9908,9911,9913,9919,9920,9921,9922,9927,9929,9933,9934,9935,9935,9936,9939,9940,9946,9947,9948,9951,9952,9953,9953,9956,9955,9958,9957,9963,9963,9968,9975,9978,9979,9984,9982,9982,9982,9982,9987,9989,9990,9991,9992,9995,9996,9996,9997,9998,9999,10000,10005,10006,10006,10006,10007,10012,10018,10021,10035,10037,10043,10041,10040,10041,10041,10046,10049,10050,10051,10052,10053,10054,10061,10062,10065,10065,10066,10067,10073,10079,10080,10081,10081,10082,10083,10086,10092,10093,10094,10095,10096,10097,10098,10099,10100,10101,10102,10103,10104,10105,10114,10115,10116,10120,10121,10123,10124,10126,10127,10128,10129,10131,10134,10137,10135,10135,10140,10149,10150,10151,10152,10153,10157,10164,10165,10167,10168,10171,10172,10172,10173,10174,10177,10183,10183,10187,10187,10187,10194,10195,10196,10197,10198,10199,10199,10200,10201,10201,10202,10203,10204,10205,10207,10208,10211,10218,10222,10224,10224,10224,10226,10239,10240,10241,10242,10245,10247,10248,10248,10249,10250,10251,10252,10253,10256,10257,10258,10261,10267,10268,10269,10278,10279,10280,10285,10286,10287,10288,10292,10293,10297,10298,10299,10301,10302,10303,10310,10323,10324,10325,10328,10331,10334,10335,10336,10337,10338,10338,10347,10348,10350,10355,10355,10356,10364,10388,10391,10401,10402,10406,10410,10411,10412,10414,10415,10415,10418,10422,10423,10426,10427,10428,10429,10432,10438,10443,10444,10445,10446,10449,10456,10458,10463,10466,10467,10471,10472,10481,10482,10483,10486,10489,10492,10495,10498,10504,10506,10507,10507,10508,10511,10512,10515,10523,10524,10527,10528,10532,10535,10537,10540,10543,10545,10546,10546,10547,10548,10549,10551,10558,10559,10560,10561,10571,10572,10573,10574,10575,10578,10581,10582,10587,10591,10592,10595,10599,10605,10606,10609,10615,10620,10623,10627,10636,10637,10638,10644,10645,10646,10649,10657,10658,10659,10662,10663,10664,10665,10668,10678,10679,10680,10683,10692,10695,10699,10702,10705,10709,10710,10711,10712,10713,10714,10717,10724,10728,10729,10732,10736,10737,10740,10741,10742,10742,10743,10746,10747,10748,10749,10750,10752,10761,10762,10765,10769,10770,10773,10776,10788,10789,10790,10794,10795,10798,10800,10802,10803,10804,10805,10811,10812,10815,10818,10821,10822,10825,10828,10829,10830,10833,10836,10852,10855,10863,10869,10870,10873,10874,10879,10882,10884,10887,10888,10891,10894,10897,10898,10904,10909,10910,10913,10918,10919,10923,10925,10936,10936,10942,10943,10944,10949,10950,10951,10952,10953,10954,10955,10956,10959,10962,10964,10967,10971,10972,10979,10980,10981,10982,10983,10984,10984,10996,10997,10998,10999,11000,11001,11002,11002,11003,11004,11007,11008,11009,11013,11017,11024,11024,11025,11027,11028,11032,11033,11034,11037,11038,11039,11041,11048,11049,11050,11053,11054,11055,11056,11057,11060,11065,11066,11069,11076,11077,11084,11087,11088,11089,11091,11092,11093,11095,11096,11103,11105,11106,11107,11110,11111,11113,11113,11112,11117,11118,11119,11120,11121,11121,11122,11123,11126,11130,11131,11132,11133,11136,11137,11138,11139,11140,11141,11141,11147,11148,11152,11153,11157,11160,11162,11180,11184,11185,11196,11197,11198,11202,11205,11206,11210,11214,11218,11221,11222,11223,11226,11229,11230,11233,11235,11241,11242,11243,11244,11247,11248,11251,11253,11254,11257,11259,11265,11266,11267,11268,11271,11276,11285,11303,11303,11304,11309,11312,11313,11314,11319,11324,11327,11327,11328,11331,11339,11340,11341,11342,11344,11345,11346,11347,11348,11360,11361,11363,11364,11365,11370,11371,11374,11375,11376,11377,11381,11385,11386,11389,11392,11396,11397,11398,11401,11403,11404,11408,11409,11410,11413,11416,11418,11419,11420,11423,11424,11428,11431,11433,11434,11435,11438,11444,11445,11471,11448,11449,11450,11452,11452,11453,11454,11455,11456,11457,11458,11459,11462,11462,11463,11464,11465,11466,11468,11470,11472,11473,11474,11475,11477,11478,11485,11486,11489,11487,11491,11493,11494,11495,11496,11498,11499,11500,11501,11507,11508,11511,11514,11514,11517,11519,11519,11524,11525,11526,11527,11528,11530,11531,11532,11535,11538,11539,11544,11545,11551,11552,11555,11556,11560,11560,11568,11571,11571,11572,11573,11576,11579,11582,11586,11587,11590,11590,11592,11593,11596,11599,11602,11607,11608,11609,11610,11611,11612,11613,11614,11616,11618,11625,11626,11633,11640,11645,11646,11647,11648,11649,11650,11650,11651,11651,11652,11655,11658,11659,11660,11663,11663,11664,11671,11672,11676,11681,11682,11684,11686,11693,11694,11695,11695,11696,11697,11698,11699,11702,11703,11704,11705,11706,11708,11709,11710,11724,11726,11726,11727,11727,11728,11728,11729,11729,11730,11730,11731,11734,11735,11738,11739,11740,11741,11746,11747,11748,11749,11758,11762,11769,11770,11772,11772,11773,11774,11775,11779,11782,11785,11783,11787,11789,11790,11798,11799,11800,11806,11807,11807,11808,11811,11812,11812,11813,11817,11834,11835,11836,11837,11837,11840,11841,11844,11845,11845,11848,11878,11879,11880,11881,11882,11883,11884,11885,11891,11892,11897,11897,11897,11903,11908,11909,11910,11915,11912,11913,11914,11916,11917,11918,11919,11920,11921,11923,11924,11927,11931,11932,11933,11934,11938,11942,11944,11946,11947,11948,11949,11953,11953,11954,11955,11955,11956,11957,11958,11959,11960,11962,11963,11964,11964,11965,11966,11967,11968,11971,11973,11974,11975,11976,11979,11981,11983,11984,11985,11986,11987,11991,11994,11998,11998,11999,12003,12004,12005,12006,12007,12008,12009,12013,12015,12026,12029,12030,12038,12034,12045,12040,12048,12049,12050,12051,12052,12053,12056,12057,12064,12069,12076,12076,12079,12080,12081,12082,12087,12088,12095,12098,12098,12099,12100,12105,12109,12110,12113,12113,12114,12126,12127,12128,12129,12131,12130,12131,12132,12133,12134,12135,12136,12137,12138,12139,12145,12151,12152,12153,12154,12157,12161,12164,12164,12165,12166,12172,12173,12180,12181,12182,12182,12182,12183,12186,12234,12237,12240,12241,12243,12244,12245,12248,12249,12250,12251,12254,12254,12256,12255,12257,12258,12259,12261,12265,12268,12269,12270,12271,12273,12274,12276,12291,12292,12293,12294,12295,12295,12296,12297,12298,12300,12301,12305,12306,12307,12308,12309,12310,12310,12311,12313,12318,12319,12320,12324,12325,12328,12329,12334,12343,12344,12348,12349,12354,12355,12359,12362,12363,12364,12365,12368,12383,12386,12385,12387,12388,12389,12393,12396,12397,12398,12399,12401,12401,12402,12406,12407,12408,12409,12410,12416,12417,12418,12419,12422,12425,12425,12428,12429,12430,12432,12433,12434,12436,12442,12466,12470,12473,12474,12476,12477,12478,12479,12485,12487,12490,12491,12492,12495,12507,12510,12511,12514,12517,12528,12529,12530,12531,12532,12537,12542,12543,12546,12559,12568,12568,12569,12570,12574,12575,12576,12577,12578,12586,12589,12590,12610,12613,12616,12617,12619,12620,12621,12622,12625,12626,12629,12642,12644,12650,12650,12658,12659,12662,12663,12664,12665,12666,12668,12675,12676,12678,12679,12680,12681,12682,12686,12686,12690,12691,12698,12699,12703,12704,12712,12714,12715,12717,12718,12721,12722,12723,12724,12725,12726,12729,12730,12731,12732,12733,12734,12737,12738,12739,12766,12767,12769,12769,12770,12771,12772,12773,12774,12777,12781,12781,12783,12785,12786,12787,12790,12791,12792,12793,12794,12795,12796,12799,12800,12803,12805,12808,12812,12813,12815,12816,12819,12823,12826,12830,12831,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12849,12851,12854,12857,12860,12863,12864,12867,12868,12873,12874,12875,12876,12877,12878,12878,12879,12881,12889,12897,12899,12901,12905,12907,12908,12909,12910,12912,12913,12914,12915,12916,12924,12975,12976,12977,12977,12978,12979,12981,12984,12985,12986,12986,12987,12988,12989,12990,12993,12997,12998,12998,12998,12999,13000,13001,13002,13003,13006,13006,13007,13008,13009,13010,13012,13013,13016,13017,13019,13020,13024,13025,13037,13038,13040,13041,13042,13046,13049,13052,13053,13054,13055,13061,13063,13064,13065,13066,13067,13068,13074,13101,13075,13080,13081,13085,13086,13088,13095,13099,13102,13104,13106,13107,13109,13110,13115,13116,13117,13119,13120,13121,13125,13128,13130,13138,13139,13142,13145,13146,13147,13151,13152,13153,13154,13156,13157,13158,13159,13160,13164,13165,13189,13190,13191,13192,13195,13198,13208,13209,13212,13212,13213,13214,13215,13216,13218,13219,13220,13220,13221,13222,13223,13224,13225,13228,13238,13239,13240,13240,13241,13242,13243,13244,13246,13247,13248,13248,13249,13250,13251,13252,13253,13256,13266,13267,13269,13269,13270,13271,13272,13273,13275,13276,13277,13277,13278,13279,13280,13281,13282,13285,13294,13295,13297,13297,13298,13299,13300,13301,13303,13304,13305,13305,13306,13307,13308,13309,13310,13313,13317,13319,13320,13321,13322,13323,13324,13325,13327,13328,13330,13331,13333,13334,13341,13341,13341,13344,13348,13348,13349,13350,13351,13353,13361,13363,13364,13377,13380,13381,13383,13382,13384,13385,13388,13389,13390,13395,13398,13402,13403,13410,13420,13424,13425,13426,13427,13428,13429,13430,13449,13436,13437,13438,13439,13440,13442,13441,13444,13446,13445,13451,13453,13453,13454,13455,13460,13464,13465,13466,13467,13468,13472,13473,13474,13475,13478,13480,13486,13486,13488,13491,13492,13493,13494,13495,13498,13499,13503,13505,13506,13507,13511,13512,13515,13538,13523,13524,13525,13527,13528,13529,13530,13531,13534,13539,13541,13547,13549,13552,13561,13562,13563,13564,13565,13567,13569,13570,13571,13575,13576,13578,13579,13582,13583,13584,13585,13587,13586,13588,13589,13598,13600,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618,13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13636,13637,13638,13639,13640,13641,13644,13645,13646,13649,13653,13657,13661,13665,13666,13670,13671,13674,13678,13679,13680,13681,13682,13683,13684,13693,13696,13699,13701,13702,13703,13704,13706,13706,13707,13712,13713,13714,13715,13720,13721,13723,13724,13727,13728,13730,13731,13737,13738,13739,13739,13742,13749,13750,13751,13756,13756,13759,13761,13767,13768,13769,13773,13777,13778,13779,13780,13783,13786,13787,13788,13791,13795,13800,13801,13802,13803,13804,13807,13811,13814,13819,13820,13823,13828,13829,13829,13829,13832,13835,13835,13836,13837,13838,13839,13840,13841,13842,13846,13847,13848,13848,13849,13850,13850,13853,13854,13855,13856,13856,13857,13857,13858,13859,13863,13881,13882,13883,13884,13885,13885,13888,13891,13895,13896,13897,13900,13904,13922,13925,13927,13927,13928,13929,13930,13931,13932,13932,13933,13934,13935,13938,13939,13941,13964,13943,13944,13945,13946,13946,13947,13948,13949,13950,13951,13952,13954,13955,13956,13957,13958,13958,13959,13960,13961,13965,13966,13967,13968,13975,14003,13978,13979,13980,13983,13984,13986,13986,13987,13990,13991,13991,13992,13993,13994,13998,13998,14001,14004,14005,14007,14007,14008,14009,14010,14013,14016,14017,14018,14019,14019,14023,14024,14024,14029,14036,14037,14038,14039,14040,14041,14042,14045,14048,14056,14057,14058,14059,14060,14061,14062,14065,14066,14069,14072,14081,14090,14091,14091,14094,14094,14097,14097,14099,14105,14106,14107,14109,14110,14111,14111,14111,14113,14122,14134,14136,14137,14142,14143,14144,14145,14146,14147,14148,14149,14151,14153,14154,14157,14158,14161,14166,14168,14169,14170,14172,14173,14174,14176,14179,14180,14181,14182,14185,14188,14189,14190,14191,14195,14196,14197,14198,14198,14199,14199,14200,14200,14201,14201,14202,14202,14203,14204,14205,14207,14207,14208,14209,14210,14211,14211,14214,14218,14217,14220,14222,14224,14224,14225,14226,14227,14228,14228,14231,14235,14234,14237,14239,14243,14244,14258,14259,14260,14261,14261,14262,14264,14263,14265,14265,14266,14267,14268,14271,14273,14278,14282,14285,14286,14286,14287,14288,14288,14289,14290,14290,14291,14292,14293,14294,14297,14298,14303,14306,14306,14307,14308,14309,14310,14311,14312,14313,14313,14314,14315,14318,14321,14322,14323,14326,14331,14337,14338,14341,14346,14352,14360,14354,14355,14356,14357,14358,14359,14361,14362,14363,14365,14366,14367,14370,14373,14378,14379,14379,14384,14385,14386,14395,14397,14396,14399,14409,14410,14411,14416,14417,14423,14425,14425,14428,14436,14437,14438,14438,14439,14439,14442,14443,14448,14451,14460,14462,14463,14464,14465,14465,14467,14472,14473,14478,14481,14489,14494,14495,14496,14497,14497,14498,14503,14504,14505,14506,14514,14524,14523,14527,14536,14537,14538,14539,14540,14544,14545,14546,14547,14548,14549,14550,14551,14553,14554,14555,14556,14556,14557,14558,14559,14560,14563,14566,14567,14569,14571,14571,14572,14576,14577,14578,14579,14579,14580,14581,14585,14586,14590,14594,14596,14595,14597,14598,14599,14602,14604,14605,14606,14610,14611,14612,14613,14614,14618,14620,14626,14628,14631,14631,14635,14638,14643,14644,14645,14645,14647,14646,14646,14648,14649,14650,14651,14655,14663,14660,14662,14667,14669,14670,14671,14673,14674,14674,14678,14683,14683,14684,14685,14686,14690,14691,14692,14695,14699,14700,14702,14703,14706,14707,14711,14712,14719,14724,14732,14733,14734,14736,14739,14738,14739,14741,14742,14743,14744,14747,14748,14754,14752,14760,14762,14761,14764,14763,14768,14772,14776,14779,14779,14779,14782,14783,14784,14785,14791,14797,14802,14806,14809,14812,14865,14819,14820,14821,14825,14829,14830,14832,14833,14834,14835,14838,14839,14840,14846,14847,14848,14852,14854,14857,14858,14859,14860,14861,14862,14863,14874,14867,14868,14869,14870,14871,14872,14873,14891,14876,14877,14881,14882,14883,14884,14885,14889,14892,14893,14893,14894,14895,14897,14901,14904,14917,14907,14908,14909,14910,14911,14912,14913,14914,14916,14938,14919,14920,14921,14922,14923,14924,14925,14928,14929,14930,14932,14933,14934,14935,14937,14956,14941,14942,14943,14944,14945,14948,14949,14950,14953,14955,14968,14958,14959,14960,14961,14962,14966,14976,14970,14971,14972,14973,14974,14975,14977,14978,14982,14983,14983,14984,14985,14986,14987,14990,14991,14995,14996,14997,14998,14999,15000,15001,15004,15005,15006,15007,15013,15014,15015,15016,15017,15021,15022,15025,15031,15035,15036,15039,15041,15042,15044,15047,15049,15057,15064,15065,15066,15067,15074,15075,15080,15086,15088,15089,15096,15099,15102,15106,15109,15110,15111,15112,15113,15114,15115,15116,15117,15120,15127,15128,15133,15137,15141,15145,15146,15152,15157,15158,15169,15172,15175,15176,15177,15177,15181,15184,15190,15191,15192,15193,15195,15197,15197,15200,15203,15203,15203,15204,15204,15208,15214,15215,15215,15219,15220,15220,15224,15224,15229,15229,15233,15233,15235,15241,15242,15243,15243,15247,15254,15255,15255,15256,15260,15261,15262,15265,15266,15269,15269,15273,15274,15274,15279,15277,15295,15296,15297,15298,15299,15301,15304,15304,15305,15305,15311,15318,15318,15328,15329,15330,15331,15332,15333,15335,15335,15341,15345,15346,15346,15356,15365,15366,15367,15368,15371,15374,15379,15380,15381,15383,15387,15388,15389,15392,15393,15394,15397,15399,15404,15406,15410,15411,15412,15415,15416,15416,15417,15421,15422,15423,15423,15425,15429,15430,15431,15432,15432,15433,15434,15439,15445,15445,15446,15451,15452,15458,15459,15459,15461,15463,15466,15470,15471,15475,15482,15489,15483,15485,15492,15496,15497,15499,15502,15502,15503,15504,15508,15511,15511,15511,15514,15517,15520,15521,15524,15525,15526,15527,15536,15537,15538,15539,15542,15543,15546,15550,15551,15552,15555,15561,15568,15570,15574,15575,15578,15580,15581,15581,15582,15585,15588,15594,15601,15603,15607,15610,15611,15617,15618,15619,15621,15624,15627,15630,15631,15632,15633,15636,15637,15638,15644,15645,15646,15647,15648,15654,15655,15656,15657,15658,15662,15663,15664,15665,15666,15672,15673,15675,15676,15697,15680,15681,15681,15682,15683,15686,15689,15692,15695,15698,15699,15700,15701,15704,15707,15708,15711,15712,15713,15718,15721,15725,15729,15733,15739,15740,15742,15743,15764,15747,15748,15748,15749,15750,15753,15756,15759,15762,15765,15766,15767,15768,15769,15770,15773,15774,15775,15778,15782,15786,15791,15792,15793,15794,15796,15797,15798,15799,15802,15801,15803,15804,15805,15807,15809,15810,15811,15812,15813,15816,15817,15818,15819,15820,15821,15822,15823,15826,15830,15834,15838,15839,15842,15846,15847,15848,15850,15852,15858,15859,15860,15861,15862,15867,15868,15873,15874,15877,15878,15879,15883,15883,15884,15885,15886,15887,15888,15889,15890,15891,15892,15893,15894,15898,15904,15907,15908,15909,15926,15927,15939,15933,15937,15934,15934,15935,15936,15976,15942,15943,15949,15945,15953,15954,15955,15956,15960,15963,15964,15965,15966,15969,15972,15975,16046,15980,15981,15982,15988,15989,15990,15994,15993,15997,16000,16001,16006,16007,16008,16011,16016,16017,16020,16021,16025,16026,16030,16031,16032,16036,16038,16039,16043,16043,16045,16049,16050,16050,16054,16057,16060,16062,16068,16070,16069,16071,16076,16077,16078,16080,16082,16085,16091,16092,16093,16094,16095,16100,16110,16111,16111,16112,16112,16113,16118,16129,16133,16134,16135,16136,16139,16142,16152,16153,16154,16155,16156,16157,16159,16164,16165,16166,16168,16173,16173,16180,16178,16181,16182,16183,16184,16185,16186,16187,16189,16190,16191,16196,16197,16198,16200,16205,16211,16208,16211,16209,16215,16222,16223,16224,16229,16232,16249,16251,16253,16259,16260,16261,16262,16265,16270,16271,16279,16280,16280,16282,16284,16288,16289,16289,16294,16301,16329,16303,16304,16305,16308,16309,16310,16317,16321,16320,16324,16325,16326,16327,16369,16331,16332,16333,16334,16337,16340,16346,16345,16347,16351,16356,16357,16358,16363,16370,16371,16372,16376,16377,16377,16378,16379,16384,16385,16390,16391,16392,16397,16398,16399,16399,16418,16406,16416,16408,16409,16421,16424,16424,16425,16426,16430,16431,16434,16443,16444,16449,16450,16453,16457,16458,16459,16466,16469,16471,16475,16476,16477,16484,16487,16492,16493,16504,16508,16510,16511,16512,16512,16513,16514,16516,16523,16533,16534,16535,16536,16537,16541,16546,16549,16550,16551,16556,16557,16560,16566,16567,16568,16574,16577,16581,16585,16586,16590,16605,16594,16595,16596,16597,16597,16598,16601,16602,16624,16608,16609,16610,16611,16611,16616,16617,16618,16621,16623,16628,16662,16633,16636,16637,16638,16642,16641,16643,16644,16647,16652,16653,16658,16658,16659,16682,16665,16668,16669,16670,16675,16676,16680,16681,16695,16686,16687,16688,16693,16693,16694,16697,16775,16699,16700,16701,16704,16705,16707,16706,16708,16709,16710,16711,16713,16720,16721,16722,16726,16727,16728,16730,16733,16737,16738,16739,16744,16743,16748,16751,16754,16757,16758,16759,16762,16769,16770,16773,16779,16781,16782,16785,16786,16787,16788,16789,16790,16791,16792,16796,16797,16799,16807,16807,16806,16807,16809,16810,16811,16812,16814,16813,16815,16817,16820,16821,16822,16823,16826,16829,16830,16831,16834,16835,16839,16840,16841,16846,16847,16848,16849,16850,16851,16852,16855,16863,16866,16869,16876,16879,16879,16880,16881,16885,16885,16886,16887,16890,16890,16891,16892,16915,16916,16917,16918,16918,16919,16920,16923,16924,16924,16925,16926,16931,16931,16932,16933,16934,16935,16936,16937,16945,16947,16957,16958,16963,16964,16965,16966,16967,16969,16968,16971,16970,16975,16977,16978,16979,16983,16986,16989,16992,16993,16996,17003,17004,17005,17006,17007,17008,17010,17011,17015,17015,17018,17028,17027,17032,17033,17034,17035,17035,17036,17037,17038,17038,17039,17042,17046,17047,17052,17059,17060,17062,17063,17070,17071,17072,17072,17075,17079,17080,17081,17082,17086,17087,17088,17093,17095,17096,17099,17102,17105,17113,17114,17115,17116,17117,17118,17119,17121,17126,17127,17129,17130,17131,17132,17133,17133,17136,17137,17138,17139,17140,17140,17141,17142,17146,17149,17150,17157,17158,17159,17163,17163,17163,17165,17170,17171,17172,17174,17175,17175,17177,17179,17180,17209,17187,17188,17188,17189,17190,17194,17193,17193,17196,17203,17201,17202,17204,17208,17210,17212,17213,17214,17215,17224,17225,17227,17235,17235,17236,17237,17237,17238,17239,17241,17246,17247,17250,17252,17260,17261,17265,17266,17267,17268,17269,17271,17274,17274,17279,17280,17279,17280,17283,17284,17285,17286,17287,17288,17294,17295,17297,17298,17299,17302,17306,17311,17319,17321,17322,17322,17326,17327,17328,17333,17336,17338,17339,17345,17346,17347,17348,17354,17361,17362,17366,17371,17374,17373,17375,17376,17379,17382,17383,17386,17388,17391,17395,17403,17403,17404,17412,17411,17413,17414,17415,17417,17418,17419,17420,17421,17422,17423,17424,17425,17426,17427,17428,17429,17430,17431,17432,17436,17439,17442,17445,17448,17451,17454,17457,17458,17466,17469,17470,17470,17478,17484,17485,17489,17490,17496,17499,17510,17512,17513,17514,17515,17517,17518,17523,17524,17526,17535,17537,17541,17542,17552,17557,17560,17564,17566,17571,17578,17580,17579,17580,17584,17590,17644,17650,17651,17653,17654,17656,17655,17657,17668,17670,17669,17673,17676,17685,17686,17687,17688,17689,17689,17696,17695,17696,17697,17708,17710,17711,17711,17712,17713,17714,17715,17716,17717,17718,17719,17722,17723,17724,17727,17729,17728,17729,17734,17736,17749,17738,17739,17740,17742,17743,17744,17751,17750,17752,17753,17758,17759,17764,17765,17766,17767,17768,17769,17773,17774,17777,17780,17780,17781,17785,17786,17796,17800,17803,17805,17809,17810,17812,17814,17817,17821,17821,17829,17830,17836,17840,17841,17842,17843,17852,17854,17855,17855,17855,17856,17857,17858,17862,17863,17865,17865,17875,17876,17877,17879,17880,17888,17889,17891,17902,17903,17911,17916,17934,17922,17923,17924,17925,17926,17927,17928,17929,17930,17932,17936,17938,17939,17939,17940,17941,17943,17944,17945,17946,17947,17948,17952,17949,17950,17951,17957,17958,17966,17969,17970,17971,17973,17974,17975,17976,17979,17982,17983,17986,17987,17988,17989,17990,17992,17996,18000,18002,18005,18010,18011,18018,18021,18022,18023,18026,18027,18028,18031,18032,18033,18036,18037,18038,18039,18040,18042,18043,18044,18045,18046,18047,18049,18052,18053,18054,18056,18057,18058,18060,18061,18062,18063,18064,18065,18066,18067,18071,18072,18073,18074,18075,18076,18080,18082,18093,18095,18096,18101,18102,18104,18108,18109,18113,18114,18118,18121,18131,18135,18143,18136,18138,18145,18148,18149,18151,18154,18156,18158,18159,18160,18161,18163,18164,18165,18166,18167,18169,18174,18175,18176,18177,18178,18179,18180,18182,18183,18184,18185,18188,18192,18194,18193,18195,18196,18197,18201,18202,18203,18204,18206,18207,18209,18210,18212,18213,18218,18219,18220,18221,18222,18223,18226,18227,18228,18229,18230,18231,18234,18235,18236,18237,18238,18239,18240,18243,18244,18245,18246,18247,18251,18252,18253,18254,18255,18256,18257,18258,18259,18260,18264,18265,18266,18268,18270,18270,18273,18275,18276,18277,18280,18285,18286,18287,18288,18289,18289,18290,18296,18297,18298,18299,18300,18301,18302,18303,18304,18309,18311,18315,18316,18317,18318,18320,18320,18323,18326,18330,18332,18333,18334,18338,18341,18342,18345,18346,18346,18347,18350,18354,18355,18356,18359,18361,18362,18363,18366,18367,18370,18373,18374,18378,18379,18386,18389,18390,18392,18396,18398,18397,18404,18403,18409,18414,18417,18421,18422,18423,18424,18425,18427,18428,18431,18433,18437,18438,18439,18440,18441,18451,18455,18456,18457,18457,18458,18458,18459,18460,18461,18462,18463,18464,18464,18467,18468,18469,18470,18471,18472,18473,18475,18475,18479,18481,18485,18488,18491,18492,18495,18496,18498,18497,18502,18502,18505,18508,18511,18512,18513,18516,18517,18518,18519,18520,18524,18525,18527,18533,18534,18535,18536,18537,18538,18541,18544,18550,18551,18552,18553,18554,18555,18556,18557,18558,18559,18560,18566,18567,18569,18571,18572,18573,18574,18575,18578,18580,18581,18582,18583,18588,18592,18595,18596,18599,18600,18601,18602,18605,18608,18612,18615,18616,18619,18622,18623,18627,18631,18632,18633,18634,18635,18636,18637,18638,18639,18640,18642,18645,18646,18649,18650,18656,18658,18662,18666,18667,18668,18669,18673,18674,18675,18676,18679,18682,18685,18685,18692,18693,18694,18696,18697,18698,18700,18702,18707,18708,18709,18710,18713,18717,18718,18718,18719,18721,18729,18725,18727,18733,18738,18739,18739,18740,18742,18746,18747,18752,18756,18757,18758,18759,18760,18763,18766,18766,18770,18771,18772,18773,18775,18776,18777,18779,18781,18786,18788,18793,18794,18797,18800,18802,18806,18807,18808,18814,18812,18813,18814,18818,18822,18822,18824,18825,18827,18828,18829,18835,18836,18837,18840,18841,18842,18847,18848,18851,18854,18855,18858,18860,18861,18863,18864,18865,18868,18869,18872,18873,18874,18875,18877,18878,18879,18880,18881,18883,18886,18887,18892,18893,18894,18895,18896,18897,18898,18901,18902,18903,18904,18906,18907,18908,18911,18914,18916,18917,18918,18919,18925,18926,18927,18929,18930,18933,18936,18937,18939,18940,18942,18945,18951,18953,18953,18954,18955,18956,18957,18957,18960,18960,18964,18964,18965,18968,18970,18971,18972,18974,18976,18977,18979,18983,18984,18985,18985,18988,18991,18995,18996,18997,18998,18999,19000,19000,19001,19002,19003,19005,19006,19006,19007,19008,19009,19012,19015,19018,19019,19020,19021,19024,19025,19026,19027,19029,19030,19032,19033,19034,19037,19044,19045,19047,19048,19052,19054,19055,19056,19059,19060,19065,19066,19067,19070,19071,19076,19080,19081,19083,19084,19085,19086,19089,19091,19092,19096,19097,19100,19102,19104,19105,19108,19109,19110,19114,19115,19116,19117,19120,19123,19124,19125,19126,19127,19127,19127,19129,19130,19138,19134,19135,19136,19139,19140,19141,19142,19143,19144,19145,19146,19149,19152,19153,19154,19158,19162,19163,19164,19168,19169,19170,19172,19173,19177,19181,19180,19183,19184,19185,19186,19189,19190,19191,19192,19193,19195,19196,19197,19199,19200,19203,19207,19208,19212,19213,19220,19256,19294,19295,19299,19304,19309,19314,19320,19326,19327,19328,19334,19339,19343,19344,19345,19346,19347,19348,19348,19350,19351,19352,19353,19354,19355,19356,19357,19358,19359,19360,19361,19362,19363,19364,19365,19366,19367,19368,19369,19370,19371,19372,19389,19390,19397,19392,19393,19394,19396,19399,19400,19401,19402,19404,19404,19405,19405,19406,19406,19408,19411,19412,19413,19414,19415,19418,19422,19423,19426,19432,19435,19438,19439,19443,19445,19446,19447,19451,19454,19455,19456,19457,19458,19459,19460,19461,19462,19463,19464,19465,19466,19469,19470,19471,19472,19473,19474,19475,19476,19477,19478,19479,19480,19481,19482,19483,19484,19485,19486,19488,19489]}