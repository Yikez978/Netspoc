{"start":{"25":{"BEGIN":[{"time":null,"statement":9,"condition":null,"branch":null,"pod":null,"subroutine":3}]},"1909":{"_stringify_lol":[{"subroutine":29,"pod":4,"branch":207,"statement":783,"condition":54,"time":null}]},"24":{"BEGIN":[{"subroutine":2,"branch":null,"pod":null,"statement":6,"condition":null,"time":null}]},"22":{"BEGIN":[{"time":null,"statement":null,"condition":null,"branch":null,"pod":null,"subroutine":null}]},"434":{"_gen_errata":[{"subroutine":10,"branch":43,"pod":2,"condition":14,"statement":192,"time":null}]},"35":{"parse_line":[{"subroutine":6,"pod":null,"branch":1,"statement":17,"condition":null,"time":null}]},"1208":{"_ponder_back":[{"condition":35,"statement":494,"time":null,"subroutine":18,"pod":2,"branch":133}]},"1899":{"text_content_of_treelet":[{"subroutine":27,"branch":207,"pod":2,"condition":54,"statement":779,"time":null}]},"41":{"parse_lines":[{"pod":1,"branch":1,"subroutine":7,"time":null,"condition":null,"statement":18}]},"1128":{"_ponder_pod":[{"subroutine":16,"branch":122,"pod":2,"condition":34,"statement":459,"time":null}]},"1923":{"_dump_curr_open":[{"subroutine":30,"branch":208,"pod":4,"condition":56,"statement":789,"time":null}]},"1090":{"_ponder_doc_end":[{"time":null,"condition":34,"statement":439,"branch":119,"pod":2,"subroutine":15}]},"23":{"BEGIN":[{"branch":null,"pod":null,"subroutine":1,"time":null,"statement":3,"condition":null}]},"1691":{"_treelet_from_formatting_codes":[{"time":null,"condition":50,"statement":686,"pod":2,"branch":180,"subroutine":26}]},"1410":{"_ponder_Plain":[{"subroutine":20,"pod":2,"branch":156,"condition":39,"statement":570,"time":null}]},"1549":{"_verbatim_format":[{"time":null,"statement":637,"condition":48,"branch":169,"pod":2,"subroutine":25}]},"1478":{"_ponder_Data":[{"pod":2,"branch":162,"subroutine":22,"time":null,"condition":47,"statement":602}]},"898":{"_ponder_for":[{"pod":2,"branch":100,"subroutine":12,"time":null,"statement":347,"condition":26}]},"1903":{"stringify_lol":[{"time":null,"statement":780,"condition":54,"pod":3,"branch":207,"subroutine":28}]},"-1":{"__COVER__":[{"subroutine":33,"pod":6,"branch":217,"condition":60,"statement":815,"time":null}]},"1150":{"_ponder_over":[{"subroutine":17,"branch":125,"pod":2,"statement":466,"condition":34,"time":null}]},"1958":{"pretty":[{"pod":4,"branch":210,"subroutine":31,"time":null,"statement":793,"condition":57}]},"942":{"_ponder_begin":[{"subroutine":13,"branch":103,"pod":2,"statement":363,"condition":26,"time":null}]},"2012":{"reinit":[{"subroutine":32,"pod":5,"branch":217,"condition":60,"statement":812,"time":null}]},"511":{"_ponder_paragraph_buffer":[{"time":null,"condition":15,"statement":205,"pod":2,"branch":44,"subroutine":11}]},"29":{"BEGIN":[{"time":null,"statement":12,"condition":null,"pod":null,"branch":null,"subroutine":4}]},"1183":{"BEGIN":[{"subroutine":5,"branch":1,"pod":null,"condition":null,"statement":14,"time":null}]},"1427":{"_ponder_Verbatim":[{"subroutine":21,"pod":2,"branch":157,"statement":576,"condition":42,"time":null}]},"1513":{"_closers_for_all_curr_open":[{"time":null,"statement":618,"condition":48,"pod":2,"branch":164,"subroutine":24}]},"1491":{"_traverse_treelet_bit":[{"subroutine":23,"branch":163,"pod":2,"statement":607,"condition":47,"time":null}]},"392":{"_handle_encoding_second_level":[{"condition":14,"statement":178,"time":null,"subroutine":9,"branch":40,"pod":2}]},"1239":{"_ponder_item":[{"statement":505,"condition":37,"time":null,"subroutine":19,"branch":135,"pod":2}]},"1020":{"_ponder_end":[{"statement":410,"condition":31,"time":null,"subroutine":14,"pod":2,"branch":113}]},"288":{"_handle_encoding_line":[{"subroutine":8,"branch":30,"pod":2,"condition":13,"statement":124,"time":null}]}},"branch":[[30,{"text":"unless defined &DEBUG"}],[66,{"text":"if ($$self{'source_dead'})"}],[71,{"text":"unless (defined $source_line)"}],[91,{"text":"if (($line = $source_line) =~ s/^\\xEF\\xBB\\xBF//s) { }"}],[91,{"text":"elsif ($line =~ s/^\\xFE\\xFF//s) { }"}],[91,{"text":"elsif ($line =~ s/^\\xFF\\xFE//s) { }"}],[83,{"text":"if ($$self{'line_count'}++) { }"}],[132,{"text":"$line =~ /^[\\x00-\\x7f]*[\\xC0-\\xFD][\\x80-\\xBF]/ ? :"}],[134,{"text":"if $$self{'_transcoder'}"}],[128,{"text":"if (not $$self{'parse_characters'} || $$self{'encoding'} and $$self{'in_pod'} || $line =~ /^=/s and $line =~ /[^\\x00-\\x7f]/)"}],[148,{"text":"if ($1 eq 'cut') { }"}],[168,{"text":"if $code_handler"}],[176,{"text":"if ($line =~ /^#\\s*line\\s+(\\d+)\\s*(?:\\s\"([^\"]+)\")?\\s*$/)"}],[147,{"text":"if ($line =~ /^=([a-zA-Z]+)/s) { }"}],[146,{"text":"unless ($$self{'in_pod'})"}],[192,{"text":"if $$self{'_transcoder'}"}],[196,{"text":"if $self->parse_characters"}],[195,{"text":"if ($line =~ /^=encoding\\s+\\S+\\s*$/s)"}],[207,{"text":"if $cut_handler"}],[215,{"text":"if $wl_handler"}],[214,{"text":"if (defined $1 and $1 =~ /[^\\S\\r\\n]/)"}],[219,{"text":"if (not $$self{'start_of_pod_block'} and @$paras and $$paras[-1][0] eq '~Verbatim')"}],[224,{"text":"unless ($$self{'start_of_pod_block'} or $$self{'last_was_blank'})"}],[248,{"text":"if (not $$self{'start_of_pod_block'} and @$paras and $$paras[-1][0] eq '~Verbatim') { }"}],[232,{"text":"if ($line =~ /^(=[a-zA-Z][a-zA-Z0-9]*)(?:\\s+|$)(.*)/s) { }"}],[232,{"text":"elsif ($line =~ /^\\s/s) { }"}],[269,{"text":"if (@$paras) { }"}],[200,{"text":"if ($line =~ /^=cut/s) { }"}],[200,{"text":"elsif ($line =~ /^(\\s*)$/s) { }"}],[200,{"text":"elsif ($$self{'last_was_blank'}) { }"}],[290,{"text":"if $self->parse_characters"}],[294,{"text":"unless $line =~ /^=encoding\\s+(\\S+)\\s*$/s"}],[314,{"text":"if ($norm_current eq $norm_e) { }"}],[336,{"text":"if $$self{'_transcoder'}"}],[344,{"text":"if $@"}],[364,{"text":"unless $n eq $norm"}],[307,{"text":"if ($$self{'encoding'}) { }"}],[307,{"text":"elsif (do {\n\t'???';\n$$self{'encoding'} = $e;\n1\n} and $e eq 'HACKRAW') { }"}],[307,{"text":"elsif ('Pod::Simple::Transcode'->encoding_is_available($e)) { }"}],[378,{"text":"if (defined $$self{'_processed_encoding'})"}],[406,{"text":"if (not $$self{'encoding_command_statuses'}) { }"}],[406,{"text":"elsif ($$self{'encoding_command_statuses'}[-1]) { }"}],[400,{"text":"if (defined $$self{'_processed_encoding'}) { }"}],[438,{"text":"unless $$self{'errata'} and keys %{$$self{'errata'};}"}],[513,{"text":"unless @{$paras = $$self{'paras'};}"}],[537,{"text":"$starting_contentless ? :"}],[521,{"text":"unless ($$self{'doc_has_started'})"}],[548,{"text":"if @$paras == 1 and $$paras[0][0] eq '=over' || $$paras[0][0] eq '~Verbatim' || $$paras[0][0] eq '=item'"}],[568,{"text":"if $self->_ponder_for($para, $curr_open, $paras)"}],[571,{"text":"if $self->_ponder_begin($para, $curr_open, $paras)"}],[574,{"text":"if $self->_ponder_end($para, $curr_open, $paras)"}],[577,{"text":"if $self->_ponder_doc_end($para, $curr_open, $paras)"}],[567,{"text":"if ($para_type eq '=for') { }"}],[567,{"text":"elsif ($para_type eq '=begin') { }"}],[567,{"text":"elsif ($para_type eq '=end') { }"}],[567,{"text":"elsif ($para_type eq '~end') { }"}],[583,{"text":"if (grep $$_[1]{'~ignore'}, @$curr_open)"}],[595,{"text":"if $self->_ponder_over($para, $curr_open, $paras)"}],[598,{"text":"if $self->_ponder_back($para, $curr_open, $paras)"}],[613,{"text":"if ($para_type =~ /^=head\\d$/s and not $$self{'accept_heads_anywhere'} and @$curr_open and $$curr_open[-1][0] eq '=over')"}],[631,{"text":"unless (@$curr_open and $over = (grep {$$_[0] eq '=over';} @$curr_open)[-1])"}],[653,{"text":"unless ($$curr_open[-1][1]{'~bitched_about'})"}],[672,{"text":"if ($item_type eq 'text') { }"}],[672,{"text":"elsif ($item_type eq 'number' or $item_type eq 'bullet') { }"}],[697,{"text":"if ($item_type eq 'bullet') { }"}],[697,{"text":"elsif ($item_type eq 'text') { }"}],[697,{"text":"elsif ($item_type ne 'number') { }"}],[697,{"text":"elsif ($expected_value == $$para[1]{'number'}) { }"}],[735,{"text":"if ($$paras[0][0] eq '~Para') { }"}],[733,{"text":"if (@$para == 2)"}],[753,{"text":"if ($$para[1]{'~_freaky_para_hack'})"}],[750,{"text":"if ($item_type eq 'bullet') { }"}],[750,{"text":"elsif ($item_type eq 'number') { }"}],[750,{"text":"elsif ($item_type eq 'text') { }"}],[781,{"text":"if ($$paras[0][0] eq '~Para') { }"}],[779,{"text":"if (@$para == 2)"}],[647,{"text":"if (not $over_type) { }"}],[647,{"text":"elsif ($over_type eq 'block') { }"}],[647,{"text":"elsif ($over_type eq 'text') { }"}],[647,{"text":"elsif ($over_type eq 'number') { }"}],[647,{"text":"elsif ($over_type eq 'bullet') { }"}],[807,{"text":"unless $self->keep_encoding_directive"}],[628,{"text":"if ($para_type eq '=item') { }"}],[628,{"text":"elsif ($para_type eq '=extend') { }"}],[628,{"text":"elsif ($para_type eq '=encoding') { }"}],[628,{"text":"elsif ($para_type eq '~Verbatim') { }"}],[628,{"text":"elsif ($para_type eq '~Para') { }"}],[628,{"text":"elsif ($para_type eq 'Data') { }"}],[628,{"text":"elsif ($para_type =~ s/^=//s and defined($para_type = $$self{'accept_directives'}{$para_type})) { }"}],[852,{"text":"if ($para_type eq 'Data') { }"}],[844,{"text":"if (not @fors) { }"}],[844,{"text":"elsif ($fors[-1][1]{'~resolve'}) { }"}],[837,{"text":"if (not @$curr_open) { }"}],[836,{"text":"if ($para_type =~ s/^\\?//s)"}],[867,{"text":"if ($para_type eq 'Plain') { }"}],[867,{"text":"elsif ($para_type eq 'Verbatim') { }"}],[867,{"text":"elsif ($para_type eq 'Data') { }"}],[591,{"text":"if ($para_type eq '=pod') { }"}],[591,{"text":"elsif ($para_type eq '=over') { }"}],[591,{"text":"elsif ($para_type eq '=back') { }"}],[903,{"text":"if (grep $$_[1]{'~ignore'}, @$curr_open)"}],[909,{"text":"if ($$para[$i] =~ s/^\\s*(\\S+)\\s*//s)"}],[914,{"text":"unless (defined $target)"}],[946,{"text":"unless (length $content)"}],[956,{"text":"if $title"}],[962,{"text":"if $content =~ s/^!//s"}],[964,{"text":"if $content =~ s/^://s"}],[968,{"text":"$neg ? :"}],[974,{"text":"unless $$self{'accept_targets'}{$target_name}"}],[978,{"text":"if $$self{'accept_targets'}{$target_name} eq 'force_resolve'"}],[986,{"text":"if ($dont_ignore) { }"}],[985,{"text":"if ($neg)"}],[1009,{"text":"if (not $dont_ignore or scalar grep($$_[1]{'~ignore'}, @$curr_open)) { }"}],[1027,{"text":"@$curr_open && $$curr_open[-1][0] eq '=for' ? :"}],[1026,{"text":"unless (length $content)"}],[1039,{"text":"unless ($content =~ /^\\S+$/)"}],[1049,{"text":"unless (@$curr_open and $$curr_open[-1][0] eq '=for')"}],[1059,{"text":"unless ($content eq $$curr_open[-1][1]{'target'})"}],[1072,{"text":"if (grep $$_[1]{'~ignore'}, @$curr_open) { }"}],[1091,{"text":"if (@$curr_open) { }"}],[1113,{"text":"if (@extras)"}],[1110,{"text":"unless ($$self{'~tried_gen_errata'})"}],[1129,{"text":"if @$para > 3"}],[1138,{"text":"$line eq '' ? :"}],[1136,{"text":"if (my $pod_handler = $$self{'pod_handler'})"}],[1151,{"text":"unless @$paras"}],[1159,{"text":"if ($$self{'parse_empty_lists'}) { }"}],[1154,{"text":"if ($$paras[0][0] eq '=item') { }"}],[1154,{"text":"elsif ($$paras[0][0] eq '=back') { }"}],[1154,{"text":"elsif ($$paras[0][0] eq '~end') { }"}],[1185,{"text":"if ($1 == 0)"}],[1180,{"text":"if ($content =~ /^\\s*$/s) { }"}],[1180,{"text":"elsif ($content =~ /^\\s*((?:\\d*\\.)?\\d+)\\s*$/s) { }"}],[1212,{"text":"if ($content =~ /\\S/)"}],[1219,{"text":"if (@$curr_open and $$curr_open[-1][0] eq '=over') { }"}],[1241,{"text":"unless (@$curr_open and $over = (grep {$$_[0] eq '=over';} @$curr_open)[-1])"}],[1263,{"text":"unless ($$curr_open[-1][1]{'~bitched_about'})"}],[1282,{"text":"if ($item_type eq 'text') { }"}],[1282,{"text":"elsif ($item_type eq 'number' or $item_type eq 'bullet') { }"}],[1307,{"text":"if ($item_type eq 'bullet') { }"}],[1307,{"text":"elsif ($item_type eq 'text') { }"}],[1307,{"text":"elsif ($item_type ne 'number') { }"}],[1307,{"text":"elsif ($expected_value == $$para[1]{'number'}) { }"}],[1345,{"text":"if ($$paras[0][0] eq '~Para') { }"}],[1343,{"text":"if (@$para == 2)"}],[1363,{"text":"if ($$para[1]{'~_freaky_para_hack'})"}],[1360,{"text":"if ($item_type eq 'bullet') { }"}],[1360,{"text":"elsif ($item_type eq 'number') { }"}],[1360,{"text":"elsif ($item_type eq 'text') { }"}],[1391,{"text":"if ($$paras[0][0] eq '~Para') { }"}],[1389,{"text":"if (@$para == 2)"}],[1257,{"text":"if (not $over_type) { }"}],[1257,{"text":"elsif ($over_type eq 'block') { }"}],[1257,{"text":"elsif ($over_type eq 'text') { }"}],[1257,{"text":"elsif ($over_type eq 'number') { }"}],[1257,{"text":"elsif ($over_type eq 'bullet') { }"}],[1412,{"text":"unless (@$para == 2 or @$para == 3 and $$para[2] eq '' or $$para[1]{'~cooked'})"}],[1433,{"text":"if ($indent and ref $indent eq 'CODE')"}],[1442,{"text":"if $indent and not $$self{'accept_codes'} && $$self{'accept_codes'}{'VerbatimFormatted'}"}],[1471,{"text":"if @$para > 3"}],[1457,{"text":"if ($$self{'accept_codes'} and $$self{'accept_codes'}{'VerbatimFormatted'}) { }"}],[1457,{"text":"elsif ($$self{'codes_in_verbatim'}) { }"}],[1481,{"text":"if @$para > 3"}],[1498,{"text":"if (ref $x) { }"}],[1515,{"text":"unless $$self{'curr_open'}"}],[1519,{"text":"if ($copy[0] eq '=for') { }"}],[1519,{"text":"elsif ($copy[0] eq '=over') { }"}],[1534,{"text":"unless defined $copy[-1]"}],[1532,{"text":"unless (@copy > 2)"}],[1580,{"text":"if ($$p[$i - 1] =~ m[^#:[ \\^\\/\\%]*\\n?$]s) { }"}],[1576,{"text":"if ($$p[$i] =~ m[^#:([ \\^\\/\\%]*)\\n?$]s) { }"}],[1602,{"text":"unless (length $formatting and $$p[$i - 1] =~ /\\S/)"}],[1608,{"text":"if (length $formatting >= length $$p[$i - 1]) { }"}],[1629,{"text":"$5 ? :"}],[1629,{"text":"$4 ? :"}],[1629,{"text":"$3 ? :"}],[1623,{"text":"if ($2) { }"}],[1655,{"text":"unless (ref $$p[$i] or ref $$p[$i + 1])"}],[1666,{"text":"if ($$p[$i] =~ s/\\n$//s) { }"}],[1665,{"text":"unless (ref $$p[$i])"}],[1695,{"text":"unless ($preserve_space or $$self{'preserve_whitespace'})"}],[1771,{"text":"if (defined $2) { }"}],[1782,{"text":"$inL ? :"}],[1785,{"text":"if $inL"}],[1781,{"text":"if ('L' eq substr($1, 0, 1)) { }"}],[1791,{"text":"if (not @stack) { }"}],[1791,{"text":"elsif (not $stack[-1]) { }"}],[1791,{"text":"elsif ($stack[-1] == length $4) { }"}],[1791,{"text":"elsif ($stack[-1] < length $4) { }"}],[1816,{"text":"if 2 == @{$lineage[-1];}"}],[1824,{"text":"if (ref $lineage[-1][-1] and $lineage[-1][-1][0] eq 'L')"}],[1822,{"text":"unless (@stack)"}],[1828,{"text":"if $inL"}],[1837,{"text":"if (length $5 == 2) { }"}],[1837,{"text":"elsif (2 == @{$lineage[-1];}) { }"}],[1833,{"text":"if (@stack and not $stack[-1]) { }"}],[1852,{"text":"if (ref $lineage[-1][-1] and $lineage[-1][-1][0] eq 'L')"}],[1850,{"text":"unless (@stack)"}],[1856,{"text":"if $inL"}],[1861,{"text":"if $inL"}],[1770,{"text":"if (defined $1) { }"}],[1770,{"text":"elsif (defined $4) { }"}],[1770,{"text":"elsif (defined $5) { }"}],[1770,{"text":"elsif (defined $6) { }"}],[1875,{"text":"if 2 == @{$lineage[-1];}"}],[1880,{"text":"if ($ender_length) { }"}],[1872,{"text":"if (@stack)"}],[1911,{"text":"if (ref($$lol[$i] || '') and UNIVERSAL::isa($$lol[$i], 'ARRAY')) { }"}],[1925,{"text":"unless @$curr_open"}],[1928,{"text":"$$_[0] eq '=for' ? :"}],[1990,{"text":"unless $pretty_form{$1}"}],[1964,{"text":"if (not defined $_) { }"}],[1964,{"text":"elsif (ref $_ eq 'ARRAY' or ref $_ eq 'Pod::Simple::LinkSection') { }"}],[1964,{"text":"elsif (ref $_ eq 'SCALAR') { }"}],[1964,{"text":"elsif (ref $_ eq 'HASH') { }"}],[1964,{"text":"elsif (not length $_) { }"}],[1964,{"text":"elsif ($_ eq '0' or /^-?(?:[123456789]\\d*|0)(?:\\.\\d+)?$/s and $_ ne '-0') { }"}]],"file":"/usr/local/lib/perl5/5.20.1/Pod/Simple/BlackBox.pm","condition":[[46,{"type":"or_2","left":"$$self{'line_count'}","right":"0","op":"||="}],[57,{"op":"||=","right":"[]","left":"$$self{'paras'}","type":"or_2"}],[62,{"type":"or_2","left":"$$self{'pod_para_count'}","right":"0","op":"||="}],[128,{"op":"||","right":"$$self{'encoding'}","type":"or_3","left":"$$self{'parse_characters'}"}],[128,{"right":"$line =~ /^=/s","op":"||","type":"or_3","left":"$$self{'in_pod'}"}],[128,{"right":"$$self{'in_pod'} || $line =~ /^=/s","op":"and","type":"and_3","left":"not $$self{'parse_characters'} || $$self{'encoding'}"}],[128,{"left":"not $$self{'parse_characters'} || $$self{'encoding'} and $$self{'in_pod'} || $line =~ /^=/s","type":"and_3","op":"and","right":"$line =~ /[^\\x00-\\x7f]/"}],[214,{"left":"defined $1","type":"and_3","right":"$1 =~ /[^\\S\\r\\n]/","op":"and"}],[219,{"op":"and","right":"@$paras","left":"not $$self{'start_of_pod_block'}","type":"and_3"}],[219,{"right":"$$paras[-1][0] eq '~Verbatim'","op":"and","left":"not $$self{'start_of_pod_block'} and @$paras","type":"and_3"}],[224,{"op":"or","right":"$$self{'last_was_blank'}","left":"$$self{'start_of_pod_block'}","type":"or_3"}],[248,{"type":"and_3","left":"not $$self{'start_of_pod_block'}","right":"@$paras","op":"and"}],[248,{"right":"$$paras[-1][0] eq '~Verbatim'","op":"and","left":"not $$self{'start_of_pod_block'} and @$paras","type":"and_3"}],[307,{"right":"$e eq 'HACKRAW'","op":"and","type":"and_3","left":"do {\n\t'???';\n$$self{'encoding'} = $e;\n1\n}"}],[438,{"left":"$$self{'errata'}","type":"and_3","op":"and","right":"keys %{$$self{'errata'};}"}],[514,{"left":"$$self{'curr_open'}","type":"or_2","right":"[]","op":"||="}],[525,{"type":"and_3","left":"!@$curr_open && @$paras","right":"!grep(($$_[0] ne '~end'), @$paras)","op":"&&"}],[548,{"op":"||","right":"$$paras[0][0] eq '=item'","left":"$$paras[0][0] eq '=over' || $$paras[0][0] eq '~Verbatim'","type":"or_3"}],[548,{"left":"@$paras == 1","type":"and_3","right":"$$paras[0][0] eq '=over' || $$paras[0][0] eq '~Verbatim' || $$paras[0][0] eq '=item'","op":"and"}],[613,{"type":"and_3","left":"$para_type =~ /^=head\\d$/s","right":"not $$self{'accept_heads_anywhere'}","op":"and"}],[613,{"op":"and","right":"@$curr_open","left":"$para_type =~ /^=head\\d$/s and not $$self{'accept_heads_anywhere'}","type":"and_3"}],[613,{"type":"and_3","left":"$para_type =~ /^=head\\d$/s and not $$self{'accept_heads_anywhere'} and @$curr_open","op":"and","right":"$$curr_open[-1][0] eq '=over'"}],[631,{"left":"@$curr_open","type":"and_3","right":"$over = (grep {$$_[0] eq '=over';} @$curr_open)[-1]","op":"and"}],[672,{"op":"or","right":"$item_type eq 'bullet'","left":"$item_type eq 'number'","type":"or_3"}],[628,{"right":"defined($para_type = $$self{'accept_directives'}{$para_type})","op":"and","left":"$para_type =~ s/^=//s","type":"and_3"}],[884,{"right":"1","op":"||=","left":"$$self{'content_seen'}","type":"or_2"}],[998,{"left":"$$para[1]{'~really'}","type":"or_2","right":"'=begin'","op":"||="}],[999,{"left":"!$dont_ignore","type":"or_2","right":"0","op":"||"}],[1000,{"op":"||","right":"0","type":"or_2","left":"$to_resolve"}],[1009,{"left":"not $dont_ignore","type":"or_2","right":"scalar grep($$_[1]{'~ignore'}, @$curr_open)","op":"or"}],[1012,{"op":"||=","right":"1","type":"or_2","left":"$$self{'content_seen'}"}],[1027,{"left":"@$curr_open","type":"and_3","op":"&&","right":"$$curr_open[-1][0] eq '=for'"}],[1049,{"op":"and","right":"$$curr_open[-1][0] eq '=for'","type":"and_3","left":"@$curr_open"}],[1080,{"type":"or_2","left":"$$self{'content_seen'}","op":"||=","right":"1"}],[1201,{"right":"1","op":"||=","left":"$$self{'content_seen'}","type":"or_2"}],[1219,{"left":"@$curr_open","type":"and_3","right":"$$curr_open[-1][0] eq '=over'","op":"and"}],[1223,{"type":"or_2","left":"$$self{'content_seen'}","op":"||=","right":"1"}],[1241,{"type":"and_3","left":"@$curr_open","right":"$over = (grep {$$_[0] eq '=over';} @$curr_open)[-1]","op":"and"}],[1282,{"type":"or_3","left":"$item_type eq 'number'","op":"or","right":"$item_type eq 'bullet'"}],[1412,{"type":"and_3","left":"@$para == 3","right":"$$para[2] eq ''","op":"and"}],[1412,{"left":"@$para == 2","type":"or_3","op":"or","right":"@$para == 3 and $$para[2] eq ''"}],[1412,{"right":"$$para[1]{'~cooked'}","op":"or","type":"or_3","left":"@$para == 2 or @$para == 3 and $$para[2] eq ''"}],[1433,{"op":"and","right":"ref $indent eq 'CODE'","type":"and_3","left":"$indent"}],[1442,{"right":"$$self{'accept_codes'}{'VerbatimFormatted'}","op":"&&","type":"and_3","left":"$$self{'accept_codes'}"}],[1442,{"right":"not $$self{'accept_codes'} && $$self{'accept_codes'}{'VerbatimFormatted'}","op":"and","type":"and_3","left":"$indent"}],[1457,{"left":"$$self{'accept_codes'}","type":"and_3","right":"$$self{'accept_codes'}{'VerbatimFormatted'}","op":"and"}],[1460,{"type":"and_3","left":"@$para > 3","op":"and","right":"not $$para[-1] =~ /\\S/"}],[1501,{"type":"and_3","left":"@_","right":"not ref $_[0]","op":"and"}],[1602,{"op":"and","right":"$$p[$i - 1] =~ /\\S/","left":"length $formatting","type":"and_3"}],[1655,{"left":"ref $$p[$i]","type":"or_3","right":"ref $$p[$i + 1]","op":"or"}],[1695,{"left":"$preserve_space","type":"or_3","right":"$$self{'preserve_whitespace'}","op":"or"}],[1824,{"left":"ref $lineage[-1][-1]","type":"and_3","right":"$lineage[-1][-1][0] eq 'L'","op":"and"}],[1833,{"left":"@stack","type":"and_3","op":"and","right":"not $stack[-1]"}],[1852,{"left":"ref $lineage[-1][-1]","type":"and_3","op":"and","right":"$lineage[-1][-1][0] eq 'L'"}],[1911,{"left":"$$lol[$i]","type":"or_2","right":"''","op":"||"}],[1911,{"op":"and","right":"UNIVERSAL::isa($$lol[$i], 'ARRAY')","type":"and_3","left":"ref($$lol[$i] || '')"}],[1928,{"right":"'=over'","op":"||","left":"$$_[1]{'~really'}","type":"or_2"}],[1964,{"right":"ref $_ eq 'Pod::Simple::LinkSection'","op":"or","type":"or_3","left":"ref $_ eq 'ARRAY'"}],[1964,{"type":"and_3","left":"/^-?(?:[123456789]\\d*|0)(?:\\.\\d+)?$/s","right":"$_ ne '-0'","op":"and"}],[1964,{"right":"/^-?(?:[123456789]\\d*|0)(?:\\.\\d+)?$/s and $_ ne '-0'","op":"or","type":"or_3","left":"$_ eq '0'"}]],"digest":"7ace4c0d8266750af8ef8ccc95683c4c","subroutine":[[22,"BEGIN"],[23,"BEGIN"],[24,"BEGIN"],[25,"BEGIN"],[29,"BEGIN"],[1183,"BEGIN"],[35,"parse_line"],[41,"parse_lines"],[288,"_handle_encoding_line"],[392,"_handle_encoding_second_level"],[434,"_gen_errata"],[511,"_ponder_paragraph_buffer"],[898,"_ponder_for"],[942,"_ponder_begin"],[1020,"_ponder_end"],[1090,"_ponder_doc_end"],[1128,"_ponder_pod"],[1150,"_ponder_over"],[1208,"_ponder_back"],[1239,"_ponder_item"],[1410,"_ponder_Plain"],[1427,"_ponder_Verbatim"],[1478,"_ponder_Data"],[1491,"_traverse_treelet_bit"],[1513,"_closers_for_all_curr_open"],[1549,"_verbatim_format"],[1691,"_treelet_from_formatting_codes"],[1899,"text_content_of_treelet"],[1903,"stringify_lol"],[1909,"_stringify_lol"],[1923,"_dump_curr_open"],[1958,"pretty"],[2012,"reinit"]],"pod":[[35,"parse_line"],[41,"parse_lines"],[1899,"text_content_of_treelet"],[1903,"stringify_lol"],[1958,"pretty"],[2012,"reinit"]],"statement":[22,22,22,23,23,23,24,24,24,25,25,25,29,30,1183,1183,1183,35,41,43,44,45,46,48,50,53,57,62,64,65,66,67,68,71,72,74,75,77,78,79,83,84,89,91,92,93,94,95,98,99,103,104,105,110,111,115,116,117,122,123,128,132,133,134,136,138,144,146,147,148,149,160,162,167,168,176,180,181,184,192,195,196,197,200,202,203,205,207,214,215,219,220,221,221,224,225,228,232,234,238,240,243,244,248,249,250,250,252,253,255,256,259,260,262,263,265,269,270,271,271,274,276,281,282,288,290,294,295,297,298,299,299,301,305,307,308,309,310,311,312,314,315,317,320,321,326,327,328,332,336,338,339,340,341,342,344,347,350,353,355,358,359,360,361,362,363,364,365,366,368,369,375,377,377,378,380,382,384,392,393,394,395,396,398,400,404,406,407,409,415,420,425,434,438,438,440,442,442,442,450,443,457,468,472,474,511,512,513,513,514,516,518,521,522,524,525,532,537,546,547,548,561,562,564,567,568,571,574,577,583,584,586,591,592,595,598,608,610,613,618,619,623,624,628,630,631,631,633,637,641,645,647,649,653,654,655,663,664,665,668,670,672,675,680,681,685,691,693,695,697,699,700,704,709,710,717,720,723,725,730,733,735,736,737,737,739,740,746,748,750,753,754,755,759,763,765,769,776,779,781,782,783,783,785,786,791,795,796,802,803,806,807,808,810,811,813,814,816,817,821,825,827,833,836,837,838,840,841,844,845,852,853,854,855,857,860,861,867,868,870,872,874,879,881,884,885,889,898,901,903,904,905,908,909,910,911,914,915,919,921,924,926,938,942,943,944,945,946,947,951,952,955,956,957,958,960,961,962,963,964,966,968,972,974,976,978,980,981,982,985,986,987,988,989,991,992,993,997,998,999,1000,1002,1004,1006,1008,1009,1010,1012,1013,1016,1020,1021,1022,1023,1024,1026,1027,1035,1036,1039,1040,1045,1046,1049,1050,1055,1056,1059,1060,1067,1068,1072,1073,1077,1080,1081,1083,1084,1086,1090,1091,1092,1095,1096,1098,1099,1103,1106,1110,1111,1112,1113,1114,1115,1116,1120,1121,1123,1124,1128,1129,1136,1137,1138,1139,1146,1150,1151,1152,1154,1155,1159,1160,1162,1163,1166,1170,1172,1174,1175,1178,1179,1180,1181,1184,1185,1186,1190,1193,1197,1199,1201,1202,1204,1208,1211,1212,1213,1219,1220,1223,1224,1228,1230,1234,1239,1240,1241,1241,1243,1247,1251,1255,1257,1259,1263,1264,1265,1273,1274,1275,1278,1280,1282,1285,1290,1291,1295,1301,1303,1305,1307,1309,1310,1314,1319,1320,1327,1330,1333,1335,1340,1343,1345,1346,1347,1347,1349,1350,1356,1358,1360,1363,1364,1365,1369,1373,1375,1379,1386,1389,1391,1392,1393,1393,1395,1396,1401,1404,1406,1410,1411,1412,1416,1415,1423,1427,1428,1430,1432,1433,1434,1434,1434,1435,1436,1436,1439,1440,1442,1444,1448,1457,1460,1460,1462,1465,1464,1469,1471,1472,1474,1478,1479,1480,1481,1482,1491,1493,1494,1496,1497,1498,1499,1501,1502,1506,1507,1513,1514,1515,1515,1516,1517,1517,1519,1520,1522,1527,1529,1532,1533,1534,1538,1540,1541,1543,1549,1551,1553,1554,1555,1561,1569,1575,1576,1577,1580,1581,1582,1584,1587,1588,1598,1600,1601,1602,1603,1604,1605,1608,1609,1611,1616,1619,1620,1623,1625,1629,1640,1642,1644,1647,1651,1654,1655,1656,1657,1658,1663,1665,1666,1667,1669,1672,1676,1691,1693,1695,1696,1697,1698,1704,1705,1706,1709,1711,1735,1769,1770,1771,1772,1773,1776,1777,1779,1780,1780,1781,1782,1783,1785,1789,1791,1793,1794,1794,1795,1798,1799,1799,1800,1803,1806,1807,1810,1811,1811,1812,1816,1816,1816,1819,1820,1822,1823,1824,1825,1828,1831,1833,1835,1837,1838,1838,1837,1840,1840,1843,1844,1846,1847,1847,1850,1851,1852,1853,1856,1859,1860,1860,1861,1867,1868,1872,1873,1874,1875,1875,1875,1878,1879,1880,1881,1882,1884,1887,1888,1893,1899,1903,1904,1905,1909,1910,1911,1912,1914,1917,1923,1925,1927,1928,1958,1959,1963,1964,1965,1967,1968,1970,1971,1973,1974,1977,1978,1985,1987,1988,1990,1997,2001,2012,2013,2018]}