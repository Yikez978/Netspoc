{"digest":"0785a4d954caa4f6af2108b713821d29","condition":[[114,{"op":"||=","right":"caller","type":"or_3","left":"$args{'Class'}"}],[115,{"right":"'maketext'","op":"||=","type":"or_2","left":"$args{'Style'}"}],[116,{"left":"$args{'Export'}","type":"or_2","op":"||=","right":"'loc'"}],[117,{"op":"||=","right":"'I18N'","left":"$args{'Subclass'}","type":"or_2"}],[120,{"op":"||=","right":"$class->default_loc(%args)","left":"$loc","type":"or_3"}],[124,{"right":"sub {\n\t1;\n}\n","op":"||","left":"$loc_lang","type":"or_2"}],[141,{"right":"$class->auto_path($args{'Class'})","op":"||","left":"$args{'Path'}","type":"or_3"}],[143,{"right":"0","op":"||","left":"$args{'Decode'}","type":"or_2"}],[144,{"left":"$args{'Encoding'}","type":"or_2","op":"||","right":"undef"}],[249,{"type":"or_3","left":"$2","op":"||","right":"shift()"}],[250,{"op":"||","right":"\"$3s\"","type":"or_3","left":"$4"}]],"file":"/usr/local/lib/perl5/5.20.1/Locale/Maketext/Simple.pm","start":{"4":{"BEGIN":[{"time":null,"condition":null,"statement":null,"branch":null,"pod":null,"subroutine":null}]},"122":{"BEGIN":[{"branch":null,"pod":null,"subroutine":2,"time":null,"condition":null,"statement":6}]},"5":{"BEGIN":[{"condition":null,"statement":3,"time":null,"subroutine":1,"branch":null,"pod":null}]},"124":{"__ANON__":[{"branch":1,"pod":null,"subroutine":4,"time":null,"statement":20,"condition":6}]},"204":{"default_loc":[{"statement":55,"condition":9,"time":null,"subroutine":10,"pod":2,"branch":14}]},"262":{"_escape":[{"time":null,"condition":11,"statement":71,"pod":3,"branch":21,"subroutine":13}]},"175":{"__ANON__":[{"time":null,"condition":9,"statement":55,"branch":14,"pod":2,"subroutine":8}]},"208":{"__ANON__":[{"time":null,"condition":9,"statement":66,"pod":3,"branch":16,"subroutine":11}]},"225":{"_default_gettext":[{"time":null,"condition":9,"statement":66,"branch":16,"pod":3,"subroutine":12}]},"-1":{"__COVER__":[{"statement":88,"condition":11,"time":null,"subroutine":16,"pod":4,"branch":26}]},"170":{"__ANON__":[{"subroutine":7,"branch":14,"pod":2,"condition":9,"statement":55,"time":null}]},"132":{"load_loc":[{"time":null,"statement":22,"condition":6,"pod":1,"branch":1,"subroutine":6}]},"129":{"reload_loc":[{"subroutine":5,"branch":1,"pod":null,"statement":21,"condition":6,"time":null}]},"269":{"_unescape":[{"subroutine":14,"branch":21,"pod":3,"condition":11,"statement":74,"time":null}]},"199":{"__ANON__":[{"branch":14,"pod":2,"subroutine":9,"time":null,"statement":55,"condition":9}]},"274":{"auto_path":[{"time":null,"statement":76,"condition":11,"branch":22,"pod":3,"subroutine":15}]},"112":{"import":[{"time":null,"statement":9,"condition":null,"pod":null,"branch":null,"subroutine":3}]}},"branch":[[123,{"text":"if $args{'Export'}"}],[134,{"text":"if defined $_"}],[135,{"text":"if exists $Loc{$pkg}"}],[137,{"text":"unless eval {\n\tdo {\n\trequire Locale::Maketext::Lexicon;\n1\n}\n}"}],[138,{"text":"unless $Locale::Maketext::Lexicon::VERSION > 0.2"}],[139,{"text":"unless eval {\n\tdo {\n\trequire File::Spec;\n1\n}\n}"}],[141,{"text":"unless my $path = $args{'Path'} || $class->auto_path($args{'Class'})"}],[146,{"text":"if $encoding"}],[150,{"text":"unless eval \"\\n\\tpackage $pkg;\\n\\tuse base 'Locale::Maketext';\\n\\tLocale::Maketext::Lexicon->import({\\n\\t    'i-default' => [ 'Auto' ],\\n\\t    '*'\\t=> [ Gettext => \\$pattern ],\\n\\t    _decode => \\$decode,\\n\\t    _encoding => \\$encoding,\\n\\t});\\n\\t*${pkg}::Lexicon = \\\\%${pkg}::i_default::Lexicon;\\n\\t*tense = sub { \\$_[1] . ((\\$_[2] eq 'present') ? 'ing' : 'ed') }\\n\\t    unless defined &tense;\\n\\n\\t1;\\n    \""}],[166,{"text":"unless my $lh = eval {\n\tdo {\n\t$pkg->get_handle\n}\n}"}],[187,{"text":"$2 ? :"}],[187,{"text":"$1 ? :"}],[168,{"text":"if ($style eq 'maketext') { }"}],[168,{"text":"elsif ($style eq 'gettext') { }"}],[206,{"text":"if ($style eq 'maketext') { }"}],[206,{"text":"elsif ($style eq 'gettext') { }"}],[250,{"text":"$3 eq 'present' ? :"}],[250,{"text":"$digit > 1 ? :"}],[250,{"text":"$1 eq 'quant' ? :"}],[250,{"text":"$1 eq 'tense' ? :"}],[250,{"text":"$1 ? :"}],[268,{"text":"/\\A(\\s*)%([1-9]\\d*|\\*)(\\s*)\\z/ ? :"}],[276,{"text":"unless my $path = $INC{$calldir . '.pm'}"}],[279,{"text":"if ($^O eq 'MacOS') { }"}],[286,{"text":"if -d $path"}],[291,{"text":"if -d \"$inc/$path\""}]],"statement":[4,4,4,5,5,5,122,122,122,112,114,115,116,117,119,120,123,123,124,124,124,129,132,134,134,135,137,137,137,138,139,139,139,141,142,143,144,146,148,150,166,166,167,168,171,170,192,175,176,177,187,191,195,200,199,204,205,206,214,208,209,211,212,213,217,220,225,226,249,250,258,262,263,264,269,268,274,275,276,279,280,281,283,286,289,290,291,294],"pod":[[129,"reload_loc"],[132,"load_loc"],[204,"default_loc"],[274,"auto_path"]],"subroutine":[[4,"BEGIN"],[5,"BEGIN"],[122,"BEGIN"],[112,"import"],[124,"__ANON__"],[129,"reload_loc"],[132,"load_loc"],[170,"__ANON__"],[175,"__ANON__"],[199,"__ANON__"],[204,"default_loc"],[208,"__ANON__"],[225,"_default_gettext"],[262,"_escape"],[269,"_unescape"],[274,"auto_path"]]}