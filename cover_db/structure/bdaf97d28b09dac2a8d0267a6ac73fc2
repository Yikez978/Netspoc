{"statement":[327,329,330,331,332,336,350,362,362,367,370,371,382,384,385,386,387,388,389,390,391,396,399,404,419,422,424,426,431,432,436,437,438,439,440,441,443,445,447,447,448,449,454,455,455,456,457,458,459,460,463,464,465,466,467,468,471,472,473,474,475,477,478,479,480,481,482,483,485,487,493,494,495,496,497,500,501,503,504,506,507,509,510,511,514,517,518,519,520,522,524,525,526,527,528,530,533,536,538,539,540,543,544,545,546,547,548,550,553,555,556,559,561,562,565,566,567,568,570,571,576,579,582,583,585,587,589,594,595,596,597,598,601,603,603,607,609,610,611,612,616,617,619,620,622,622,628,629,631,632,634,634,636,637,638,638,639,641,642,643,643,644,646,647,654,655,657,657,658,659,661,662,666,667,668,669,670,671,672,674,675,677,678,680,681,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,703,704,705,706,707,709,710,711,712,714,716,718,720,722,724,726,729,739,747,749,750,753,754,755,758,762,824,764,766,767,769,770,772,773,774,775,777,778,781,782,783,784,785,787,795,790,791,792,793,796,797,798,800,799,799,800,801,802,803,804,805,807,808,808,809,811,815,817,817,818,820,821,821,827,828,829,831,832,841,842,844,845,846,848,849,851,852,853,856,857,858,861,864,866,870,873,880,881,882,882,885,885,890,891,892,893,896,897,898,901,904,906,910,911,912,915,916,917,920,923,924,928,932,936,940,943,944,947,948,949,950,955,956,958,960,961,965,966,967,968,969,970,971,972,973,974,975,976,978,980,982,983,985,986,988,990,992,996,997,998,999,1000,1001,1002,1003,1005,1006,1007,1008,1009,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1027,1028,1029,1030,1031,1035,1039,1040,1042,1044,1047,1051,1052,1053,1054,1055,1056,1057,1059,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1079,1083,1084,1091,1092,1096,1097,1110,1116,1117,1118,1119,1121,1124,1125,1127,1131,1132,1140,1141,1142,1146,1148,1149,1151,1157,1158,1159,1160,1161,1162,1164,1166,1167,1168,1170,1171,1173,1177,1179,1185,1186,1187,1188,1190,1195,1196,1197,1198,1200,1201,1202,1205,1207,1209,1210,1212,1215,1220,1221,1222,1223,1224,1225,1227,1232,1233,1234,1238,1239,1240,1241,1244,1245,1247,1250,1259,1260,1261,1263,1267,1274,1275,1277,1278,1279,1280,1281,1282,1283,1283,1284,1287,1290,1293,1293,1295,1296,1296,1297,1298,1299,1301,1301,1305,1306,1309,1311,1312,1313,1314,1315,1316,1317,1319,1321,1323,1324,1325,1326,1327,1330,1332,1333,1335,1336,1337,1339,1340,1344,1345,1346,1352,1353,1354,1356,1357,1358,1359,1364,1362,1363,1368,1369,1370,1371,1372,1373,1374,1375,1376,1379,1380,1382,1384,1385,1386,1397,1398,1399,1400,1401,1402,1403,1404,1412,1414,1416,1417,1419,1427,1429,1431,1433,1436,1437,1438,1439,1441,1443,1444,1448,1454,1455,1456,1457,1458,1458,1459,1460,1463,1468,1469,1470,1471,1479,1483,1484,1485,1487,1488,1489,1490,1490,1491,1492,1494,1498,1499,1500,1502,1503,1504,1506,1507,1508,1510,1512,1513,1518,1519,1525,1526,1530,1531,1532,1534,1535,1536,1537,1538,1539,1540,1541,1542,1545,1546,1547,1548,1551,1556,1561,1562,1565,1567,1569,1570,1574,1575,1578,1579,1579,1581,1583,1587,1588,1588,1589,1591,1597,1598,1599,1600,1601,1602,1603,1604,1605,1613,1614,1615,1616,1619,1622,1625,1628,1630,1631,1634,1635,1636,1637,1638,1641,1642,1643,1646,1648,1649,1650,1651,1652,1654,1653,1656,1657,1661,1663,1663,1664,1670,1671,1675,1681,1682,1686,1688,1692,1693,1694,1697,1699,1703,1704,1705,1706,1707,1708,1710,1711,1713,1730,1731,1733,1735,1736,1737,1738,1739,1740,1741,1742,1752,1753,1754,1755,1756,1757,1758,1761,1762,1763,1763,1765,1766,1769,1770,1775,1777,1781,1782,1783,1784,1785,1787,1788,1791,1793,1794,1797,1798,1800,1826,1827,1828,1829,1830,1831,1832,1833,1835,1836,1840,1843,1844,1845,1849,1851,1855,1856,1857,1861,1862,1863,1864,1867,1870,1871,1872,1873,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,1885,1886,1887,1888,1889,1890,1898,1899,1900,1901,1902,1912,1913,1914,1915,1916,1917,1918,1919,1920,1922,1924,1925,1926,1928,1930,1933,1936,1937,1938,1939,1941,1946,1947,1948,1949,1950,1951,1953,1955,1956,1957,1960,1963,1964,1965,1969,1971,1978,1979,1980,1981,1982,1983,1984,1985,1986,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,2000,2001,2002,2004,2005,2006,2010,2012,2013,2014,2015,2016,2018,2019,2020,2021,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2050,2051,2051,2052,2055,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2073,2075,2076,2079,2080,2082,2083,2084,2085,2086,2089,2090,2091,2092,2095,2100,2101,2104,2105,2106,2107,2109,2112,2114,2117,2122,2123,2124,2125,2126,2128,2132,2136,2138,2142,2149,2150,2151,2152,2155,2156,2157,2158,2160,2172,2173,2174,2175,2177,2179,2184,2185,2186,2190,2191,2193,2193,2195,2196,2197,2198,2199,2201,2203,2205,2209,2210,2211,2212,2214,2215,2221,2222,2223,2224,2225,2226,2228,2230,2231,2236,2238,2240,2242,2246,2250,2251,2252,2255,2258,2259,2260,2261,2262,2263,2267,2268,2269,2274,2275,2276,2277,2278,2280,2281,2283,2287,2288,2289,2290,2291,2292,2295,2296,2297,2298,2302,2303,2305,2308,2309,2310,2311,2312,2315,2316,2317,2320,2321,2322,2324,2326,2328,2332,2333,2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345,2346,2347,2348,2349,2350,2351,2352,2353,2354,2355,2356,2357,2358,2359,2360,2369,2370,2371,2373,2375,2384,2386,2409,2410,2411,2414,2416,2442,2443,2444,2447,2449,2454,2455,2456,2457,2458,2459,2460,2461,2463,2464,2466,2467,2469,2470,2473,2474,2475,2476,2477,2478,2479,2480,2481,2482,2483,2485,2486,2487,2488,2489,2491,2492,2493,2494,2495,2496,2497,2498,2499,2500,2501,2502,2503,2504,2506,2507,2508,2509,2510,2511,2512,2514,2515,2518,2519,2520,2523,2530,2532,2533,2534,2535,2536,2537,2538,2539,2540,2542,2543,2544,2549,2550,2551,2552,2553,2554,2555,2556,2557,2559,2560,2561,2562,2563,2565,2566,2568,2570,2571,2575,2576,2577,2578,2579,2580,2581,2585,2586,2587,2588,2589,2595,2596,2597,2598,2599,2602,2603,2604,2607,2608,2609,2611,2612,2613,2615,2616,2617,2621,2622,2623,2627,2630,2631,2632,2633,2634,2635,2636,2639,2640,2641,2644,2645,2646,2648,2651,2656,2657,2658,2659,2660,2665,2666,2670,2671,2672,2673,2680,2683,2685,2686,2688,2690,2691,2692,2694,2695,2697,2698,2700,2701,2704,2709,2710,2713,2714,2716,2718,2722,2723,2725,2726,2728,2732,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,2767,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,2787,2788,2789,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2813,2814,2815,2816,2818,2819,2824,2825,2829,2838,2839,2840,2841,2842,2843,2844,2846,2848,2849,2851,2852,2853,2854,2856,2861,2862,2863,2864,2865,2866,2867,2868,2869,2870,2871,2873,2875,2877,2878,2880,2881,2885,2887,2888,2889,2891,2892,2893,2895,2896,2897,2900,2901,2908,2909,2911,2920,2922,2927,2928,2929,2930,2933,2934,2935,2936,2937,2938,2939,2940,2942,2943,2945,2946,2947,2948,2950,2953,2954,2955,2956,2959,2960,2961,2962,2963,2964,2965,2966,2976,2980,2981,2983,2984,2985,2986,2988,2989,2995,2996,3003,3004,3007,3008,3009,3010,3011,3012,3014,3016,3017,3018,3020,3022,3024,3025,3027,3032,3033,3039,3040,3041,3042,3043,3044,3045,3048,3049,3050,3051,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3067,3069,3070,3071,3073,3074,3077,3079,3083,3084,3085,3087,3091,3092,3093,3094,3095,3097,3098,3099,3100,3101,3102,3103,3104,3106,3108,3110,3111,3112,3114,3118,3121,3123,3124,3126,3128,3131,3132,3134,3135,3138,3140,3141,3142,3143,3144,3146,3148,3149,3150,3151,3152,3154,3161,3162,3163,3163,3163,3164,3165,3167,3168,3169,3172,3173,3174,3175,3176,3178,3179,3180,3181,3183,3187,3188,3189,3191,3192,3194,3196,3199,3202,3203,3204,3205,3206,3207,3211,3212,3216,3217,3218,3223,3224,3225,3227,3232,3234,3236,3238,3240,3242,3252,3258,3262,3268,3272,3277,3278,3279,3283,3284,3285,3289,3290,3291,3295,3296,3300,3301,3302,3306,3307,3308,3309,3311,3316,3317,3318,3319,3324,3325,3326,3327,3331,3332,3333,3334,3335,3336,3337,3341,3342,3344,3346,3347,3348,3349,3350,3351,3355,3356,3358,3359,3360,3362,3363,3364,3366,3367,3377,3379,3381,3385,3386,3387,3391,3392,3393,3394,3396,3403,3404,3407,3410,3415,3416,3417,3418,3419,3421,3424,3425,3426,3429,3433,3434,3435,3436,3437,3438,3440,3445,3446,3447,3449,3450,3451,3452,3453,3454,3455,3456,3457,3459,3465,3466,3468,3469,3471,3473,3477,3479,3481,3483,3485,3491,3492,3494,3512,3522,3524,3528,3529,3530,3532,3534,3535,3537,3539,3545,3546,3551,3552,3555,3556,3557,3558,3559,3560,3561,3562,3563,3567,3568,3569,3570,3571,3572,3574,3575,3577,3578,3580,3581,3582,3583,3584,3585,3587,3589,3591,3592,3593,3596,3597,3598,3599,3602,3603,3604,3605,3606,3607,3608,3609,3613,3614,3618,3619,3623,3624,3625,3626,3627,3639,3640,3641,3642,3643,3644,3647,3648,3649,3651,3653,3656,3657,3659,3660,3663,3667,3674,3675,3676,3680,3681,3683,3684,3685,3685,3685,3686,3690,3691,3696,3697,3698,3700,3707,3708,3709,3710,3711,3712,3714,3715,3716,3717,3718,3719,3720,3722,3724,3725,3727,3728,3729,3730,3731,3733,3736,3737,3739,3742,3745,3746,3747,3749,3752,3755,3756,3772,3774,3779,3780,3781,3785,3786,3787,3789,3790,3791,3792,3793,3795,3797,3798,3799,3800,3802,3803,3804,3805,3806,3808,3809,3810,3812,3813,3814,3815,3816,3818,3822,3823,3825,3826,3827,3832,3834,3838,3843,3845,3849,3850,3851,3852,3853,3856,3858,3859,3859,3860,3861,3863,3869,3871,3872,3873,3875,3881,3883,3885,3890,3895,3896,3897,3917,3919,3929,3937,3943,3945,3955,3965,4006,4007,4007,4008,4010,4011,4012,4013,4014,4015,4015,4016,4016,4017,4023,4024,4024,4025,4026,4027,4028,4033,4034,4035,4041,4044,4045,4049,4050,4051,4052,4053,4054,4054,4054,4055,4056,4057,4058,4060,4061,4062,4064,4065,4068,4070,4071,4073,4077,4078,4079,4080,4081,4083,4084,4086,4087,4088,4090,4091,4102,4103,4104,4105,4106,4107,4110,4111,4112,4115,4116,4120,4121,4122,4123,4125,4127,4129,4130,4133,4134,4135,4139,4140,4141,4142,4144,4145,4146,4148,4151,4154,4156,4159,4163,4165,4168,4171,4172,4176,4177,4179,4181,4184,4185,4188,4189,4191,4192,4193,4195,4196,4197,4198,4200,4208,4210,4212,4214,4215,4216,4217,4218,4223,4224,4225,4227,4229,4230,4231,4233,4236,4241,4242,4243,4244,4245,4246,4247,4248,4250,4255,4256,4257,4259,4260,4264,4265,4266,4267,4272,4273,4277,4278,4279,4280,4281,4282,4284,4285,4288,4293,4295,4297,4299,4301,4303,4305,4307,4309,4314,4315,4317,4319,4320,4322,4326,4327,4328,4329,4331,4330,4335,4340,4341,4342,4343,4345,4346,4348,4349,4351,4352,4355,4356,4359,4360,4361,4367,4368,4369,4371,4373,4375,4377,4379,4381,4383,4385,4387,4389,4392,4397,4398,4399,4400,4401,4402,4405,4407,4408,4411,4415,4416,4417,4418,4419,4422,4423,4424,4425,4426,4428,4431,4432,4433,4434,4434,4436,4439,4440,4441,4442,4443,4444,4445,4447,4449,4450,4452,4453,4454,4455,4456,4460,4461,4462,4464,4466,4473,4474,4475,4476,4477,4478,4479,4480,4481,4482,4483,4484,4485,4487,4489,4490,4491,4493,4494,4497,4498,4499,4500,4501,4503,4504,4505,4506,4507,4510,4511,4512,4513,4515,4516,4517,4520,4521,4523,4524,4525,4526,4527,4528,4529,4531,4532,4533,4534,4538,4539,4540,4541,4542,4544,4546,4549,4550,4551,4552,4554,4556,4564,4568,4569,4570,4571,4572,4573,4574,4576,4579,4581,4582,4583,4584,4585,4586,4589,4592,4594,4598,4603,4604,4606,4607,4608,4609,4610,4612,4614,4615,4616,4618,4620,4622,4624,4626,4628,4630,4632,4633,4634,4639,4640,4641,4643,4644,4647,4650,4651,4653,4654,4655,4657,4657,4657,4658,4661,4665,4674,4677,4680,4684,4685,4686,4687,4688,4689,4692,4693,4694,4695,4696,4697,4698,4700,4703,4704,4708,4709,4713,4714,4715,4716,4717,4718,4719,4720,4721,4722,4723,4726,4736,4739,4741,4752,4753,4754,4755,4756,4757,4758,4759,4761,4762,4763,4764,4765,4766,4767,4768,4770,4773,4775,4776,4777,4778,4780,4782,4785,4786,4787,4788,4789,4790,4791,4792,4794,4796,4797,4799,4806,4810,4811,4812,4814,4817,4818,4819,4820,4828,4829,4830,4831,4833,4835,4837,4838,4844,4845,4853,4856,4857,4858,4860,4877,4878,4879,4880,4881,4882,4883,4884,4886,4887,4888,4889,4890,4892,4894,4895,4896,4899,4899,4900,4901,4903,4906,4907,4908,4909,4910,4913,4916,4918,4919,4920,4921,4922,4923,4924,4928,4933,4934,4935,4937,4941,4942,4945,4949,4950,4951,4952,4953,4957,4958,4959],"pod":[[419,"pessimise"],[431,"null"],[436,"todo"],[454,"next_todo"],[493,"begin_is_use"],[594,"stash_subs"],[654,"print_protos"],[666,"style_opts"],[687,"new"],[739,"WARN_MASK"],[747,"init"],[762,"compile"],[827,"coderef2text"],[841,"ambient_pragmas"],[965,"indent"],[996,"deparse_sub"],[1051,"deparse_format"],[1083,"is_scope"],[1091,"is_state"],[1096,"is_miniwhile"],[1110,"is_for_loop"],[1131,"is_scalar"],[1140,"maybe_parens"],[1157,"maybe_parens_unop"],[1185,"maybe_parens_func"],[1195,"maybe_local"],[1220,"maybe_targmy"],[1232,"padname_sv"],[1238,"maybe_my"],[1274,"lineseq"],[1305,"scopeop"],[1344,"pp_scope"],[1345,"pp_lineseq"],[1346,"pp_leave"],[1352,"deparse_root"],[1368,"walk_lineseq"],[1397,"gv_name"],[1427,"stash_variable"],[1454,"stash_variable_name"],[1468,"maybe_qualify"],[1483,"lex_in_scope"],[1498,"populate_curcvlex"],[1525,"find_scope_st"],[1526,"find_scope_en"],[1530,"find_scope"],[1561,"cop_subs"],[1574,"seq_subs"],[1597,"pp_nextstate"],[1692,"declare_warnings"],[1703,"declare_hints"],[1730,"declare_hinthash"],[1781,"hint_pragmas"],[1797,"pp_dbstate"],[1798,"pp_setstate"],[1800,"pp_unstack"],[1826,"keyword"],[1855,"baseop"],[1861,"pp_stub"],[1870,"pp_wantarray"],[1871,"pp_fork"],[1872,"pp_wait"],[1873,"pp_getppid"],[1874,"pp_time"],[1875,"pp_tms"],[1876,"pp_ghostent"],[1877,"pp_gnetent"],[1878,"pp_gprotoent"],[1879,"pp_gservent"],[1880,"pp_ehostent"],[1881,"pp_enetent"],[1882,"pp_eprotoent"],[1883,"pp_eservent"],[1884,"pp_gpwent"],[1885,"pp_spwent"],[1886,"pp_epwent"],[1887,"pp_ggrent"],[1888,"pp_sgrent"],[1889,"pp_egrent"],[1890,"pp_getlogin"],[1898,"pfixop"],[1912,"pp_preinc"],[1913,"pp_predec"],[1914,"pp_postinc"],[1915,"pp_postdec"],[1916,"pp_i_preinc"],[1917,"pp_i_predec"],[1918,"pp_i_postinc"],[1919,"pp_i_postdec"],[1920,"pp_complement"],[1922,"pp_negate"],[1924,"real_negate"],[1933,"pp_i_negate"],[1936,"pp_not"],[1946,"unop"],[1978,"pp_chop"],[1979,"pp_chomp"],[1980,"pp_schop"],[1981,"pp_schomp"],[1982,"pp_defined"],[1983,"pp_undef"],[1984,"pp_study"],[1985,"pp_ref"],[1986,"pp_pos"],[1988,"pp_sin"],[1989,"pp_cos"],[1990,"pp_rand"],[1991,"pp_srand"],[1992,"pp_exp"],[1993,"pp_log"],[1994,"pp_sqrt"],[1995,"pp_int"],[1996,"pp_hex"],[1997,"pp_oct"],[1998,"pp_abs"],[2000,"pp_length"],[2001,"pp_ord"],[2002,"pp_chr"],[2004,"pp_each"],[2005,"pp_values"],[2006,"pp_keys"],[2010,"pp_boolkeys"],[2012,"pp_aeach"],[2013,"pp_avalues"],[2014,"pp_akeys"],[2015,"pp_pop"],[2016,"pp_shift"],[2018,"pp_caller"],[2019,"pp_reset"],[2020,"pp_exit"],[2021,"pp_prototype"],[2023,"pp_close"],[2024,"pp_fileno"],[2025,"pp_umask"],[2026,"pp_untie"],[2027,"pp_tied"],[2028,"pp_dbmclose"],[2029,"pp_getc"],[2030,"pp_eof"],[2031,"pp_tell"],[2032,"pp_getsockname"],[2033,"pp_getpeername"],[2035,"pp_chdir"],[2036,"pp_chroot"],[2037,"pp_readlink"],[2038,"pp_rmdir"],[2039,"pp_readdir"],[2040,"pp_telldir"],[2041,"pp_rewinddir"],[2042,"pp_closedir"],[2043,"pp_getpgrp"],[2044,"pp_localtime"],[2045,"pp_gmtime"],[2046,"pp_alarm"],[2047,"pp_sleep"],[2050,"pp_dofile"],[2055,"pp_entereval"],[2061,"pp_ghbyname"],[2062,"pp_gnbyname"],[2063,"pp_gpbyname"],[2064,"pp_shostent"],[2065,"pp_snetent"],[2066,"pp_sprotoent"],[2067,"pp_sservent"],[2068,"pp_gpwnam"],[2069,"pp_gpwuid"],[2070,"pp_ggrnam"],[2071,"pp_ggrgid"],[2073,"pp_lock"],[2075,"pp_continue"],[2076,"pp_break"],[2079,"givwhen"],[2100,"pp_leavegiven"],[2101,"pp_leavewhen"],[2104,"pp_exists"],[2122,"pp_delete"],[2149,"pp_require"],[2172,"pp_scalar"],[2184,"padval"],[2190,"anon_hash_or_list"],[2209,"pp_anonlist"],[2221,"pp_refgen"],[2250,"e_anoncode"],[2255,"pp_srefgen"],[2258,"pp_readline"],[2267,"pp_rcatline"],[2274,"dq_unop"],[2287,"pp_ucfirst"],[2288,"pp_lcfirst"],[2289,"pp_uc"],[2290,"pp_lc"],[2291,"pp_quotemeta"],[2292,"pp_fc"],[2295,"loopex"],[2308,"pp_last"],[2309,"pp_next"],[2310,"pp_redo"],[2311,"pp_goto"],[2312,"pp_dump"],[2315,"ftst"],[2332,"pp_lstat"],[2333,"pp_stat"],[2334,"pp_ftrread"],[2335,"pp_ftrwrite"],[2336,"pp_ftrexec"],[2337,"pp_fteread"],[2338,"pp_ftewrite"],[2339,"pp_fteexec"],[2340,"pp_ftis"],[2341,"pp_fteowned"],[2342,"pp_ftrowned"],[2343,"pp_ftzero"],[2344,"pp_ftsize"],[2345,"pp_ftmtime"],[2346,"pp_ftatime"],[2347,"pp_ftctime"],[2348,"pp_ftsock"],[2349,"pp_ftchr"],[2350,"pp_ftblk"],[2351,"pp_ftfile"],[2352,"pp_ftdir"],[2353,"pp_ftpipe"],[2354,"pp_ftlink"],[2355,"pp_ftsuid"],[2356,"pp_ftsgid"],[2357,"pp_ftsvtx"],[2358,"pp_fttty"],[2359,"pp_fttext"],[2360,"pp_ftbinary"],[2369,"assoc_class"],[2409,"deparse_binop_left"],[2442,"deparse_binop_right"],[2454,"binop"],[2473,"pp_add"],[2474,"pp_multiply"],[2475,"pp_subtract"],[2476,"pp_divide"],[2477,"pp_modulo"],[2478,"pp_i_add"],[2479,"pp_i_multiply"],[2480,"pp_i_subtract"],[2481,"pp_i_divide"],[2482,"pp_i_modulo"],[2483,"pp_pow"],[2485,"pp_left_shift"],[2486,"pp_right_shift"],[2487,"pp_bit_and"],[2488,"pp_bit_or"],[2489,"pp_bit_xor"],[2491,"pp_eq"],[2492,"pp_ne"],[2493,"pp_lt"],[2494,"pp_gt"],[2495,"pp_ge"],[2496,"pp_le"],[2497,"pp_ncmp"],[2498,"pp_i_eq"],[2499,"pp_i_ne"],[2500,"pp_i_lt"],[2501,"pp_i_gt"],[2502,"pp_i_ge"],[2503,"pp_i_le"],[2504,"pp_i_ncmp"],[2506,"pp_seq"],[2507,"pp_sne"],[2508,"pp_slt"],[2509,"pp_sgt"],[2510,"pp_sge"],[2511,"pp_sle"],[2512,"pp_scmp"],[2514,"pp_sassign"],[2515,"pp_aassign"],[2518,"pp_smartmatch"],[2530,"pp_concat"],[2532,"real_concat"],[2549,"pp_repeat"],[2575,"range"],[2585,"pp_flop"],[2621,"pp_and"],[2622,"pp_or"],[2623,"pp_dor"],[2627,"pp_xor"],[2639,"pp_andassign"],[2640,"pp_orassign"],[2641,"pp_dorassign"],[2644,"rv2gv_or_string"],[2656,"listop"],[2722,"pp_bless"],[2723,"pp_atan2"],[2725,"pp_substr"],[2734,"pp_vec"],[2735,"pp_index"],[2736,"pp_rindex"],[2737,"pp_sprintf"],[2738,"pp_formline"],[2739,"pp_crypt"],[2740,"pp_unpack"],[2741,"pp_pack"],[2742,"pp_join"],[2743,"pp_splice"],[2744,"pp_push"],[2745,"pp_unshift"],[2746,"pp_reverse"],[2747,"pp_warn"],[2748,"pp_die"],[2749,"pp_return"],[2750,"pp_open"],[2751,"pp_pipe_op"],[2752,"pp_tie"],[2753,"pp_binmode"],[2754,"pp_dbmopen"],[2755,"pp_sselect"],[2756,"pp_select"],[2757,"pp_read"],[2758,"pp_sysopen"],[2759,"pp_sysseek"],[2760,"pp_sysread"],[2761,"pp_syswrite"],[2762,"pp_send"],[2763,"pp_recv"],[2764,"pp_seek"],[2765,"pp_fcntl"],[2766,"pp_ioctl"],[2767,"pp_flock"],[2768,"pp_socket"],[2769,"pp_sockpair"],[2770,"pp_bind"],[2771,"pp_connect"],[2772,"pp_listen"],[2773,"pp_accept"],[2774,"pp_shutdown"],[2775,"pp_gsockopt"],[2776,"pp_ssockopt"],[2777,"pp_chown"],[2778,"pp_unlink"],[2779,"pp_chmod"],[2780,"pp_utime"],[2781,"pp_rename"],[2782,"pp_link"],[2783,"pp_symlink"],[2784,"pp_mkdir"],[2785,"pp_open_dir"],[2786,"pp_seekdir"],[2787,"pp_waitpid"],[2788,"pp_system"],[2789,"pp_exec"],[2790,"pp_kill"],[2791,"pp_setpgrp"],[2792,"pp_getpriority"],[2793,"pp_setpriority"],[2794,"pp_shmget"],[2795,"pp_shmctl"],[2796,"pp_shmread"],[2797,"pp_shmwrite"],[2798,"pp_msgget"],[2799,"pp_msgctl"],[2800,"pp_msgsnd"],[2801,"pp_msgrcv"],[2802,"pp_semget"],[2803,"pp_semctl"],[2804,"pp_semop"],[2805,"pp_ghbyaddr"],[2806,"pp_gnbyaddr"],[2807,"pp_gpbynumber"],[2808,"pp_gsbyname"],[2809,"pp_gsbyport"],[2810,"pp_syscall"],[2813,"pp_glob"],[2838,"pp_truncate"],[2861,"indirop"],[2927,"pp_prtf"],[2928,"pp_print"],[2929,"pp_say"],[2930,"pp_sort"],[2933,"mapop"],[2953,"pp_mapwhile"],[2954,"pp_grepwhile"],[2955,"pp_mapstart"],[2956,"pp_grepstart"],[2959,"pp_list"],[3032,"is_ifelse_cont"],[3039,"pp_cond_expr"],[3083,"pp_once"],[3091,"loop_common"],[3199,"pp_leaveloop"],[3202,"for_loop"],[3211,"pp_leavetry"],[3223,"pp_null"],[3277,"padname"],[3283,"padany"],[3289,"pp_padsv"],[3295,"pp_padav"],[3296,"pp_padhv"],[3300,"pp_threadsv"],[3306,"gv_or_padgv"],[3316,"pp_gvsv"],[3324,"pp_gv"],[3331,"pp_aelemfast_lex"],[3341,"pp_aelemfast"],[3355,"rv2x"],[3385,"pp_rv2sv"],[3386,"pp_rv2hv"],[3387,"pp_rv2gv"],[3391,"pp_av2arylen"],[3403,"pp_rv2cv"],[3415,"list_const"],[3433,"pp_rv2av"],[3445,"is_subscriptable"],[3465,"elem_or_slice_array_name"],[3491,"elem_or_slice_single_index"],[3528,"elem"],[3551,"pp_aelem"],[3552,"pp_helem"],[3555,"pp_gelem"],[3567,"slice"],[3596,"pp_aslice"],[3597,"pp_kvaslice"],[3598,"pp_hslice"],[3599,"pp_kvhslice"],[3602,"pp_lslice"],[3613,"want_scalar"],[3618,"want_list"],[3674,"method"],[3680,"e_method"],[3707,"check_proto"],[3785,"pp_entersub"],[3890,"pp_enterwrite"],[3895,"uninterp"],[3917,"re_uninterp"],[3943,"re_uninterp_extended"],[4006,"escape_str"],[4023,"escape_extended_re"],[4033,"unback"],[4041,"re_unback"],[4049,"balanced_delim"],[4077,"single_delim"],[4102,"split_float"],[4120,"const"],[4241,"const_dumper"],[4255,"const_sv"],[4264,"pp_const"],[4277,"dq"],[4314,"pp_backtick"],[4326,"dquote"],[4335,"pp_stringify"],[4340,"double_delim"],[4367,"pchr"],[4397,"collapse"],[4415,"tr_decode_byte"],[4460,"tr_chr"],[4473,"tr_decode_utf8"],[4568,"pp_trans"],[4589,"pp_transr"],[4592,"re_dq_disambiguate"],[4603,"re_dq"],[4639,"pure_string"],[4684,"regcomp"],[4708,"pp_regcomp"],[4713,"re_flags"],[4752,"matchop"],[4810,"pp_match"],[4811,"pp_pushre"],[4812,"pp_qr"],[4814,"pp_runcv"],[4817,"pp_split"],[4877,"pp_subst"],[4933,"is_lexical_subs"],[4941,"pp_introcv"],[4949,"pp_clonecv"],[4957,"pp_padcv"]],"subroutine":[[327,"_pessimise_walk"],[382,"_pessimise_walk_exe"],[419,"pessimise"],[431,"null"],[436,"todo"],[454,"next_todo"],[493,"begin_is_use"],[594,"stash_subs"],[654,"print_protos"],[666,"style_opts"],[687,"new"],[739,"WARN_MASK"],[747,"init"],[762,"compile"],[764,"__ANON__"],[827,"coderef2text"],[841,"ambient_pragmas"],[955,"deparse"],[965,"indent"],[996,"deparse_sub"],[1051,"deparse_format"],[1083,"is_scope"],[1091,"is_state"],[1096,"is_miniwhile"],[1110,"is_for_loop"],[1131,"is_scalar"],[1140,"maybe_parens"],[1157,"maybe_parens_unop"],[1185,"maybe_parens_func"],[1195,"maybe_local"],[1220,"maybe_targmy"],[1232,"padname_sv"],[1238,"maybe_my"],[1259,"AUTOLOAD"],[1267,"DESTROY"],[1274,"lineseq"],[1293,"__ANON__"],[1305,"scopeop"],[1344,"pp_scope"],[1345,"pp_lineseq"],[1346,"pp_leave"],[1352,"deparse_root"],[1362,"__ANON__"],[1368,"walk_lineseq"],[1397,"gv_name"],[1427,"stash_variable"],[1454,"stash_variable_name"],[1468,"maybe_qualify"],[1483,"lex_in_scope"],[1498,"populate_curcvlex"],[1525,"find_scope_st"],[1526,"find_scope_en"],[1530,"find_scope"],[1561,"cop_subs"],[1574,"seq_subs"],[1587,"_features_from_bundle"],[1597,"pp_nextstate"],[1692,"declare_warnings"],[1703,"declare_hints"],[1730,"declare_hinthash"],[1781,"hint_pragmas"],[1797,"pp_dbstate"],[1798,"pp_setstate"],[1800,"pp_unstack"],[1826,"keyword"],[1855,"baseop"],[1861,"pp_stub"],[1870,"pp_wantarray"],[1871,"pp_fork"],[1872,"pp_wait"],[1873,"pp_getppid"],[1874,"pp_time"],[1875,"pp_tms"],[1876,"pp_ghostent"],[1877,"pp_gnetent"],[1878,"pp_gprotoent"],[1879,"pp_gservent"],[1880,"pp_ehostent"],[1881,"pp_enetent"],[1882,"pp_eprotoent"],[1883,"pp_eservent"],[1884,"pp_gpwent"],[1885,"pp_spwent"],[1886,"pp_epwent"],[1887,"pp_ggrent"],[1888,"pp_sgrent"],[1889,"pp_egrent"],[1890,"pp_getlogin"],[1898,"pfixop"],[1912,"pp_preinc"],[1913,"pp_predec"],[1914,"pp_postinc"],[1915,"pp_postdec"],[1916,"pp_i_preinc"],[1917,"pp_i_predec"],[1918,"pp_i_postinc"],[1919,"pp_i_postdec"],[1920,"pp_complement"],[1922,"pp_negate"],[1924,"real_negate"],[1933,"pp_i_negate"],[1936,"pp_not"],[1946,"unop"],[1978,"pp_chop"],[1979,"pp_chomp"],[1980,"pp_schop"],[1981,"pp_schomp"],[1982,"pp_defined"],[1983,"pp_undef"],[1984,"pp_study"],[1985,"pp_ref"],[1986,"pp_pos"],[1988,"pp_sin"],[1989,"pp_cos"],[1990,"pp_rand"],[1991,"pp_srand"],[1992,"pp_exp"],[1993,"pp_log"],[1994,"pp_sqrt"],[1995,"pp_int"],[1996,"pp_hex"],[1997,"pp_oct"],[1998,"pp_abs"],[2000,"pp_length"],[2001,"pp_ord"],[2002,"pp_chr"],[2004,"pp_each"],[2005,"pp_values"],[2006,"pp_keys"],[2010,"pp_boolkeys"],[2012,"pp_aeach"],[2013,"pp_avalues"],[2014,"pp_akeys"],[2015,"pp_pop"],[2016,"pp_shift"],[2018,"pp_caller"],[2019,"pp_reset"],[2020,"pp_exit"],[2021,"pp_prototype"],[2023,"pp_close"],[2024,"pp_fileno"],[2025,"pp_umask"],[2026,"pp_untie"],[2027,"pp_tied"],[2028,"pp_dbmclose"],[2029,"pp_getc"],[2030,"pp_eof"],[2031,"pp_tell"],[2032,"pp_getsockname"],[2033,"pp_getpeername"],[2035,"pp_chdir"],[2036,"pp_chroot"],[2037,"pp_readlink"],[2038,"pp_rmdir"],[2039,"pp_readdir"],[2040,"pp_telldir"],[2041,"pp_rewinddir"],[2042,"pp_closedir"],[2043,"pp_getpgrp"],[2044,"pp_localtime"],[2045,"pp_gmtime"],[2046,"pp_alarm"],[2047,"pp_sleep"],[2050,"pp_dofile"],[2055,"pp_entereval"],[2061,"pp_ghbyname"],[2062,"pp_gnbyname"],[2063,"pp_gpbyname"],[2064,"pp_shostent"],[2065,"pp_snetent"],[2066,"pp_sprotoent"],[2067,"pp_sservent"],[2068,"pp_gpwnam"],[2069,"pp_gpwuid"],[2070,"pp_ggrnam"],[2071,"pp_ggrgid"],[2073,"pp_lock"],[2075,"pp_continue"],[2076,"pp_break"],[2079,"givwhen"],[2100,"pp_leavegiven"],[2101,"pp_leavewhen"],[2104,"pp_exists"],[2122,"pp_delete"],[2149,"pp_require"],[2172,"pp_scalar"],[2184,"padval"],[2190,"anon_hash_or_list"],[2209,"pp_anonlist"],[2221,"pp_refgen"],[2250,"e_anoncode"],[2255,"pp_srefgen"],[2258,"pp_readline"],[2267,"pp_rcatline"],[2274,"dq_unop"],[2287,"pp_ucfirst"],[2288,"pp_lcfirst"],[2289,"pp_uc"],[2290,"pp_lc"],[2291,"pp_quotemeta"],[2292,"pp_fc"],[2295,"loopex"],[2308,"pp_last"],[2309,"pp_next"],[2310,"pp_redo"],[2311,"pp_goto"],[2312,"pp_dump"],[2315,"ftst"],[2332,"pp_lstat"],[2333,"pp_stat"],[2334,"pp_ftrread"],[2335,"pp_ftrwrite"],[2336,"pp_ftrexec"],[2337,"pp_fteread"],[2338,"pp_ftewrite"],[2339,"pp_fteexec"],[2340,"pp_ftis"],[2341,"pp_fteowned"],[2342,"pp_ftrowned"],[2343,"pp_ftzero"],[2344,"pp_ftsize"],[2345,"pp_ftmtime"],[2346,"pp_ftatime"],[2347,"pp_ftctime"],[2348,"pp_ftsock"],[2349,"pp_ftchr"],[2350,"pp_ftblk"],[2351,"pp_ftfile"],[2352,"pp_ftdir"],[2353,"pp_ftpipe"],[2354,"pp_ftlink"],[2355,"pp_ftsuid"],[2356,"pp_ftsgid"],[2357,"pp_ftsvtx"],[2358,"pp_fttty"],[2359,"pp_fttext"],[2360,"pp_ftbinary"],[2369,"assoc_class"],[2409,"deparse_binop_left"],[2442,"deparse_binop_right"],[2454,"binop"],[2473,"pp_add"],[2474,"pp_multiply"],[2475,"pp_subtract"],[2476,"pp_divide"],[2477,"pp_modulo"],[2478,"pp_i_add"],[2479,"pp_i_multiply"],[2480,"pp_i_subtract"],[2481,"pp_i_divide"],[2482,"pp_i_modulo"],[2483,"pp_pow"],[2485,"pp_left_shift"],[2486,"pp_right_shift"],[2487,"pp_bit_and"],[2488,"pp_bit_or"],[2489,"pp_bit_xor"],[2491,"pp_eq"],[2492,"pp_ne"],[2493,"pp_lt"],[2494,"pp_gt"],[2495,"pp_ge"],[2496,"pp_le"],[2497,"pp_ncmp"],[2498,"pp_i_eq"],[2499,"pp_i_ne"],[2500,"pp_i_lt"],[2501,"pp_i_gt"],[2502,"pp_i_ge"],[2503,"pp_i_le"],[2504,"pp_i_ncmp"],[2506,"pp_seq"],[2507,"pp_sne"],[2508,"pp_slt"],[2509,"pp_sgt"],[2510,"pp_sge"],[2511,"pp_sle"],[2512,"pp_scmp"],[2514,"pp_sassign"],[2515,"pp_aassign"],[2518,"pp_smartmatch"],[2530,"pp_concat"],[2532,"real_concat"],[2549,"pp_repeat"],[2575,"range"],[2585,"pp_flop"],[2595,"logop"],[2621,"pp_and"],[2622,"pp_or"],[2623,"pp_dor"],[2627,"pp_xor"],[2630,"logassignop"],[2639,"pp_andassign"],[2640,"pp_orassign"],[2641,"pp_dorassign"],[2644,"rv2gv_or_string"],[2656,"listop"],[2722,"pp_bless"],[2723,"pp_atan2"],[2725,"pp_substr"],[2734,"pp_vec"],[2735,"pp_index"],[2736,"pp_rindex"],[2737,"pp_sprintf"],[2738,"pp_formline"],[2739,"pp_crypt"],[2740,"pp_unpack"],[2741,"pp_pack"],[2742,"pp_join"],[2743,"pp_splice"],[2744,"pp_push"],[2745,"pp_unshift"],[2746,"pp_reverse"],[2747,"pp_warn"],[2748,"pp_die"],[2749,"pp_return"],[2750,"pp_open"],[2751,"pp_pipe_op"],[2752,"pp_tie"],[2753,"pp_binmode"],[2754,"pp_dbmopen"],[2755,"pp_sselect"],[2756,"pp_select"],[2757,"pp_read"],[2758,"pp_sysopen"],[2759,"pp_sysseek"],[2760,"pp_sysread"],[2761,"pp_syswrite"],[2762,"pp_send"],[2763,"pp_recv"],[2764,"pp_seek"],[2765,"pp_fcntl"],[2766,"pp_ioctl"],[2767,"pp_flock"],[2768,"pp_socket"],[2769,"pp_sockpair"],[2770,"pp_bind"],[2771,"pp_connect"],[2772,"pp_listen"],[2773,"pp_accept"],[2774,"pp_shutdown"],[2775,"pp_gsockopt"],[2776,"pp_ssockopt"],[2777,"pp_chown"],[2778,"pp_unlink"],[2779,"pp_chmod"],[2780,"pp_utime"],[2781,"pp_rename"],[2782,"pp_link"],[2783,"pp_symlink"],[2784,"pp_mkdir"],[2785,"pp_open_dir"],[2786,"pp_seekdir"],[2787,"pp_waitpid"],[2788,"pp_system"],[2789,"pp_exec"],[2790,"pp_kill"],[2791,"pp_setpgrp"],[2792,"pp_getpriority"],[2793,"pp_setpriority"],[2794,"pp_shmget"],[2795,"pp_shmctl"],[2796,"pp_shmread"],[2797,"pp_shmwrite"],[2798,"pp_msgget"],[2799,"pp_msgctl"],[2800,"pp_msgsnd"],[2801,"pp_msgrcv"],[2802,"pp_semget"],[2803,"pp_semctl"],[2804,"pp_semop"],[2805,"pp_ghbyaddr"],[2806,"pp_gnbyaddr"],[2807,"pp_gpbynumber"],[2808,"pp_gsbyname"],[2809,"pp_gsbyport"],[2810,"pp_syscall"],[2813,"pp_glob"],[2838,"pp_truncate"],[2861,"indirop"],[2927,"pp_prtf"],[2928,"pp_print"],[2929,"pp_say"],[2930,"pp_sort"],[2933,"mapop"],[2953,"pp_mapwhile"],[2954,"pp_grepwhile"],[2955,"pp_mapstart"],[2956,"pp_grepstart"],[2959,"pp_list"],[3032,"is_ifelse_cont"],[3039,"pp_cond_expr"],[3083,"pp_once"],[3091,"loop_common"],[3199,"pp_leaveloop"],[3202,"for_loop"],[3211,"pp_leavetry"],[3216,"_op_is_or_was"],[3223,"pp_null"],[3277,"padname"],[3283,"padany"],[3289,"pp_padsv"],[3295,"pp_padav"],[3296,"pp_padhv"],[3300,"pp_threadsv"],[3306,"gv_or_padgv"],[3316,"pp_gvsv"],[3324,"pp_gv"],[3331,"pp_aelemfast_lex"],[3341,"pp_aelemfast"],[3355,"rv2x"],[3385,"pp_rv2sv"],[3386,"pp_rv2hv"],[3387,"pp_rv2gv"],[3391,"pp_av2arylen"],[3403,"pp_rv2cv"],[3415,"list_const"],[3433,"pp_rv2av"],[3445,"is_subscriptable"],[3465,"elem_or_slice_array_name"],[3491,"elem_or_slice_single_index"],[3528,"elem"],[3551,"pp_aelem"],[3552,"pp_helem"],[3555,"pp_gelem"],[3567,"slice"],[3596,"pp_aslice"],[3597,"pp_kvaslice"],[3598,"pp_hslice"],[3599,"pp_kvhslice"],[3602,"pp_lslice"],[3613,"want_scalar"],[3618,"want_list"],[3623,"_method"],[3674,"method"],[3680,"e_method"],[3707,"check_proto"],[3785,"pp_entersub"],[3890,"pp_enterwrite"],[3895,"uninterp"],[3917,"re_uninterp"],[3943,"re_uninterp_extended"],[4006,"escape_str"],[4023,"escape_extended_re"],[4033,"unback"],[4041,"re_unback"],[4049,"balanced_delim"],[4077,"single_delim"],[4102,"split_float"],[4120,"const"],[4241,"const_dumper"],[4255,"const_sv"],[4264,"pp_const"],[4277,"dq"],[4314,"pp_backtick"],[4326,"dquote"],[4330,"__ANON__"],[4335,"pp_stringify"],[4340,"double_delim"],[4367,"pchr"],[4397,"collapse"],[4415,"tr_decode_byte"],[4460,"tr_chr"],[4473,"tr_decode_utf8"],[4568,"pp_trans"],[4589,"pp_transr"],[4592,"re_dq_disambiguate"],[4603,"re_dq"],[4639,"pure_string"],[4684,"regcomp"],[4708,"pp_regcomp"],[4713,"re_flags"],[4752,"matchop"],[4810,"pp_match"],[4811,"pp_pushre"],[4812,"pp_qr"],[4814,"pp_runcv"],[4817,"pp_split"],[4877,"pp_subst"],[4933,"is_lexical_subs"],[4941,"pp_introcv"],[4949,"pp_clonecv"],[4957,"pp_padcv"]],"digest":"bdaf97d28b09dac2a8d0267a6ac73fc2","file":"/usr/local/lib/perl5/5.20.1/B/Deparse.pm","condition":[[362,{"right":"ref $op->pmreplroot","op":"and","left":"class($op) eq 'PMOP'","type":"and_3"}],[362,{"op":"and","right":"${$op->pmreplroot;}","left":"class($op) eq 'PMOP' and ref $op->pmreplroot","type":"and_3"}],[362,{"right":"$op->pmreplroot->isa('B::OP')","op":"and","type":"and_3","left":"class($op) eq 'PMOP' and ref $op->pmreplroot and ${$op->pmreplroot;}"}],[438,{"op":"or","right":"exists $$self{'files'}{$cv->FILE}","type":"or_3","left":"$cv->FILE eq $0"}],[440,{"op":"and","right":"is_state($cv->START)","left":"not null($cv->START)","type":"and_3"}],[448,{"type":"or_3","left":"$is_form","right":"class($cv->STASH) eq 'SPECIAL'","op":"or"}],[466,{"type":"and_3","left":"defined $use_dec","op":"and","right":"$$self{'expand'} < 5"}],[576,{"right":"$module eq 'integer'","op":"or","left":"$module eq 'strict'","type":"or_3"}],[576,{"type":"or_3","left":"$module eq 'strict' or $module eq 'integer'","op":"or","right":"$module eq 'bytes'"}],[576,{"right":"$module eq 'warnings'","op":"or","type":"or_3","left":"$module eq 'strict' or $module eq 'integer' or $module eq 'bytes'"}],[576,{"type":"or_3","left":"$module eq 'strict' or $module eq 'integer' or $module eq 'bytes' or $module eq 'warnings'","right":"$module eq 'feature'","op":"or"}],[582,{"right":"length $args","op":"and","left":"defined $version","type":"and_3"}],[607,{"op":"||=","right":"{}","left":"$seen","type":"or_2"}],[617,{"left":"defined $A","type":"and_3","right":"class($A) eq 'GV'","op":"and"}],[617,{"right":"defined $A->CV","op":"and","left":"defined $A and class($A) eq 'GV'","type":"and_3"}],[617,{"right":"class($A->CV) eq 'CV'","op":"and","type":"and_3","left":"defined $A and class($A) eq 'GV' and defined $A->CV"}],[620,{"right":"exists $$self{'files'}{$AF}","op":"or","left":"$AF eq $0","type":"or_3"}],[612,{"left":"$class eq 'IV'","type":"and_3","op":"and","right":"not $val->FLAGS & 2048"}],[629,{"op":"and","right":"class($A) eq 'GV'","left":"defined $A","type":"and_3"}],[629,{"op":"and","right":"defined $A->CV","type":"and_3","left":"defined $A and class($A) eq 'GV'"}],[629,{"right":"class($A->CV) eq 'CV'","op":"and","type":"and_3","left":"defined $A and class($A) eq 'GV' and defined $A->CV"}],[632,{"type":"or_3","left":"$AF eq $0","right":"exists $$self{'files'}{$AF}","op":"or"}],[646,{"type":"and_3","left":"class($val->HV) ne 'SPECIAL'","op":"and","right":"$key =~ /::$/"}],[772,{"type":"or_3","left":"$/ ne \"\\n\"","right":"defined $O::savebackslash","op":"or"}],[773,{"right":"'undef'","op":"||","type":"or_2","left":"perlstring($/)"}],[774,{"op":"||","right":"'undef'","type":"or_2","left":"perlstring($O::savebackslash)"}],[848,{"type":"or_3","left":"$name eq 'integer'","right":"$name eq 'bytes'","op":"or"}],[848,{"right":"$name eq 'utf8'","op":"or","type":"or_3","left":"$name eq 'integer' or $name eq 'bytes'"}],[958,{"type":"or_3","left":"not defined $op","op":"or","right":"class($op) eq 'NULL'"}],[973,{"type":"or_3","left":"$cmd eq \"\\t\"","op":"or","right":"$cmd eq \"\\cH\""}],[999,{"op":"or","right":"$cv->isa('B::NULL')","left":"not defined $cv","type":"or_3"}],[1063,{"type":"or_3","left":"$op->first->name eq 'stub'","right":"$op->first->name eq 'nextstate'","op":"or"}],[1084,{"left":"$op->name eq 'leave' || $op->name eq 'scope' || $op->name eq 'lineseq'","type":"or_3","right":"$op->name eq 'null' && class($op) eq 'UNOP' && (is_scope($op->first) || $op->first->name eq 'enter')","op":"||"}],[1092,{"right":"$name eq 'setstate'","op":"||","type":"or_3","left":"$name eq 'nextstate' || $name eq 'dbstate'"}],[1097,{"op":"&&","right":"($op->first->name =~ /^(and|or)$/ && $op->first->first->sibling->name eq 'lineseq' || $op->first->name eq 'lineseq' && !null($op->first->first->sibling) && $op->first->first->sibling->name eq 'unstack')","left":"!null($op) && null($op->sibling) && $op->name eq 'null' && class($op) eq 'UNOP'","type":"and_3"}],[1117,{"right":"null($lseq)","op":"or","type":"or_3","left":"is_state($op)"}],[1119,{"right":"not null($lseq->first)","op":"and","left":"$lseq->first","type":"and_3"}],[1119,{"left":"$lseq->first and not null($lseq->first)","type":"and_3","op":"and","right":"is_state($lseq->first)"}],[1119,{"op":"and","right":"my $sib = $lseq->first->sibling","type":"and_3","left":"$lseq->first and not null($lseq->first) and is_state($lseq->first)"}],[1121,{"op":"&&","right":"$sib->name eq 'leaveloop'","type":"and_3","left":"!null($sib)"}],[1118,{"type":"and_3","left":"$lseq->name eq 'unstack'","right":"$lseq->flags & 128","op":"and"}],[1125,{"op":"&&","right":"$sib->name eq 'leaveloop'","type":"and_3","left":"$sib && !null($sib)"}],[1132,{"op":"||","right":"$op->flags & 4 && !null($op->first) && $op->first->name eq 'gvsv'","type":"or_3","left":"$op->name eq 'rv2sv' || $op->name eq 'padsv' || $op->name eq 'gv'"}],[1142,{"type":"and_3","left":"$prec == $cx","right":"$cx != 4","op":"and"}],[1142,{"type":"and_3","left":"$prec == $cx and $cx != 4","op":"and","right":"$cx != 16"}],[1142,{"right":"$cx != 21","op":"and","type":"and_3","left":"$prec == $cx and $cx != 4 and $cx != 16"}],[1142,{"left":"$prec < $cx","type":"or_3","right":"$prec == $cx and $cx != 4 and $cx != 16 and $cx != 21","op":"or"}],[1142,{"type":"or_3","left":"$prec < $cx or $prec == $cx and $cx != 4 and $cx != 16 and $cx != 21","op":"or","right":"$$self{'parens'}"}],[1159,{"type":"or_3","left":"$cx > 16","op":"or","right":"$$self{'parens'}"}],[1161,{"op":"and","right":"$kid =~ /^\\d+$/","type":"and_3","left":"$name eq 'umask'"}],[1167,{"type":"and_3","left":"$name eq 'umask'","right":"$kid =~ /^\\d+$/","op":"and"}],[1187,{"type":"or_3","left":"$prec <= $cx","op":"or","right":"substr($text, 0, 1) eq '('"}],[1187,{"type":"or_3","left":"$prec <= $cx or substr($text, 0, 1) eq '('","op":"or","right":"$$self{'parens'}"}],[1198,{"right":"not $$self{'avoid_local'}{$$op}","op":"and","left":"$op->private & (128 | $our_intro)","type":"and_3"}],[1202,{"type":"and_3","left":"utf8::decode($text)","right":"$text =~ /^\\W(\\w+::)*\\w+\\z/","op":"and"}],[1202,{"left":"$text =~ /^\\W(\\w+::)*\\w+\\z/","type":"or_3","op":"or","right":"utf8::decode($text) and $text =~ /^\\W(\\w+::)*\\w+\\z/"}],[1240,{"right":"not $$self{'avoid_local'}{$$op}","op":"and","left":"$op->private & 128","type":"and_3"}],[1244,{"left":"$forbid_parens","type":"or_3","right":"want_scalar($op)","op":"or"}],[1284,{"type":"and_3","left":"defined $nseq","right":"$nseq < $limit_seq","op":"and"}],[1284,{"right":"defined $nseq and $nseq < $limit_seq","op":"or","left":"not defined $limit_seq","type":"or_3"}],[1287,{"right":"$$self{'limit_seq'} < $limit_seq","op":"||","type":"or_3","left":"!defined($limit_seq)"}],[1287,{"left":"defined $$self{'limit_seq'}","type":"and_3","op":"and","right":"!defined($limit_seq) || $$self{'limit_seq'} < $limit_seq"}],[1298,{"op":"and","right":"defined $limit_seq","left":"defined $root","type":"and_3"}],[1298,{"right":"not $$self{'in_format'}","op":"and","left":"defined $root and defined $limit_seq","type":"and_3"}],[1403,{"left":"$stash eq 'main'","type":"and_3","op":"and","right":"$name =~ /^::/"}],[1403,{"op":"||","right":"$name =~ /^[^A-Za-z_:]/","type":"or_3","left":"$globalnames{$name}"}],[1403,{"op":"and","right":"$globalnames{$name} || $name =~ /^[^A-Za-z_:]/","type":"and_3","left":"$stash eq 'main'"}],[1403,{"left":"$stash eq $$self{'curstash'}","type":"and_3","right":"not $globalnames{$name}","op":"and"}],[1403,{"left":"$stash eq 'main'","type":"or_3","right":"!($name =~ /::/)","op":"||"}],[1403,{"op":"and","right":"$stash eq 'main' || !($name =~ /::/)","type":"and_3","left":"$stash eq $$self{'curstash'} and not $globalnames{$name}"}],[1403,{"left":"$stash eq 'main' and $globalnames{$name} || $name =~ /^[^A-Za-z_:]/","type":"or_3","right":"$stash eq $$self{'curstash'} and not $globalnames{$name} and $stash eq 'main' || !($name =~ /::/)","op":"or"}],[1416,{"left":"not $raw","type":"and_3","op":"and","right":"$name =~ /^(\\^..|{)/"}],[1431,{"type":"or_3","left":"$prefix eq '$'","right":"$prefix eq '@'","op":"or"}],[1431,{"type":"or_3","left":"$prefix eq '$' or $prefix eq '@'","right":"$prefix eq '%'","op":"or"}],[1431,{"right":"$prefix eq '$#'","op":"or","type":"or_3","left":"$prefix eq '$' or $prefix eq '@' or $prefix eq '%'"}],[1437,{"right":"$cx == 26","op":"and","left":"defined $cx","type":"and_3"}],[1470,{"right":"$name =~ /::/","op":"or","type":"or_3","left":"not $prefix"}],[1471,{"type":"and_3","left":"$name =~ /^(?!\\d)\\w/","right":"not $v =~ /^\\$[ab]\\z/","op":"and"}],[1471,{"right":"not $globalnames{$name}","op":"and","left":"$name =~ /^(?!\\d)\\w/ and not $v =~ /^\\$[ab]\\z/","type":"and_3"}],[1471,{"right":"$$self{'hints'} & $strict_bits{'vars'}","op":"and","type":"and_3","left":"$name =~ /^(?!\\d)\\w/ and not $v =~ /^\\$[ab]\\z/ and not $globalnames{$name}"}],[1471,{"type":"and_3","left":"$name =~ /^(?!\\d)\\w/ and not $v =~ /^\\$[ab]\\z/ and not $globalnames{$name} and $$self{'hints'} & $strict_bits{'vars'}","right":"not $self->lex_in_scope($v, 1)","op":"and"}],[1471,{"op":"or","right":"$self->lex_in_scope($v)","type":"or_3","left":"$name =~ /^(?!\\d)\\w/ and not $v =~ /^\\$[ab]\\z/ and not $globalnames{$name} and $$self{'hints'} & $strict_bits{'vars'} and not $self->lex_in_scope($v, 1)"}],[1492,{"left":"$seq > $st","type":"and_3","op":"and","right":"$seq <= $en"}],[1537,{"type":"and_3","left":"$o->name =~ /^pad.v$/","right":"$o->private & 128","op":"and"}],[1540,{"op":"or","right":"$s < $scope_st","left":"not defined $scope_st","type":"or_3"}],[1541,{"left":"not defined $scope_en","type":"or_3","right":"$e > $scope_en","op":"or"}],[1546,{"op":"or","right":"$c < $scope_st","type":"or_3","left":"not defined $scope_st"}],[1547,{"type":"or_3","left":"not defined $scope_en","op":"or","right":"$c > $scope_en"}],[1565,{"left":"class($op->sibling) ne 'NULL'","type":"and_3","right":"$op->sibling->flags & 4","op":"and"}],[1565,{"left":"class($op->sibling) ne 'NULL' and $op->sibling->flags & 4","type":"and_3","right":"my $nseq = $self->find_scope_st($op->sibling)","op":"and"}],[1569,{"op":"and","right":"$out_seq < $seq","left":"defined $out_seq","type":"and_3"}],[1579,{"type":"and_3","left":"scalar @{$$self{'subs_todo'};}","right":"$seq > $$self{'subs_todo'}[0][0]","op":"and"}],[1615,{"op":"and","right":"$$warnings == 4","left":"$warnings->isa('B::SPECIAL')","type":"and_3"}],[1615,{"right":"$$warnings == 5","op":"and","left":"$warnings->isa('B::SPECIAL')","type":"and_3"}],[1628,{"op":"||","right":"$$self{'warnings'} ne $warning_bits","type":"or_3","left":"!defined($$self{'warnings'})"}],[1628,{"left":"defined $warning_bits","type":"and_3","op":"and","right":"!defined($$self{'warnings'}) || $$self{'warnings'} ne $warning_bits"}],[1738,{"op":"&&","right":"$^V ge 5.15.6","type":"and_3","left":"$key =~ /^feature_/"}],[1739,{"op":"and","right":"not $doing_features","type":"and_3","left":"$is_feature"}],[1740,{"left":"not exists $$from{$key}","type":"or_3","right":"$$from{$key} ne $$to{$key}","op":"or"}],[1754,{"op":"&&","right":"$^V ge 5.15.6","type":"and_3","left":"$key =~ /^feature_/"}],[1755,{"type":"and_3","left":"$is_feature","op":"and","right":"not $doing_features"}],[1762,{"right":"@unfeatures","op":"or","type":"or_3","left":"@features"}],[1832,{"op":"and","right":"$hints != $feature::hint_mask","left":"$hints","type":"and_3"}],[1836,{"left":"$hh","type":"and_3","op":"and","right":"$$hh{\"feature_$feature_keywords{$name}\"}"}],[1840,{"left":"$name =~ /^(?:chom?p|do|exec|glob|s(?:elect|ystem))\\z/","type":"or_3","op":"||","right":"defined eval {\n\tdo {\n\tprototype \"CORE::$name\"\n}\n}"}],[1840,{"op":"or","right":"not $name =~ /^(?:chom?p|do|exec|glob|s(?:elect|ystem))\\z/ || defined eval {\n\tdo {\n\tprototype \"CORE::$name\"\n}\n}","left":"$strong_proto_keywords{$name}","type":"or_3"}],[1844,{"right":"exists &{\"$$self{'curstash'}::$name\";}","op":"or","type":"or_3","left":"exists $$self{'subs_declared'}{$name}"}],[1902,{"left":"$name eq '-'","type":"and_3","right":"$kid =~ /^[a-zA-Z](?!\\w)/","op":"&&"}],[1957,{"type":"and_3","left":"defined prototype $builtinname","right":"prototype($builtinname) =~ /^;?\\*/","op":"and"}],[1957,{"op":"and","right":"$kid->name eq 'rv2gv'","left":"defined prototype $builtinname and prototype($builtinname) =~ /^;?\\*/","type":"and_3"}],[2152,{"op":"and","right":"$op->first->name eq 'const'","type":"and_3","left":"class($op) eq 'UNOP'"}],[2152,{"left":"class($op) eq 'UNOP' and $op->first->name eq 'const'","type":"and_3","right":"$op->first->private & 64","op":"and"}],[2160,{"right":"$op->first->private & 2","op":"&&","type":"and_3","left":"$op->first->name eq 'const'"}],[2201,{"op":"and","right":"$cx < 1","type":"and_3","left":"$pre eq '{'"}],[2226,{"right":"$kid->sibling->name eq 'anoncode'","op":"and","type":"and_3","left":"not null($kid->sibling)"}],[2231,{"right":"not $kid->sibling->flags & 16","op":"and","type":"and_3","left":"$sib_name =~ /^(pad|rv2)[ah]v$/"}],[2240,{"right":"$kid->sibling->private & 8","op":"or","left":"$$self{'parens'}","type":"or_3"}],[2371,{"op":"and","right":"$op->first->name eq 'concat'","type":"and_3","left":"$name eq 'concat'"}],[2375,{"right":"class($op) eq 'UNOP'","op":"and","type":"and_3","left":"$name eq 'null'"}],[2375,{"right":"$op->first->name =~ /^(and|x?or)$/","op":"and","type":"and_3","left":"$name eq 'null' and class($op) eq 'UNOP'"}],[2375,{"right":"null($op->first->sibling)","op":"and","left":"$name eq 'null' and class($op) eq 'UNOP' and $op->first->name =~ /^(and|x?or)$/","type":"and_3"}],[2411,{"left":"$left{assoc_class($op)}","type":"and_3","op":"and","right":"$left{assoc_class($left)}"}],[2411,{"op":"and","right":"$left{assoc_class($op)} == $left{assoc_class($left)}","type":"and_3","left":"$left{assoc_class($op)} and $left{assoc_class($left)}"}],[2444,{"type":"and_3","left":"$right{assoc_class($op)}","op":"and","right":"$right{assoc_class($right)}"}],[2444,{"type":"and_3","left":"$right{assoc_class($op)} and $right{assoc_class($right)}","right":"$right{assoc_class($op)} == $right{assoc_class($right)}","op":"and"}],[2459,{"right":"$flags & 2","op":"and","left":"$op->flags & 64","type":"and_3"}],[2467,{"op":"and","right":"not $left =~ /^(my|our|local|)[\\@\\(]/","left":"$flags & 4","type":"and_3"}],[2538,{"left":"$op->flags & 64","type":"and_3","right":"$op->first->name ne 'concat'","op":"and"}],[2599,{"right":"is_scope($right)","op":"and","left":"$cx < 1","type":"and_3"}],[2599,{"right":"$blockname","op":"and","type":"and_3","left":"$cx < 1 and is_scope($right)"}],[2599,{"left":"$cx < 1 and is_scope($right) and $blockname","type":"and_3","right":"$$self{'expand'} < 7","op":"and"}],[2599,{"left":"$cx < 1","type":"and_3","op":"and","right":"$blockname"}],[2599,{"right":"not $$self{'parens'}","op":"and","left":"$cx < 1 and $blockname","type":"and_3"}],[2599,{"op":"and","right":"$$self{'expand'} < 7","left":"$cx < 1 and $blockname and not $$self{'parens'}","type":"and_3"}],[2599,{"left":"$cx > $lowprec","type":"and_3","right":"$highop","op":"and"}],[2659,{"op":"||","right":"$$self{'parens'}","left":"$cx >= 5","type":"or_3"}],[2660,{"left":"$kid","type":"or_3","right":"$op->first->sibling","op":"||="}],[2673,{"right":"$name eq 'select'","op":"||","type":"or_3","left":"defined $proto && $proto =~ /^;?\\*/"}],[2673,{"left":"defined $proto && $proto =~ /^;?\\*/ || $name eq 'select'","type":"and_3","right":"$kid->name eq 'rv2gv'","op":"and"}],[2673,{"right":"not $kid->private & 128","op":"and","left":"defined $proto && $proto =~ /^;?\\*/ || $name eq 'select' and $kid->name eq 'rv2gv'","type":"and_3"}],[2685,{"op":"and","right":"$first =~ /^\\d+$/","left":"$name eq 'chmod'","type":"and_3"}],[2688,{"right":"$nollafr","op":"||","type":"or_3","left":"$parens"}],[2688,{"left":"not $parens || $nollafr","type":"and_3","right":"substr($first, 0, 1) eq '('","op":"and"}],[2692,{"op":"and","right":"$proto =~ /^\\*\\*/","left":"defined $proto","type":"and_3"}],[2692,{"left":"defined $proto and $proto =~ /^\\*\\*/","type":"and_3","op":"and","right":"$kid->name eq 'rv2gv'"}],[2692,{"right":"not $kid->private & 128","op":"and","left":"defined $proto and $proto =~ /^\\*\\*/ and $kid->name eq 'rv2gv'","type":"and_3"}],[2700,{"left":"$name eq 'reverse'","type":"and_3","right":"$op->private & 8","op":"and"}],[2704,{"op":"and","right":"$op->flags & 64","type":"and_3","left":"$name =~ /^(system|exec)$/"}],[2704,{"left":"$name =~ /^(system|exec)$/ and $op->flags & 64","type":"and_3","right":"@exprs > 1","op":"and"}],[2713,{"right":"$nollafr","op":"and","left":"$parens","type":"and_3"}],[2819,{"op":"or","right":"$kid->name ne 'const'","type":"or_3","left":"$keyword =~ /^CORE::/"}],[2819,{"op":"or","right":"($text = $self->dq($kid)) =~ /^\\$?(\\w|::|\\`)+$/","type":"or_3","left":"$keyword =~ /^CORE::/ or $kid->name ne 'const'"}],[2819,{"left":"$keyword =~ /^CORE::/ or $kid->name ne 'const' or ($text = $self->dq($kid)) =~ /^\\$?(\\w|::|\\`)+$/","type":"or_3","op":"or","right":"$text =~ /[<>]/"}],[2825,{"left":"$cx >= 5","type":"or_3","op":"||","right":"$$self{'parens'}"}],[2841,{"left":"$cx >= 5","type":"or_3","op":"||","right":"$$self{'parens'}"}],[2849,{"right":"substr($fh, 0, 1) eq '('","op":"and","left":"not $parens","type":"and_3"}],[2869,{"op":"and","right":"$indir->private & 64","type":"and_3","left":"$indir->name eq 'const'"}],[2880,{"op":"and","right":"$op->private & 3","left":"$name eq 'sort'","type":"and_3"}],[2880,{"left":"$name eq 'sort'","type":"and_3","right":"$op->private & 16","op":"and"}],[2888,{"type":"and_3","left":"!$indir && $kid == $firstkid && $name eq 'sort'","right":"$firstkid->name eq 'entersub'","op":"&&"}],[2892,{"op":"and","right":"$op->private & 4","left":"$name eq 'sort'","type":"and_3"}],[2896,{"left":"$name eq 'sort'","type":"and_3","op":"and","right":"$op->private & 8"}],[2901,{"left":"$indir ne ''","type":"and_3","op":"and","right":"$name eq 'sort'"}],[2901,{"type":"and_3","left":"not $indir","right":"$name eq 'sort'","op":"and"}],[2901,{"right":"not null($op->first->sibling)","op":"and","type":"and_3","left":"not $indir and $name eq 'sort'"}],[2901,{"type":"and_3","left":"not $indir and $name eq 'sort' and not null($op->first->sibling)","right":"$op->first->sibling->name eq 'entersub'","op":"and"}],[2976,{"left":"$lop->private & 144","type":"or_3","op":"||","right":"$lop->name eq 'undef'"}],[2976,{"right":"$lop->name =~ /^(?:entersub|exit|open|split)\\z/","op":"or","type":"or_3","left":"not $lop->private & 144 || $lop->name eq 'undef'"}],[2983,{"right":"$lop->private & 16","op":"and","type":"and_3","left":"$lop->name =~ /^(gv|rv2)[ash]v$/"}],[2983,{"right":"$lop->first->name eq 'gvsv'","op":"and","left":"$lop->name eq 'null'","type":"and_3"}],[2983,{"left":"$lop->name eq 'null' and $lop->first->name eq 'gvsv'","type":"and_3","op":"and","right":"$lop->first->private & 16"}],[2983,{"op":"or","right":"$lop->name eq 'null' and $lop->first->name eq 'gvsv' and $lop->first->private & 16","type":"or_3","left":"$lop->name =~ /^(gv|rv2)[ash]v$/ and $lop->private & 16"}],[2983,{"type":"and_3","left":"$lop->name eq 'sort'","op":"&&","right":"$lop->flags & 4"}],[2983,{"left":"$lop->name ne 'undef'","type":"and_3","right":"not $lop->name eq 'sort' && $lop->flags & 4","op":"and"}],[3008,{"op":"and","right":"not $local","left":"null($kid->sibling)","type":"and_3"}],[3011,{"op":"and","right":"$kid->first->name eq 'gvsv'","left":"class($kid) eq 'UNOP'","type":"and_3"}],[3033,{"op":"&&","right":"is_scope($op->first->first->sibling)","type":"and_3","left":"$op->name eq 'null' && class($op) eq 'UNOP' && $op->first->name =~ /^(and|cond_expr)$/"}],[3045,{"right":"$true->name ne 'null'","op":"and","type":"and_3","left":"is_scope($true)"}],[3045,{"type":"and_3","left":"$cx < 1","op":"and","right":"(is_scope($true) and $true->name ne 'null')"}],[3045,{"type":"or_3","left":"is_scope($false)","op":"||","right":"is_ifelse_cont($false)"}],[3045,{"type":"and_3","left":"$cx < 1 and (is_scope($true) and $true->name ne 'null')","right":"is_scope($false) || is_ifelse_cont($false)","op":"and"}],[3045,{"right":"$$self{'expand'} < 7","op":"and","type":"and_3","left":"$cx < 1 and (is_scope($true) and $true->name ne 'null') and is_scope($false) || is_ifelse_cont($false)"}],[3058,{"right":"is_ifelse_cont($false)","op":"and","type":"and_3","left":"not null($false)"}],[3112,{"right":"$enter->private & 4","op":"and","type":"and_3","left":"$ary->name eq 'null'"}],[3112,{"op":"and","right":"not null($ary->first->sibling->sibling)","left":"$enter->flags & 64","type":"and_3"}],[3124,{"type":"and_3","left":"$enter->flags & 128","right":"$] < 5.009","op":"and"}],[3141,{"op":"or","right":"$body->first->name =~ /^(?:stub|leave|scope)$/","left":"is_state($body->first)","type":"or_3"}],[3163,{"right":"${$cont_start;} != ${$body->last;}","op":"and","type":"and_3","left":"$$cont_start != $$op"}],[3179,{"left":"defined $cond","type":"and_3","op":"and","right":"not is_scope($cont)"}],[3179,{"type":"and_3","left":"defined $cond and not is_scope($cont)","op":"and","right":"$$self{'expand'} < 3"}],[3218,{"type":"or_3","left":"$type == $expect_type","op":"||","right":"$type == 0 && $op->targ == $expect_type"}],[3225,{"op":"and","right":"$op->first->targ == 3","left":"$op->first->name eq 'null'","type":"and_3"}],[3225,{"left":"$op->first->name eq 'null' and $op->first->targ == 3","type":"and_3","right":"_op_is_or_was($op, 149)","op":"and"}],[3225,{"op":"or","right":"$op->first->name eq 'null' and $op->first->targ == 3 and _op_is_or_was($op, 149)","left":"$op->first->name eq 'pushmark'","type":"or_3"}],[3225,{"type":"and_3","left":"not null($op->first->sibling)","op":"and","right":"$op->first->sibling->name eq 'readline'"}],[3225,{"right":"$op->first->sibling->flags & 64","op":"and","left":"not null($op->first->sibling) and $op->first->sibling->name eq 'readline'","type":"and_3"}],[3225,{"type":"and_3","left":"not null($op->first->sibling)","right":"$op->first->sibling->name eq 'trans'","op":"and"}],[3225,{"op":"and","right":"$op->first->sibling->flags & 64","left":"not null($op->first->sibling) and $op->first->sibling->name eq 'trans'","type":"and_3"}],[3225,{"type":"and_3","left":"$op->flags & 128","right":"$cx < 1","op":"and"}],[3225,{"left":"$op->flags & 128 and $cx < 1","type":"and_3","op":"and","right":"not $op->targ"}],[3225,{"left":"not null($op->first->sibling)","type":"and_3","right":"$op->first->sibling->name eq 'null'","op":"and"}],[3225,{"left":"not null($op->first->sibling) and $op->first->sibling->name eq 'null'","type":"and_3","right":"class($op->first->sibling) eq 'UNOP'","op":"and"}],[3225,{"type":"and_3","left":"not null($op->first->sibling) and $op->first->sibling->name eq 'null' and class($op->first->sibling) eq 'UNOP'","right":"$op->first->sibling->first->flags & 64","op":"and"}],[3225,{"left":"not null($op->first->sibling) and $op->first->sibling->name eq 'null' and class($op->first->sibling) eq 'UNOP' and $op->first->sibling->first->flags & 64","type":"and_3","op":"and","right":"$op->first->sibling->first->name eq 'rcatline'"}],[3358,{"right":"not $op->can('first')","op":"or","type":"or_3","left":"class($op) eq 'NULL'"}],[3404,{"left":"not null($op->first)","type":"and_3","op":"and","right":"$op->first->name eq 'null'"}],[3404,{"op":"and","right":"$op->first->targ == 149","left":"not null($op->first) and $op->first->name eq 'null'","type":"and_3"}],[3418,{"right":"not grep((!/^-?\\d+$/), @a)","op":"and","left":"@a > 2","type":"and_3"}],[3455,{"type":"or_3","left":"$kid->name eq 'gv'","right":"$kid->name eq 'padcv'","op":"or"}],[3477,{"left":"not $allow_arrow","type":"and_3","op":"and","right":"$quoted"}],[3468,{"op":"or","right":"is_scalar($array)","left":"not $allow_arrow","type":"or_3"}],[3578,{"left":"$array->name eq $regname","type":"or_3","right":"$array->name eq 'null'","op":"or"}],[3627,{"left":"$kid->name eq 'list'","type":"and_3","right":"want_list($kid)","op":"and"}],[3649,{"op":"or","right":"$kid->name =~ /^method(?:_named)?\\z/","left":"null($kid->sibling)","type":"or_3"}],[3686,{"right":"want_list($$info{'object'})","op":"and","left":"$$info{'object'}->name eq 'scope'","type":"and_3"}],[3719,{"op":"or","right":"$chr eq '%'","type":"or_3","left":"$chr eq '@'"}],[3729,{"left":"$chr eq '$'","type":"or_3","right":"$chr eq '_'","op":"or"}],[3742,{"op":"and","right":"$arg->first->first->name eq 'rv2gv'","type":"and_3","left":"$arg->name =~ /^s?refgen$/"}],[3756,{"left":"$arg->name =~ /^s?refgen$/","type":"and_3","op":"and","right":"not null($real = $arg->first)"}],[3756,{"type":"or_3","left":"$chr =~ /\\$/ && is_scalar($real->first) || $chr =~ /@/ && class($real->first->sibling) ne 'NULL' && $real->first->sibling->name =~ /^(rv2|pad)av$/ || $chr =~ /%/ && class($real->first->sibling) ne 'NULL' && $real->first->sibling->name =~ /^(rv2|pad)hv$/","op":"||","right":"$chr =~ /\\*/ && $real->first->name eq 'rv2gv'"}],[3756,{"left":"$arg->name =~ /^s?refgen$/ and not null($real = $arg->first)","type":"and_3","right":"$chr =~ /\\$/ && is_scalar($real->first) || $chr =~ /@/ && class($real->first->sibling) ne 'NULL' && $real->first->sibling->name =~ /^(rv2|pad)av$/ || $chr =~ /%/ && class($real->first->sibling) ne 'NULL' && $real->first->sibling->name =~ /^(rv2|pad)hv$/ || $chr =~ /\\*/ && $real->first->name eq 'rv2gv'","op":"and"}],[3779,{"op":"and","right":"not $doneok","type":"and_3","left":"$proto"}],[3792,{"op":"and","right":"not $op->flags & 32","type":"and_3","left":"$op->flags & 128"}],[3804,{"op":"and","right":"$kid->first->name ne 'rv2cv'","left":"is_scalar($kid->first)","type":"and_3"}],[3826,{"type":"or_3","left":"is_subscriptable($kid->first)","right":"$kid->first->name eq 'padcv'","op":"||"}],[3838,{"right":"defined &{${$$self{'curstash'} . '::';}{$kid};} && !exists($$self{'subs_deparsed'}{$$self{'curstash'} . '::' . $kid}) && defined prototype $$self{'curstash'} . '::' . $kid","op":"||","type":"or_3","left":"exists $$self{'subs_declared'}{$kid}"}],[3843,{"op":"and","right":"defined $proto","left":"not $declared","type":"and_3"}],[3850,{"op":"and","right":"defined $proto","left":"$declared","type":"and_3"}],[3850,{"left":"$declared and defined $proto","type":"and_3","op":"and","right":"not $amper"}],[3858,{"right":"$amper","op":"or","left":"$prefix","type":"or_3"}],[3872,{"right":"is_scalar($exprs[0])","op":"and","type":"and_3","left":"$dproto eq '$'"}],[3872,{"right":"$simple","op":"||","type":"or_3","left":"defined $proto"}],[3872,{"type":"and_3","left":"$dproto ne '$'","op":"and","right":"defined $proto || $simple"}],[3929,{"op":"&&","right":"length $4","type":"and_3","left":"defined $4"}],[3955,{"op":"&&","right":"length $4","left":"defined $4","type":"and_3"}],[4078,{"op":"and","right":"index($str, $default) == -1","type":"and_3","left":"$default"}],[4139,{"type":"and_3","left":"$sv->FLAGS & 2048","op":"and","right":"$sv->can('RV')"}],[4208,{"right":"$$self{'curcv'}","op":"and","left":"$] > 5.0150051","type":"and_3"}],[4208,{"right":"$$self{'curcv'}->object_2svref == $ref->object_2svref","op":"and","type":"and_3","left":"$] > 5.0150051 and $$self{'curcv'}"}],[4224,{"left":"$$self{'in_subst_repl'}","type":"and_3","right":"$const =~ /^[0-9]/","op":"and"}],[4288,{"right":"$first =~ s/([\\$\\@])([A-Za-z_]\\w*)$/$1{$2}/","op":"and","left":"$last =~ /^[:'{\\[\\w_]/","type":"and_3"}],[4288,{"right":"$first =~ s/([\\$\\@])\\^$/$1{^}/","op":"and","type":"and_3","left":"$last =~ /^[A-Z\\\\\\^\\[\\]_?]/"}],[4342,{"op":"||","right":"$to =~ m[/]","left":"$from =~ m[/]","type":"or_3"}],[4342,{"right":"$succeed","op":"and","left":"($succeed, $from) = balanced_delim($from)","type":"and_3"}],[4345,{"right":"$succeed","op":"and","type":"and_3","left":"($succeed, $to) = balanced_delim($to)"}],[4368,{"type":"and_3","left":"$n >= 32","right":"$n <= 126","op":"and"}],[4368,{"right":"$n <= 26","op":"and","left":"$n >= 1","type":"and_3"}],[4402,{"type":"and_3","left":"$c <= $#chars - 2","op":"and","right":"$chars[$c + 1] == $tr + 1"}],[4402,{"type":"and_3","left":"$c <= $#chars - 2 and $chars[$c + 1] == $tr + 1","right":"$chars[$c + 2] == $tr + 2","op":"and"}],[4405,{"op":"and","right":"$chars[$c + 1] == $chars[$c] + 1","type":"and_3","left":"$c <= $#chars - 1"}],[4419,{"type":"or_3","left":"$table[44] == -1","op":"||","right":"$table[46] == -1"}],[4419,{"left":"$table[45] != -1","type":"and_3","op":"and","right":"$table[44] == -1 || $table[46] == -1"}],[4449,{"right":"not @to","op":"or","type":"or_3","left":"$flags & 128"}],[4450,{"type":"and_3","left":"$#to","op":"and","right":"$to[$#to] == $to[$#to - 1]"}],[4520,{"left":"defined $final","type":"and_3","op":"and","right":"$to[$#to][1] != $final"}],[4584,{"type":"and_3","left":"$from eq $to","op":"and","right":"$flags eq ''"}],[4594,{"right":"$first =~ s/([\\$\\@])([A-Za-z_]\\w*)$/$1{$2}/","op":"and","type":"and_3","left":"$last =~ /^[{\\[\\w_]/"}],[4594,{"op":"and","right":"$first =~ s/([\\$\\@])\\^$/$1{^}/","left":"$last =~ /^[A-Z\\\\\\^\\[\\]_?]/","type":"and_3"}],[4643,{"op":"or","right":"$type eq 'av2arylen'","type":"or_3","left":"$type eq 'const'"}],[4643,{"type":"or_3","left":"$type =~ /^(?:[ul]c(first)?|fc)$/","op":"or","right":"$type eq 'quotemeta'"}],[4651,{"op":"and","right":"$join_op->targ == 15","type":"and_3","left":"$join_op->name eq 'null'"}],[4661,{"type":"and_3","left":"$self->pure_string($op->first)","right":"$self->pure_string($op->last)","op":"&&"}],[4643,{"type":"or_3","left":"is_scalar($op)","right":"$type =~ /^[ah]elem$/","op":"or"}],[4643,{"left":"$type eq 'null'","type":"and_3","right":"$op->can('first')","op":"and"}],[4643,{"left":"$type eq 'null' and $op->can('first')","type":"and_3","right":"not null($op->first)","op":"and"}],[4643,{"right":"$op->first->name =~ /^aelemfast(?:_lex)?\\z/","op":"||","type":"or_3","left":"$op->first->name eq 'null' && $op->first->can('first') && !null($op->first->first) && $op->first->first->name eq 'aelemfast'"}],[4643,{"left":"$type eq 'null' and $op->can('first') and not null($op->first)","type":"and_3","op":"and","right":"$op->first->name eq 'null' && $op->first->can('first') && !null($op->first->first) && $op->first->first->name eq 'aelemfast' || $op->first->name =~ /^aelemfast(?:_lex)?\\z/"}],[4689,{"right":"not null($kid->first)","op":"and","type":"and_3","left":"$kid->name eq 'null'"}],[4689,{"right":"$kid->first->name eq 'pushmark'","op":"and","left":"$kid->name eq 'null' and not null($kid->first)","type":"and_3"}],[4723,{"left":"$$self{'hinthash'}{'reflags_charset'}","type":"or_3","right":"$$self{'hinthash'}{'feature_unicode'}","op":"||"}],[4723,{"op":"and","right":"$$self{'hinthash'}{'reflags_charset'} || $$self{'hinthash'}{'feature_unicode'}","type":"and_3","left":"$$self{'hinthash'}"}],[4723,{"left":"$$self{'hints'} & $feature::hint_mask","type":"and_3","right":"($$self{'hints'} & $feature::hint_mask) != $feature::hint_mask","op":"and"}],[4723,{"left":"$$self{'hints'} & $feature::hint_mask and ($$self{'hints'} & $feature::hint_mask) != $feature::hint_mask","type":"and_3","op":"and","right":"do {\n\t$$self{'hints'} & $feature::hint_uni8bit\n}"}],[4723,{"type":"or_3","left":"$$self{'hinthash'} and $$self{'hinthash'}{'reflags_charset'} || $$self{'hinthash'}{'feature_unicode'}","right":"$$self{'hints'} & $feature::hint_mask and ($$self{'hints'} & $feature::hint_mask) != $feature::hint_mask and do {\n\t$$self{'hints'} & $feature::hint_uni8bit\n}","op":"or"}],[4780,{"op":"and","right":"$matchop->flags & 128","type":"and_3","left":"$matchop->name =~ /^(?:match|transr?|subst)\\z/"}],[4830,{"op":"and","right":"$replroot > 0","left":"not ref $replroot","type":"and_3"}],[4845,{"right":"0","op":"||","left":"$kid->reflags","type":"or_2"}],[4845,{"type":"and_3","left":"$kid->flags & 128","op":"and","right":"$] < 5.009 ? $kid->pmflags & 0 : ($kid->reflags || 0) & 536870912"}],[4845,{"right":"$kid->flags & 128 and $] < 5.009 ? $kid->pmflags & 0 : ($kid->reflags || 0) & 536870912","op":"or","left":"$op->flags & 128","type":"or_3"}]],"start":{"1561":{"cop_subs":[{"condition":88,"statement":659,"time":null,"subroutine":53,"pod":45,"branch":213}]},"3415":{"list_const":[{"pod":404,"branch":414,"subroutine":416,"time":null,"condition":207,"statement":1690}]},"3341":{"pp_aelemfast":[{"statement":1656,"condition":204,"time":null,"subroutine":409,"branch":405,"pod":397}]},"3943":{"re_uninterp_extended":[{"time":null,"statement":1937,"condition":234,"branch":491,"pod":428,"subroutine":441}]},"2782":{"pp_link":[{"time":null,"condition":150,"statement":1345,"branch":331,"pod":337,"subroutine":348}]},"2480":{"pp_i_subtract":[{"branch":309,"pod":239,"subroutine":248,"time":null,"condition":127,"statement":1143}]},"3602":{"pp_lslice":[{"time":null,"condition":212,"statement":1783,"pod":418,"branch":444,"subroutine":430}]},"2006":{"pp_keys":[{"branch":270,"pod":119,"subroutine":128,"time":null,"condition":110,"statement":892}]},"1913":{"pp_predec":[{"subroutine":90,"branch":262,"pod":81,"statement":831,"condition":108,"time":null}]},"3083":{"pp_once":[{"pod":381,"branch":371,"subroutine":392,"time":null,"statement":1522,"condition":183}]},"2759":{"pp_sysseek":[{"branch":331,"pod":314,"subroutine":325,"time":null,"condition":150,"statement":1322}]},"4264":{"pp_const":[{"pod":439,"branch":538,"subroutine":452,"time":null,"statement":2087,"condition":240}]},"1525":{"find_scope_st":[{"time":null,"condition":83,"statement":639,"pod":42,"branch":204,"subroutine":50}]},"1091":{"is_state":[{"subroutine":22,"branch":133,"pod":18,"statement":421,"condition":33,"time":null}]},"2801":{"pp_msgrcv":[{"time":null,"statement":1364,"condition":150,"branch":331,"pod":356,"subroutine":367}]},"2770":{"pp_bind":[{"branch":331,"pod":325,"subroutine":336,"time":null,"condition":150,"statement":1333}]},"419":{"pessimise":[{"branch":11,"pod":null,"subroutine":2,"time":null,"condition":3,"statement":24}]},"1274":{"lineseq":[{"branch":156,"pod":29,"subroutine":35,"time":null,"condition":58,"statement":499}]},"2337":{"pp_fteread":[{"condition":117,"statement":1081,"time":null,"subroutine":213,"pod":204,"branch":301}]},"1692":{"declare_warnings":[{"subroutine":57,"pod":48,"branch":231,"statement":725,"condition":96,"time":null}]},"3331":{"pp_aelemfast_lex":[{"condition":204,"statement":1649,"time":null,"subroutine":408,"pod":396,"branch":404}]},"3289":{"pp_padsv":[{"statement":1628,"condition":204,"time":null,"subroutine":401,"pod":389,"branch":403}]},"2287":{"pp_ucfirst":[{"time":null,"statement":1049,"condition":117,"pod":186,"branch":295,"subroutine":195}]},"2641":{"pp_dorassign":[{"statement":1253,"condition":135,"time":null,"subroutine":294,"branch":317,"pod":283}]},"2735":{"pp_index":[{"time":null,"condition":150,"statement":1298,"branch":331,"pod":290,"subroutine":301}]},"2773":{"pp_accept":[{"time":null,"condition":150,"statement":1336,"branch":331,"pod":328,"subroutine":339}]},"1990":{"pp_rand":[{"condition":110,"statement":878,"time":null,"subroutine":114,"pod":105,"branch":270}]},"3296":{"pp_padhv":[{"subroutine":403,"branch":403,"pod":391,"statement":1632,"condition":204,"time":null}]},"2495":{"pp_ge":[{"time":null,"statement":1156,"condition":127,"branch":309,"pod":252,"subroutine":261}]},"2751":{"pp_pipe_op":[{"time":null,"statement":1314,"condition":150,"pod":306,"branch":331,"subroutine":317}]},"3623":{"_method":[{"subroutine":433,"branch":444,"pod":421,"statement":1795,"condition":212,"time":null}]},"2221":{"pp_refgen":[{"time":null,"condition":114,"statement":1014,"branch":284,"pod":180,"subroutine":189}]},"1912":{"pp_preinc":[{"branch":262,"pod":80,"subroutine":89,"time":null,"condition":108,"statement":830}]},"2039":{"pp_readdir":[{"condition":110,"statement":918,"time":null,"subroutine":154,"pod":145,"branch":270}]},"2500":{"pp_i_lt":[{"subroutine":266,"pod":257,"branch":309,"condition":127,"statement":1161,"time":null}]},"2122":{"pp_delete":[{"condition":110,"statement":968,"time":null,"subroutine":183,"branch":275,"pod":174}]},"2805":{"pp_ghbyaddr":[{"pod":360,"branch":331,"subroutine":371,"time":null,"statement":1368,"condition":150}]},"1920":{"pp_complement":[{"time":null,"statement":838,"condition":108,"pod":88,"branch":262,"subroutine":97}]},"3385":{"pp_rv2sv":[{"time":null,"statement":1678,"condition":205,"branch":412,"pod":399,"subroutine":411}]},"3300":{"pp_threadsv":[{"statement":1633,"condition":204,"time":null,"subroutine":404,"pod":392,"branch":403}]},"2928":{"pp_print":[{"subroutine":381,"branch":350,"pod":370,"statement":1433,"condition":166,"time":null}]},"2748":{"pp_die":[{"subroutine":314,"branch":331,"pod":303,"statement":1311,"condition":150,"time":null}]},"2013":{"pp_avalues":[{"branch":270,"pod":122,"subroutine":131,"time":null,"statement":895,"condition":110}]},"2289":{"pp_uc":[{"subroutine":197,"branch":295,"pod":188,"condition":117,"statement":1051,"time":null}]},"2781":{"pp_rename":[{"branch":331,"pod":336,"subroutine":347,"time":null,"condition":150,"statement":1344}]},"1232":{"padname_sv":[{"time":null,"condition":56,"statement":483,"branch":152,"pod":27,"subroutine":31}]},"2758":{"pp_sysopen":[{"condition":150,"statement":1321,"time":null,"subroutine":324,"pod":313,"branch":331}]},"1876":{"pp_ghostent":[{"condition":107,"statement":810,"time":null,"subroutine":73,"branch":260,"pod":64}]},"666":{"style_opts":[{"time":null,"statement":172,"condition":23,"pod":7,"branch":64,"subroutine":9}]},"4241":{"const_dumper":[{"branch":536,"pod":437,"subroutine":450,"time":null,"statement":2073,"condition":240}]},"1933":{"pp_i_negate":[{"time":null,"statement":845,"condition":108,"branch":263,"pod":91,"subroutine":100}]},"2511":{"pp_sle":[{"statement":1171,"condition":127,"time":null,"subroutine":276,"pod":267,"branch":309}]},"2723":{"pp_atan2":[{"subroutine":298,"pod":287,"branch":330,"condition":150,"statement":1292,"time":null}]},"2069":{"pp_gpwuid":[{"subroutine":173,"branch":272,"pod":164,"statement":940,"condition":110,"time":null}]},"2489":{"pp_bit_xor":[{"condition":127,"statement":1151,"time":null,"subroutine":256,"pod":247,"branch":309}]},"687":{"new":[{"statement":185,"condition":23,"time":null,"subroutine":10,"pod":8,"branch":68}]},"4811":{"pp_pushre":[{"branch":650,"pod":460,"subroutine":474,"time":null,"statement":2394,"condition":275}]},"2101":{"pp_leavewhen":[{"time":null,"condition":110,"statement":959,"branch":273,"pod":172,"subroutine":181}]},"1110":{"is_for_loop":[{"time":null,"statement":425,"condition":35,"branch":133,"pod":20,"subroutine":24}]},"2046":{"pp_alarm":[{"subroutine":161,"pod":152,"branch":270,"statement":925,"condition":110,"time":null}]},"2335":{"pp_ftrwrite":[{"branch":301,"pod":202,"subroutine":211,"time":null,"condition":117,"statement":1079}]},"2630":{"logassignop":[{"subroutine":291,"pod":281,"branch":317,"condition":135,"statement":1244,"time":null}]},"2255":{"pp_srefgen":[{"statement":1031,"condition":117,"time":null,"subroutine":191,"pod":182,"branch":290}]},"2792":{"pp_getpriority":[{"subroutine":358,"branch":331,"pod":347,"statement":1355,"condition":150,"time":null}]},"3707":{"check_proto":[{"branch":450,"pod":423,"subroutine":436,"time":null,"condition":215,"statement":1834}]},"827":{"coderef2text":[{"pod":12,"branch":92,"subroutine":15,"time":null,"condition":26,"statement":273}]},"965":{"indent":[{"time":null,"condition":29,"statement":336,"branch":114,"pod":14,"subroutine":18}]},"2042":{"pp_closedir":[{"branch":270,"pod":148,"subroutine":157,"time":null,"statement":921,"condition":110}]},"2778":{"pp_unlink":[{"pod":333,"branch":331,"subroutine":344,"time":null,"statement":1341,"condition":150}]},"2575":{"range":[{"branch":313,"pod":275,"subroutine":284,"time":null,"condition":128,"statement":1211}]},"1826":{"keyword":[{"time":null,"condition":102,"statement":780,"branch":252,"pod":55,"subroutine":64}]},"764":{"__ANON__":[{"time":null,"condition":26,"statement":273,"pod":12,"branch":92,"subroutine":14}]},"2047":{"pp_sleep":[{"subroutine":162,"pod":153,"branch":270,"condition":110,"statement":926,"time":null}]},"1996":{"pp_hex":[{"condition":110,"statement":884,"time":null,"subroutine":120,"branch":270,"pod":111}]},"3596":{"pp_aslice":[{"pod":414,"branch":444,"subroutine":426,"time":null,"condition":212,"statement":1779}]},"2338":{"pp_ftewrite":[{"pod":205,"branch":301,"subroutine":214,"time":null,"statement":1082,"condition":117}]},"1984":{"pp_study":[{"subroutine":109,"branch":270,"pod":100,"condition":110,"statement":873,"time":null}]},"3597":{"pp_kvaslice":[{"time":null,"condition":212,"statement":1780,"branch":444,"pod":415,"subroutine":427}]},"2956":{"pp_grepstart":[{"pod":377,"branch":353,"subroutine":388,"time":null,"condition":166,"statement":1454}]},"1362":{"__ANON__":[{"subroutine":42,"pod":35,"branch":173,"statement":560,"condition":64,"time":null}]},"1898":{"pfixop":[{"time":null,"condition":107,"statement":825,"pod":79,"branch":260,"subroutine":88}]},"1781":{"hint_pragmas":[{"time":null,"condition":102,"statement":767,"branch":247,"pod":51,"subroutine":60}]},"2786":{"pp_seekdir":[{"condition":150,"statement":1349,"time":null,"subroutine":352,"pod":341,"branch":331}]},"1890":{"pp_getlogin":[{"subroutine":87,"branch":260,"pod":78,"condition":107,"statement":824,"time":null}]},"3202":{"for_loop":[{"subroutine":395,"pod":384,"branch":390,"statement":1596,"condition":190,"time":null}]},"2038":{"pp_rmdir":[{"condition":110,"statement":917,"time":null,"subroutine":153,"branch":270,"pod":144}]},"1454":{"stash_variable_name":[{"time":null,"condition":76,"statement":600,"branch":189,"pod":38,"subroutine":46}]},"3598":{"pp_hslice":[{"branch":444,"pod":416,"subroutine":428,"time":null,"condition":212,"statement":1781}]},"2071":{"pp_ggrgid":[{"time":null,"condition":110,"statement":942,"pod":166,"branch":272,"subroutine":175}]},"2499":{"pp_i_ne":[{"pod":256,"branch":309,"subroutine":265,"time":null,"condition":127,"statement":1160}]},"2621":{"pp_and":[{"statement":1240,"condition":135,"time":null,"subroutine":287,"branch":317,"pod":277}]},"2044":{"pp_localtime":[{"branch":270,"pod":150,"subroutine":159,"time":null,"statement":923,"condition":110}]},"2032":{"pp_getsockname":[{"time":null,"statement":912,"condition":110,"branch":270,"pod":139,"subroutine":148}]},"762":{"compile":[{"pod":11,"branch":78,"subroutine":13,"time":null,"condition":23,"statement":225}]},"2807":{"pp_gpbynumber":[{"branch":331,"pod":362,"subroutine":373,"time":null,"statement":1370,"condition":150}]},"2209":{"pp_anonlist":[{"time":null,"statement":1008,"condition":114,"branch":283,"pod":179,"subroutine":188}]},"955":{"deparse":[{"subroutine":17,"pod":14,"branch":113,"statement":331,"condition":28,"time":null}]},"2504":{"pp_i_ncmp":[{"pod":261,"branch":309,"subroutine":270,"time":null,"condition":127,"statement":1165}]},"4810":{"pp_match":[{"subroutine":473,"pod":459,"branch":650,"statement":2393,"condition":275,"time":null}]},"2250":{"e_anoncode":[{"condition":117,"statement":1028,"time":null,"subroutine":190,"pod":181,"branch":290}]},"3295":{"pp_padav":[{"time":null,"statement":1631,"condition":204,"pod":390,"branch":403,"subroutine":402}]},"2073":{"pp_lock":[{"time":null,"statement":943,"condition":110,"pod":167,"branch":272,"subroutine":176}]},"1195":{"maybe_local":[{"subroutine":29,"branch":145,"pod":25,"statement":463,"condition":53,"time":null}]},"4933":{"is_lexical_subs":[{"time":null,"statement":2453,"condition":279,"pod":465,"branch":665,"subroutine":479}]},"2502":{"pp_i_ge":[{"statement":1163,"condition":127,"time":null,"subroutine":268,"pod":259,"branch":309}]},"4473":{"tr_decode_utf8":[{"subroutine":463,"pod":449,"branch":580,"statement":2200,"condition":254,"time":null}]},"2953":{"pp_mapwhile":[{"time":null,"statement":1451,"condition":166,"pod":374,"branch":353,"subroutine":385}]},"2482":{"pp_i_modulo":[{"subroutine":250,"pod":241,"branch":309,"statement":1145,"condition":127,"time":null}]},"2332":{"pp_lstat":[{"subroutine":208,"branch":301,"pod":199,"condition":117,"statement":1076,"time":null}]},"2506":{"pp_seq":[{"subroutine":271,"pod":262,"branch":309,"condition":127,"statement":1166,"time":null}]},"3216":{"_op_is_or_was":[{"time":null,"statement":1604,"condition":190,"pod":386,"branch":391,"subroutine":397}]},"1924":{"real_negate":[{"branch":262,"pod":90,"subroutine":99,"time":null,"condition":108,"statement":840}]},"3283":{"padany":[{"time":null,"statement":1625,"condition":204,"branch":403,"pod":388,"subroutine":400}]},"2765":{"pp_fcntl":[{"branch":331,"pod":320,"subroutine":331,"time":null,"statement":1328,"condition":150}]},"2743":{"pp_splice":[{"condition":150,"statement":1306,"time":null,"subroutine":309,"pod":298,"branch":331}]},"1946":{"unop":[{"time":null,"condition":108,"statement":851,"branch":264,"pod":93,"subroutine":102}]},"2037":{"pp_readlink":[{"statement":916,"condition":110,"time":null,"subroutine":152,"branch":270,"pod":143}]},"454":{"next_todo":[{"branch":15,"pod":3,"subroutine":5,"time":null,"condition":6,"statement":42}]},"2026":{"pp_untie":[{"statement":906,"condition":110,"time":null,"subroutine":142,"branch":270,"pod":133}]},"4330":{"__ANON__":[{"branch":553,"pod":443,"subroutine":456,"time":null,"statement":2123,"condition":242}]},"3324":{"pp_gv":[{"pod":395,"branch":404,"subroutine":407,"time":null,"condition":204,"statement":1645}]},"1995":{"pp_int":[{"statement":883,"condition":110,"time":null,"subroutine":119,"branch":270,"pod":110}]},"1979":{"pp_chomp":[{"branch":270,"pod":95,"subroutine":104,"time":null,"condition":110,"statement":868}]},"3618":{"want_list":[{"time":null,"statement":1793,"condition":212,"pod":420,"branch":444,"subroutine":432}]},"2479":{"pp_i_multiply":[{"pod":238,"branch":309,"subroutine":247,"time":null,"condition":127,"statement":1142}]},"2507":{"pp_sne":[{"subroutine":272,"pod":263,"branch":309,"statement":1167,"condition":127,"time":null}]},"4713":{"re_flags":[{"branch":628,"pod":457,"subroutine":471,"time":null,"condition":269,"statement":2341}]},"2149":{"pp_require":[{"condition":110,"statement":978,"time":null,"subroutine":184,"branch":278,"pod":175}]},"2804":{"pp_semop":[{"pod":359,"branch":331,"subroutine":370,"time":null,"condition":150,"statement":1367}]},"2002":{"pp_chr":[{"condition":110,"statement":889,"time":null,"subroutine":125,"pod":116,"branch":270}]},"2959":{"pp_list":[{"time":null,"statement":1455,"condition":166,"pod":378,"branch":353,"subroutine":389}]},"3199":{"pp_leaveloop":[{"subroutine":394,"branch":390,"pod":383,"condition":190,"statement":1595,"time":null}]},"2478":{"pp_i_add":[{"subroutine":246,"branch":309,"pod":237,"condition":127,"statement":1141,"time":null}]},"2065":{"pp_snetent":[{"subroutine":169,"pod":160,"branch":272,"condition":110,"statement":936,"time":null}]},"2311":{"pp_goto":[{"condition":117,"statement":1065,"time":null,"subroutine":205,"pod":196,"branch":298}]},"2035":{"pp_chdir":[{"subroutine":150,"branch":270,"pod":141,"statement":914,"condition":110,"time":null}]},"1882":{"pp_eprotoent":[{"condition":107,"statement":816,"time":null,"subroutine":79,"branch":260,"pod":70}]},"1267":{"DESTROY":[{"subroutine":34,"branch":156,"pod":29,"condition":58,"statement":498,"time":null}]},"1936":{"pp_not":[{"subroutine":101,"branch":263,"pod":92,"condition":108,"statement":846,"time":null}]},"2477":{"pp_modulo":[{"subroutine":245,"pod":236,"branch":309,"condition":127,"statement":1140,"time":null}]},"2796":{"pp_shmread":[{"subroutine":362,"branch":331,"pod":351,"condition":150,"statement":1359,"time":null}]},"2776":{"pp_ssockopt":[{"statement":1339,"condition":150,"time":null,"subroutine":342,"pod":331,"branch":331}]},"3890":{"pp_enterwrite":[{"time":null,"condition":233,"statement":1929,"pod":425,"branch":490,"subroutine":438}]},"2015":{"pp_pop":[{"pod":124,"branch":270,"subroutine":133,"time":null,"statement":897,"condition":110}]},"2079":{"givwhen":[{"pod":170,"branch":272,"subroutine":179,"time":null,"statement":946,"condition":110}]},"3567":{"slice":[{"subroutine":425,"branch":440,"pod":413,"statement":1758,"condition":211,"time":null}]},"3211":{"pp_leavetry":[{"subroutine":396,"pod":385,"branch":391,"condition":190,"statement":1602,"time":null}]},"2549":{"pp_repeat":[{"time":null,"condition":128,"statement":1192,"branch":311,"pod":274,"subroutine":283}]},"2514":{"pp_sassign":[{"pod":269,"branch":309,"subroutine":278,"time":null,"condition":127,"statement":1173}]},"2018":{"pp_caller":[{"statement":899,"condition":110,"time":null,"subroutine":135,"pod":126,"branch":270}]},"2810":{"pp_syscall":[{"subroutine":376,"pod":365,"branch":331,"statement":1373,"condition":150,"time":null}]},"4589":{"pp_transr":[{"time":null,"condition":256,"statement":2278,"branch":600,"pod":451,"subroutine":465}]},"2172":{"pp_scalar":[{"subroutine":185,"pod":176,"branch":281,"statement":987,"condition":113,"time":null}]},"2501":{"pp_i_gt":[{"condition":127,"statement":1162,"time":null,"subroutine":267,"pod":258,"branch":309}]},"3551":{"pp_aelem":[{"subroutine":422,"branch":438,"pod":410,"statement":1747,"condition":211,"time":null}]},"2040":{"pp_telldir":[{"time":null,"statement":919,"condition":110,"branch":270,"pod":146,"subroutine":155}]},"2290":{"pp_lc":[{"branch":295,"pod":189,"subroutine":198,"time":null,"condition":117,"statement":1052}]},"1140":{"maybe_parens":[{"subroutine":26,"branch":137,"pod":22,"statement":436,"condition":43,"time":null}]},"2315":{"ftst":[{"branch":298,"pod":198,"subroutine":207,"time":null,"condition":117,"statement":1067}]},"3555":{"pp_gelem":[{"time":null,"condition":211,"statement":1749,"branch":438,"pod":412,"subroutine":424}]},"4603":{"re_dq":[{"statement":2282,"condition":258,"time":null,"subroutine":467,"pod":453,"branch":601}]},"2041":{"pp_rewinddir":[{"pod":147,"branch":270,"subroutine":156,"time":null,"condition":110,"statement":920}]},"4033":{"unback":[{"subroutine":444,"branch":495,"pod":431,"condition":235,"statement":1962,"time":null}]},"4102":{"split_float":[{"subroutine":448,"pod":435,"branch":507,"statement":2001,"condition":236,"time":null}]},"3403":{"pp_rv2cv":[{"condition":205,"statement":1686,"time":null,"subroutine":415,"pod":403,"branch":413}]},"2352":{"pp_ftdir":[{"pod":219,"branch":301,"subroutine":228,"time":null,"statement":1096,"condition":117}]},"4949":{"pp_clonecv":[{"statement":2460,"condition":279,"time":null,"subroutine":481,"branch":666,"pod":467}]},"2955":{"pp_mapstart":[{"statement":1453,"condition":166,"time":null,"subroutine":387,"branch":353,"pod":376}]},"1238":{"maybe_my":[{"time":null,"condition":56,"statement":486,"pod":28,"branch":152,"subroutine":32}]},"4326":{"dquote":[{"time":null,"condition":242,"statement":2117,"pod":442,"branch":552,"subroutine":455}]},"4335":{"pp_stringify":[{"time":null,"condition":242,"statement":2123,"branch":553,"pod":443,"subroutine":457}]},"2739":{"pp_crypt":[{"subroutine":305,"branch":331,"pod":294,"condition":150,"statement":1302,"time":null}]},"2509":{"pp_sgt":[{"condition":127,"statement":1169,"time":null,"subroutine":274,"pod":265,"branch":309}]},"2738":{"pp_formline":[{"condition":150,"statement":1301,"time":null,"subroutine":304,"pod":293,"branch":331}]},"3599":{"pp_kvhslice":[{"pod":417,"branch":444,"subroutine":429,"time":null,"condition":212,"statement":1782}]},"2190":{"anon_hash_or_list":[{"statement":996,"condition":113,"time":null,"subroutine":187,"pod":178,"branch":282}]},"2025":{"pp_umask":[{"subroutine":141,"pod":132,"branch":270,"statement":905,"condition":110,"time":null}]},"1587":{"_features_from_bundle":[{"subroutine":55,"branch":216,"pod":47,"condition":92,"statement":672,"time":null}]},"382":{"_pessimise_walk_exe":[{"condition":3,"statement":12,"time":null,"subroutine":1,"pod":null,"branch":5}]},"2749":{"pp_return":[{"statement":1312,"condition":150,"time":null,"subroutine":315,"pod":304,"branch":331}]},"3445":{"is_subscriptable":[{"statement":1707,"condition":208,"time":null,"subroutine":418,"pod":406,"branch":419}]},"2806":{"pp_gnbyaddr":[{"pod":361,"branch":331,"subroutine":372,"time":null,"statement":1369,"condition":150}]},"2348":{"pp_ftsock":[{"time":null,"condition":117,"statement":1092,"branch":301,"pod":215,"subroutine":224}]},"2508":{"pp_slt":[{"statement":1168,"condition":127,"time":null,"subroutine":273,"branch":309,"pod":264}]},"2780":{"pp_utime":[{"subroutine":346,"pod":335,"branch":331,"condition":150,"statement":1343,"time":null}]},"4277":{"dq":[{"subroutine":453,"branch":539,"pod":440,"statement":2093,"condition":240,"time":null}]},"2310":{"pp_redo":[{"subroutine":204,"branch":298,"pod":195,"condition":117,"statement":1064,"time":null}]},"2409":{"deparse_binop_left":[{"subroutine":238,"branch":304,"pod":229,"condition":121,"statement":1112,"time":null}]},"2076":{"pp_break":[{"time":null,"condition":110,"statement":945,"branch":272,"pod":169,"subroutine":178}]},"2785":{"pp_open_dir":[{"time":null,"condition":150,"statement":1348,"branch":331,"pod":340,"subroutine":351}]},"2498":{"pp_i_eq":[{"subroutine":264,"pod":255,"branch":309,"statement":1159,"condition":127,"time":null}]},"2473":{"pp_add":[{"subroutine":241,"pod":232,"branch":309,"condition":127,"statement":1136,"time":null}]},"2530":{"pp_concat":[{"condition":127,"statement":1179,"time":null,"subroutine":281,"branch":310,"pod":272}]},"2757":{"pp_read":[{"statement":1320,"condition":150,"time":null,"subroutine":323,"pod":312,"branch":331}]},"327":{"_pessimise_walk":[{"subroutine":null,"branch":null,"pod":null,"condition":null,"statement":null,"time":null}]},"2001":{"pp_ord":[{"subroutine":124,"pod":115,"branch":270,"condition":110,"statement":888,"time":null}]},"4460":{"tr_chr":[{"subroutine":462,"branch":578,"pod":448,"condition":254,"statement":2195,"time":null}]},"1427":{"stash_variable":[{"time":null,"statement":588,"condition":72,"branch":182,"pod":37,"subroutine":45}]},"1861":{"pp_stub":[{"time":null,"condition":107,"statement":799,"branch":259,"pod":57,"subroutine":66}]},"1993":{"pp_log":[{"time":null,"statement":881,"condition":110,"branch":270,"pod":108,"subroutine":117}]},"4812":{"pp_qr":[{"time":null,"statement":2395,"condition":275,"branch":650,"pod":461,"subroutine":475}]},"2488":{"pp_bit_or":[{"time":null,"condition":127,"statement":1150,"branch":309,"pod":246,"subroutine":255}]},"3032":{"is_ifelse_cont":[{"condition":176,"statement":1491,"time":null,"subroutine":390,"branch":368,"pod":379}]},"1998":{"pp_abs":[{"subroutine":122,"branch":270,"pod":113,"statement":886,"condition":110,"time":null}]},"2291":{"pp_quotemeta":[{"condition":117,"statement":1053,"time":null,"subroutine":199,"pod":190,"branch":295}]},"2063":{"pp_gpbyname":[{"statement":934,"condition":110,"time":null,"subroutine":167,"pod":158,"branch":272}]},"2005":{"pp_values":[{"subroutine":127,"pod":118,"branch":270,"statement":891,"condition":110,"time":null}]},"3386":{"pp_rv2hv":[{"pod":400,"branch":412,"subroutine":412,"time":null,"condition":205,"statement":1679}]},"2789":{"pp_exec":[{"subroutine":355,"pod":344,"branch":331,"condition":150,"statement":1352,"time":null}]},"2342":{"pp_ftrowned":[{"subroutine":218,"pod":209,"branch":301,"statement":1086,"condition":117,"time":null}]},"1881":{"pp_enetent":[{"subroutine":78,"branch":260,"pod":69,"statement":815,"condition":107,"time":null}]},"2274":{"dq_unop":[{"statement":1041,"condition":117,"time":null,"subroutine":194,"branch":292,"pod":185}]},"1985":{"pp_ref":[{"time":null,"condition":110,"statement":874,"pod":101,"branch":270,"subroutine":110}]},"4957":{"pp_padcv":[{"condition":279,"statement":2465,"time":null,"subroutine":482,"pod":468,"branch":666}]},"4255":{"const_sv":[{"pod":438,"branch":537,"subroutine":451,"time":null,"statement":2082,"condition":240}]},"2791":{"pp_setpgrp":[{"time":null,"statement":1354,"condition":150,"pod":346,"branch":331,"subroutine":357}]},"4817":{"pp_split":[{"time":null,"condition":275,"statement":2397,"branch":650,"pod":463,"subroutine":477}]},"2656":{"listop":[{"time":null,"condition":135,"statement":1259,"branch":319,"pod":285,"subroutine":296}]},"4592":{"re_dq_disambiguate":[{"time":null,"statement":2279,"condition":256,"pod":452,"branch":600,"subroutine":466}]},"3552":{"pp_helem":[{"pod":411,"branch":438,"subroutine":423,"time":null,"statement":1748,"condition":211}]},"2745":{"pp_unshift":[{"time":null,"statement":1308,"condition":150,"pod":300,"branch":331,"subroutine":311}]},"2493":{"pp_lt":[{"subroutine":259,"branch":309,"pod":250,"condition":127,"statement":1154,"time":null}]},"2503":{"pp_i_le":[{"subroutine":269,"pod":260,"branch":309,"condition":127,"statement":1164,"time":null}]},"4568":{"pp_trans":[{"pod":450,"branch":594,"subroutine":464,"time":null,"statement":2263,"condition":255}]},"4041":{"re_unback":[{"subroutine":445,"branch":495,"pod":432,"statement":1965,"condition":235,"time":null}]},"2343":{"pp_ftzero":[{"branch":301,"pod":210,"subroutine":219,"time":null,"condition":117,"statement":1087}]},"2475":{"pp_subtract":[{"statement":1138,"condition":127,"time":null,"subroutine":243,"pod":234,"branch":309}]},"1797":{"pp_dbstate":[{"statement":777,"condition":102,"time":null,"subroutine":61,"branch":252,"pod":52}]},"2750":{"pp_open":[{"branch":331,"pod":305,"subroutine":316,"time":null,"statement":1313,"condition":150}]},"2024":{"pp_fileno":[{"pod":131,"branch":270,"subroutine":140,"time":null,"condition":110,"statement":904}]},"1919":{"pp_i_postdec":[{"time":null,"statement":837,"condition":108,"branch":262,"pod":87,"subroutine":96}]},"3316":{"pp_gvsv":[{"condition":204,"statement":1641,"time":null,"subroutine":406,"pod":394,"branch":404}]},"1131":{"is_scalar":[{"subroutine":25,"branch":137,"pod":21,"condition":42,"statement":434,"time":null}]},"2793":{"pp_setpriority":[{"pod":348,"branch":331,"subroutine":359,"time":null,"condition":150,"statement":1356}]},"1597":{"pp_nextstate":[{"pod":47,"branch":216,"subroutine":56,"time":null,"statement":677,"condition":92}]},"2336":{"pp_ftrexec":[{"subroutine":212,"pod":203,"branch":301,"statement":1080,"condition":117,"time":null}]},"1914":{"pp_postinc":[{"statement":832,"condition":108,"time":null,"subroutine":91,"branch":262,"pod":82}]},"996":{"deparse_sub":[{"branch":119,"pod":15,"subroutine":19,"time":null,"condition":30,"statement":357}]},"1798":{"pp_setstate":[{"time":null,"statement":778,"condition":102,"pod":53,"branch":252,"subroutine":62}]},"1468":{"maybe_qualify":[{"subroutine":47,"pod":39,"branch":191,"condition":76,"statement":609,"time":null}]},"2050":{"pp_dofile":[{"time":null,"condition":110,"statement":927,"branch":270,"pod":154,"subroutine":163}]},"3674":{"method":[{"time":null,"condition":214,"statement":1817,"pod":421,"branch":447,"subroutine":434}]},"1875":{"pp_tms":[{"branch":260,"pod":63,"subroutine":72,"time":null,"statement":809,"condition":107}]},"2761":{"pp_syswrite":[{"time":null,"condition":150,"statement":1324,"pod":316,"branch":331,"subroutine":327}]},"2347":{"pp_ftctime":[{"statement":1091,"condition":117,"time":null,"subroutine":223,"pod":214,"branch":301}]},"3223":{"pp_null":[{"time":null,"condition":191,"statement":1607,"pod":386,"branch":391,"subroutine":398}]},"2359":{"pp_fttext":[{"time":null,"condition":117,"statement":1103,"pod":226,"branch":301,"subroutine":235}]},"4415":{"tr_decode_byte":[{"branch":570,"pod":447,"subroutine":461,"time":null,"statement":2163,"condition":250}]},"2346":{"pp_ftatime":[{"time":null,"statement":1090,"condition":117,"branch":301,"pod":213,"subroutine":222}]},"747":{"init":[{"condition":23,"statement":218,"time":null,"subroutine":12,"pod":10,"branch":76}]},"1483":{"lex_in_scope":[{"time":null,"statement":614,"condition":82,"branch":194,"pod":40,"subroutine":48}]},"2838":{"pp_truncate":[{"time":null,"condition":154,"statement":1383,"pod":367,"branch":334,"subroutine":378}]},"4397":{"collapse":[{"subroutine":460,"pod":446,"branch":569,"condition":247,"statement":2153,"time":null}]},"1883":{"pp_eservent":[{"statement":817,"condition":107,"time":null,"subroutine":80,"branch":260,"pod":71}]},"1530":{"find_scope":[{"condition":83,"statement":641,"time":null,"subroutine":52,"branch":204,"pod":44}]},"2755":{"pp_sselect":[{"subroutine":321,"branch":331,"pod":310,"statement":1318,"condition":150,"time":null}]},"2349":{"pp_ftchr":[{"statement":1093,"condition":117,"time":null,"subroutine":225,"pod":216,"branch":301}]},"2014":{"pp_akeys":[{"pod":123,"branch":270,"subroutine":132,"time":null,"condition":110,"statement":896}]},"3391":{"pp_av2arylen":[{"subroutine":414,"pod":402,"branch":412,"condition":205,"statement":1681,"time":null}]},"1293":{"__ANON__":[{"statement":522,"condition":64,"time":null,"subroutine":36,"pod":30,"branch":163}]},"2075":{"pp_continue":[{"condition":110,"statement":944,"time":null,"subroutine":177,"branch":272,"pod":168}]},"3465":{"elem_or_slice_array_name":[{"branch":425,"pod":407,"subroutine":419,"time":null,"condition":209,"statement":1720}]},"2486":{"pp_right_shift":[{"pod":244,"branch":309,"subroutine":253,"time":null,"statement":1148,"condition":127}]},"1884":{"pp_gpwent":[{"subroutine":81,"pod":72,"branch":260,"condition":107,"statement":818,"time":null}]},"2308":{"pp_last":[{"time":null,"condition":117,"statement":1062,"pod":193,"branch":298,"subroutine":202}]},"2756":{"pp_select":[{"branch":331,"pod":311,"subroutine":322,"time":null,"statement":1319,"condition":150}]},"2639":{"pp_andassign":[{"time":null,"condition":135,"statement":1251,"pod":281,"branch":317,"subroutine":292}]},"2055":{"pp_entereval":[{"time":null,"statement":931,"condition":110,"branch":271,"pod":155,"subroutine":164}]},"2784":{"pp_mkdir":[{"condition":150,"statement":1347,"time":null,"subroutine":350,"branch":331,"pod":339}]},"1916":{"pp_i_preinc":[{"statement":834,"condition":108,"time":null,"subroutine":93,"branch":262,"pod":84}]},"2777":{"pp_chown":[{"branch":331,"pod":332,"subroutine":343,"time":null,"condition":150,"statement":1340}]},"2764":{"pp_seek":[{"branch":331,"pod":319,"subroutine":330,"time":null,"statement":1327,"condition":150}]},"2510":{"pp_sge":[{"condition":127,"statement":1170,"time":null,"subroutine":275,"pod":266,"branch":309}]},"2357":{"pp_ftsvtx":[{"subroutine":233,"branch":301,"pod":224,"statement":1101,"condition":117,"time":null}]},"2036":{"pp_chroot":[{"statement":915,"condition":110,"time":null,"subroutine":151,"pod":142,"branch":270}]},"4120":{"const":[{"statement":2012,"condition":236,"time":null,"subroutine":449,"pod":436,"branch":508}]},"2929":{"pp_say":[{"subroutine":382,"pod":371,"branch":350,"condition":166,"statement":1434,"time":null}]},"3355":{"rv2x":[{"time":null,"condition":204,"statement":1665,"pod":398,"branch":408,"subroutine":410}]},"2334":{"pp_ftrread":[{"subroutine":210,"pod":201,"branch":301,"statement":1078,"condition":117,"time":null}]},"2740":{"pp_unpack":[{"time":null,"condition":150,"statement":1303,"branch":331,"pod":295,"subroutine":306}]},"493":{"begin_is_use":[{"subroutine":6,"pod":4,"branch":23,"condition":7,"statement":70,"time":null}]},"3917":{"re_uninterp":[{"pod":427,"branch":490,"subroutine":440,"time":null,"condition":233,"statement":1933}]},"1185":{"maybe_parens_func":[{"statement":458,"condition":51,"time":null,"subroutine":28,"pod":24,"branch":144}]},"2028":{"pp_dbmclose":[{"time":null,"statement":908,"condition":110,"pod":135,"branch":270,"subroutine":144}]},"1997":{"pp_oct":[{"subroutine":121,"pod":112,"branch":270,"condition":110,"statement":885,"time":null}]},"1259":{"AUTOLOAD":[{"statement":494,"condition":58,"time":null,"subroutine":33,"branch":155,"pod":29}]},"1574":{"seq_subs":[{"pod":46,"branch":215,"subroutine":54,"time":null,"statement":665,"condition":91}]},"2783":{"pp_symlink":[{"branch":331,"pod":338,"subroutine":349,"time":null,"statement":1346,"condition":150}]},"2512":{"pp_scmp":[{"subroutine":277,"pod":268,"branch":309,"condition":127,"statement":1172,"time":null}]},"2062":{"pp_gnbyname":[{"time":null,"statement":933,"condition":110,"branch":272,"pod":157,"subroutine":166}]},"1526":{"find_scope_en":[{"time":null,"condition":83,"statement":640,"branch":204,"pod":43,"subroutine":51}]},"2794":{"pp_shmget":[{"subroutine":360,"branch":331,"pod":349,"statement":1357,"condition":150,"time":null}]},"4006":{"escape_str":[{"branch":492,"pod":429,"subroutine":442,"time":null,"statement":1941,"condition":235}]},"2043":{"pp_getpgrp":[{"branch":270,"pod":149,"subroutine":158,"time":null,"condition":110,"statement":922}]},"2333":{"pp_stat":[{"time":null,"condition":117,"statement":1077,"branch":301,"pod":200,"subroutine":209}]},"2345":{"pp_ftmtime":[{"time":null,"statement":1089,"condition":117,"branch":301,"pod":212,"subroutine":221}]},"1986":{"pp_pos":[{"pod":102,"branch":270,"subroutine":111,"time":null,"condition":110,"statement":875}]},"1305":{"scopeop":[{"time":null,"statement":522,"condition":64,"pod":30,"branch":163,"subroutine":37}]},"2752":{"pp_tie":[{"branch":331,"pod":307,"subroutine":318,"time":null,"statement":1315,"condition":150}]},"2288":{"pp_lcfirst":[{"statement":1050,"condition":117,"time":null,"subroutine":196,"branch":295,"pod":187}]},"2799":{"pp_msgctl":[{"subroutine":365,"pod":354,"branch":331,"statement":1362,"condition":150,"time":null}]},"2766":{"pp_ioctl":[{"subroutine":332,"pod":321,"branch":331,"statement":1329,"condition":150,"time":null}]},"1873":{"pp_getppid":[{"statement":807,"condition":107,"time":null,"subroutine":70,"pod":61,"branch":260}]},"431":{"null":[{"time":null,"statement":28,"condition":3,"pod":1,"branch":11,"subroutine":3}]},"2019":{"pp_reset":[{"subroutine":136,"branch":270,"pod":127,"statement":900,"condition":110,"time":null}]},"4049":{"balanced_delim":[{"subroutine":446,"pod":433,"branch":495,"statement":1968,"condition":235,"time":null}]},"2788":{"pp_system":[{"time":null,"condition":150,"statement":1351,"branch":331,"pod":343,"subroutine":354}]},"2356":{"pp_ftsgid":[{"subroutine":232,"pod":223,"branch":301,"condition":117,"statement":1100,"time":null}]},"2753":{"pp_binmode":[{"subroutine":319,"branch":331,"pod":308,"statement":1316,"condition":150,"time":null}]},"3895":{"uninterp":[{"statement":1930,"condition":233,"time":null,"subroutine":439,"pod":426,"branch":490}]},"2485":{"pp_left_shift":[{"subroutine":252,"branch":309,"pod":243,"statement":1147,"condition":127,"time":null}]},"3091":{"loop_common":[{"pod":382,"branch":371,"subroutine":393,"time":null,"condition":183,"statement":1526}]},"2496":{"pp_le":[{"subroutine":262,"branch":309,"pod":253,"statement":1157,"condition":127,"time":null}]},"2802":{"pp_semget":[{"subroutine":368,"pod":357,"branch":331,"statement":1365,"condition":150,"time":null}]},"2762":{"pp_send":[{"branch":331,"pod":317,"subroutine":328,"time":null,"condition":150,"statement":1325}]},"1915":{"pp_postdec":[{"pod":83,"branch":262,"subroutine":92,"time":null,"condition":108,"statement":833}]},"1878":{"pp_gprotoent":[{"branch":260,"pod":66,"subroutine":75,"time":null,"statement":812,"condition":107}]},"2010":{"pp_boolkeys":[{"pod":120,"branch":270,"subroutine":129,"time":null,"statement":893,"condition":110}]},"1730":{"declare_hinthash":[{"condition":96,"statement":739,"time":null,"subroutine":59,"pod":50,"branch":233}]},"2774":{"pp_shutdown":[{"statement":1337,"condition":150,"time":null,"subroutine":340,"pod":329,"branch":331}]},"2933":{"mapop":[{"statement":1436,"condition":166,"time":null,"subroutine":384,"branch":350,"pod":373}]},"2474":{"pp_multiply":[{"time":null,"condition":127,"statement":1137,"pod":233,"branch":309,"subroutine":242}]},"2803":{"pp_semctl":[{"pod":358,"branch":331,"subroutine":369,"time":null,"condition":150,"statement":1366}]},"2813":{"pp_glob":[{"subroutine":377,"pod":366,"branch":331,"statement":1374,"condition":150,"time":null}]},"1397":{"gv_name":[{"time":null,"condition":64,"statement":575,"pod":36,"branch":177,"subroutine":44}]},"2481":{"pp_i_divide":[{"pod":240,"branch":309,"subroutine":249,"time":null,"statement":1144,"condition":127}]},"2258":{"pp_readline":[{"branch":290,"pod":183,"subroutine":192,"time":null,"condition":117,"statement":1032}]},"2494":{"pp_gt":[{"condition":127,"statement":1155,"time":null,"subroutine":260,"branch":309,"pod":251}]},"1345":{"pp_lineseq":[{"branch":171,"pod":32,"subroutine":39,"time":null,"condition":64,"statement":548}]},"1980":{"pp_schop":[{"subroutine":105,"pod":96,"branch":270,"condition":110,"statement":869,"time":null}]},"1083":{"is_scope":[{"branch":133,"pod":17,"subroutine":21,"time":null,"statement":419,"condition":32}]},"1157":{"maybe_parens_unop":[{"subroutine":27,"branch":139,"pod":23,"condition":48,"statement":443,"time":null}]},"2016":{"pp_shift":[{"pod":125,"branch":270,"subroutine":134,"time":null,"statement":898,"condition":110}]},"2790":{"pp_kill":[{"subroutine":356,"pod":345,"branch":331,"condition":150,"statement":1353,"time":null}]},"3613":{"want_scalar":[{"condition":212,"statement":1791,"time":null,"subroutine":431,"pod":419,"branch":444}]},"2184":{"padval":[{"pod":177,"branch":282,"subroutine":186,"time":null,"condition":113,"statement":993}]},"2295":{"loopex":[{"subroutine":201,"pod":192,"branch":295,"condition":117,"statement":1055,"time":null}]},"2454":{"binop":[{"subroutine":240,"branch":306,"pod":231,"condition":125,"statement":1122,"time":null}]},"2004":{"pp_each":[{"time":null,"statement":890,"condition":110,"pod":117,"branch":270,"subroutine":126}]},"1981":{"pp_schomp":[{"time":null,"statement":870,"condition":110,"branch":270,"pod":97,"subroutine":106}]},"1983":{"pp_undef":[{"condition":110,"statement":872,"time":null,"subroutine":108,"branch":270,"pod":99}]},"2787":{"pp_waitpid":[{"statement":1350,"condition":150,"time":null,"subroutine":353,"pod":342,"branch":331}]},"2622":{"pp_or":[{"time":null,"condition":135,"statement":1241,"pod":278,"branch":317,"subroutine":288}]},"2775":{"pp_gsockopt":[{"pod":330,"branch":331,"subroutine":341,"time":null,"condition":150,"statement":1338}]},"3680":{"e_method":[{"branch":447,"pod":422,"subroutine":435,"time":null,"condition":214,"statement":1820}]},"2344":{"pp_ftsize":[{"time":null,"statement":1088,"condition":117,"branch":301,"pod":211,"subroutine":220}]},"4814":{"pp_runcv":[{"condition":275,"statement":2396,"time":null,"subroutine":476,"branch":650,"pod":462}]},"2772":{"pp_listen":[{"pod":327,"branch":331,"subroutine":338,"time":null,"condition":150,"statement":1335}]},"1880":{"pp_ehostent":[{"branch":260,"pod":68,"subroutine":77,"time":null,"statement":814,"condition":107}]},"2030":{"pp_eof":[{"branch":270,"pod":137,"subroutine":146,"time":null,"statement":910,"condition":110}]},"1992":{"pp_exp":[{"statement":880,"condition":110,"time":null,"subroutine":116,"pod":107,"branch":270}]},"2000":{"pp_length":[{"time":null,"condition":110,"statement":887,"pod":114,"branch":270,"subroutine":123}]},"4877":{"pp_subst":[{"branch":656,"pod":464,"subroutine":478,"time":null,"statement":2416,"condition":279}]},"2797":{"pp_shmwrite":[{"subroutine":363,"branch":331,"pod":352,"condition":150,"statement":1360,"time":null}]},"2809":{"pp_gsbyport":[{"time":null,"statement":1372,"condition":150,"branch":331,"pod":364,"subroutine":375}]},"1879":{"pp_gservent":[{"time":null,"condition":107,"statement":813,"pod":67,"branch":260,"subroutine":76}]},"2760":{"pp_sysread":[{"time":null,"statement":1323,"condition":150,"branch":331,"pod":315,"subroutine":326}]},"2354":{"pp_ftlink":[{"condition":117,"statement":1098,"time":null,"subroutine":230,"branch":301,"pod":221}]},"2023":{"pp_close":[{"time":null,"condition":110,"statement":903,"pod":130,"branch":270,"subroutine":139}]},"2068":{"pp_gpwnam":[{"condition":110,"statement":939,"time":null,"subroutine":172,"pod":163,"branch":272}]},"1874":{"pp_time":[{"branch":260,"pod":62,"subroutine":71,"time":null,"statement":808,"condition":107}]},"2353":{"pp_ftpipe":[{"condition":117,"statement":1097,"time":null,"subroutine":229,"pod":220,"branch":301}]},"1346":{"pp_leave":[{"condition":64,"statement":549,"time":null,"subroutine":40,"branch":171,"pod":33}]},"2350":{"pp_ftblk":[{"time":null,"condition":117,"statement":1094,"branch":301,"pod":217,"subroutine":226}]},"2358":{"pp_fttty":[{"subroutine":234,"pod":225,"branch":301,"statement":1102,"condition":117,"time":null}]},"2800":{"pp_msgsnd":[{"subroutine":366,"branch":331,"pod":355,"statement":1363,"condition":150,"time":null}]},"2930":{"pp_sort":[{"time":null,"condition":166,"statement":1435,"pod":372,"branch":350,"subroutine":383}]},"2070":{"pp_ggrnam":[{"pod":165,"branch":272,"subroutine":174,"time":null,"statement":941,"condition":110}]},"4639":{"pure_string":[{"pod":454,"branch":612,"subroutine":468,"time":null,"condition":258,"statement":2303}]},"2029":{"pp_getc":[{"condition":110,"statement":909,"time":null,"subroutine":145,"pod":136,"branch":270}]},"2595":{"logop":[{"subroutine":286,"branch":314,"pod":277,"statement":1223,"condition":128,"time":null}]},"1889":{"pp_egrent":[{"time":null,"condition":107,"statement":823,"pod":77,"branch":260,"subroutine":86}]},"2360":{"pp_ftbinary":[{"subroutine":236,"pod":227,"branch":301,"statement":1104,"condition":117,"time":null}]},"1870":{"pp_wantarray":[{"statement":804,"condition":107,"time":null,"subroutine":67,"pod":58,"branch":260}]},"2339":{"pp_fteexec":[{"time":null,"condition":117,"statement":1083,"pod":206,"branch":301,"subroutine":215}]},"2623":{"pp_dor":[{"subroutine":289,"pod":279,"branch":317,"condition":135,"statement":1242,"time":null}]},"4684":{"regcomp":[{"branch":624,"pod":455,"subroutine":469,"time":null,"statement":2323,"condition":267}]},"1703":{"declare_hints":[{"pod":49,"branch":233,"subroutine":58,"time":null,"condition":96,"statement":730}]},"2066":{"pp_sprotoent":[{"subroutine":170,"branch":272,"pod":161,"statement":937,"condition":110,"time":null}]},"2355":{"pp_ftsuid":[{"subroutine":231,"branch":301,"pod":222,"statement":1099,"condition":117,"time":null}]},"2768":{"pp_socket":[{"branch":331,"pod":323,"subroutine":334,"time":null,"statement":1331,"condition":150}]},"2808":{"pp_gsbyname":[{"condition":150,"statement":1371,"time":null,"subroutine":374,"branch":331,"pod":363}]},"2483":{"pp_pow":[{"subroutine":251,"pod":242,"branch":309,"condition":127,"statement":1146,"time":null}]},"654":{"print_protos":[{"subroutine":8,"branch":63,"pod":6,"condition":23,"statement":164,"time":null}]},"2746":{"pp_reverse":[{"statement":1309,"condition":150,"time":null,"subroutine":312,"pod":301,"branch":331}]},"3306":{"gv_or_padgv":[{"subroutine":405,"branch":403,"pod":393,"statement":1636,"condition":204,"time":null}]},"2640":{"pp_orassign":[{"time":null,"condition":135,"statement":1252,"branch":317,"pod":282,"subroutine":293}]},"841":{"ambient_pragmas":[{"subroutine":16,"branch":93,"pod":13,"condition":26,"statement":278,"time":null}]},"2309":{"pp_next":[{"subroutine":203,"pod":194,"branch":298,"statement":1063,"condition":117,"time":null}]},"1352":{"deparse_root":[{"time":null,"condition":64,"statement":550,"branch":171,"pod":34,"subroutine":41}]},"1855":{"baseop":[{"statement":796,"condition":107,"time":null,"subroutine":65,"pod":56,"branch":259}]},"436":{"todo":[{"condition":3,"statement":30,"time":null,"subroutine":4,"branch":11,"pod":2}]},"4023":{"escape_extended_re":[{"condition":235,"statement":1955,"time":null,"subroutine":443,"pod":430,"branch":493}]},"2861":{"indirop":[{"time":null,"condition":156,"statement":1398,"branch":337,"pod":368,"subroutine":379}]},"2585":{"pp_flop":[{"condition":128,"statement":1218,"time":null,"subroutine":285,"pod":276,"branch":313}]},"2771":{"pp_connect":[{"time":null,"statement":1334,"condition":150,"branch":331,"pod":326,"subroutine":337}]},"1982":{"pp_defined":[{"time":null,"statement":871,"condition":110,"branch":270,"pod":98,"subroutine":107}]},"594":{"stash_subs":[{"time":null,"statement":127,"condition":12,"branch":46,"pod":5,"subroutine":7}]},"1498":{"populate_curcvlex":[{"condition":83,"statement":625,"time":null,"subroutine":49,"pod":41,"branch":199}]},"3528":{"elem":[{"pod":409,"branch":433,"subroutine":421,"time":null,"statement":1737,"condition":211}]},"2341":{"pp_fteowned":[{"subroutine":217,"branch":301,"pod":208,"statement":1085,"condition":117,"time":null}]},"1877":{"pp_gnetent":[{"pod":65,"branch":260,"subroutine":74,"time":null,"condition":107,"statement":811}]},"1988":{"pp_sin":[{"subroutine":112,"branch":270,"pod":103,"condition":110,"statement":876,"time":null}]},"2518":{"pp_smartmatch":[{"time":null,"statement":1175,"condition":127,"pod":271,"branch":309,"subroutine":280}]},"2487":{"pp_bit_and":[{"condition":127,"statement":1149,"time":null,"subroutine":254,"branch":309,"pod":245}]},"2927":{"pp_prtf":[{"subroutine":380,"branch":350,"pod":369,"condition":166,"statement":1432,"time":null}]},"4752":{"matchop":[{"time":null,"statement":2356,"condition":274,"branch":637,"pod":458,"subroutine":472}]},"1885":{"pp_spwent":[{"branch":260,"pod":73,"subroutine":82,"time":null,"condition":107,"statement":819}]},"1368":{"walk_lineseq":[{"pod":35,"branch":173,"subroutine":43,"time":null,"condition":64,"statement":560}]},"2744":{"pp_push":[{"subroutine":310,"pod":299,"branch":331,"statement":1307,"condition":150,"time":null}]},"2492":{"pp_ne":[{"subroutine":258,"pod":249,"branch":309,"condition":127,"statement":1153,"time":null}]},"2515":{"pp_aassign":[{"condition":127,"statement":1174,"time":null,"subroutine":279,"pod":270,"branch":309}]},"2267":{"pp_rcatline":[{"time":null,"statement":1038,"condition":117,"pod":184,"branch":292,"subroutine":193}]},"2725":{"pp_substr":[{"statement":1293,"condition":150,"time":null,"subroutine":299,"pod":288,"branch":330}]},"2497":{"pp_ncmp":[{"branch":309,"pod":254,"subroutine":263,"time":null,"statement":1158,"condition":127}]},"2033":{"pp_getpeername":[{"branch":270,"pod":140,"subroutine":149,"time":null,"statement":913,"condition":110}]},"3039":{"pp_cond_expr":[{"branch":368,"pod":380,"subroutine":391,"time":null,"statement":1493,"condition":177}]},"2779":{"pp_chmod":[{"time":null,"statement":1342,"condition":150,"branch":331,"pod":334,"subroutine":345}]},"2045":{"pp_gmtime":[{"subroutine":160,"branch":270,"pod":151,"statement":924,"condition":110,"time":null}]},"1872":{"pp_wait":[{"branch":260,"pod":60,"subroutine":69,"time":null,"condition":107,"statement":806}]},"4340":{"double_delim":[{"time":null,"condition":242,"statement":2124,"pod":444,"branch":553,"subroutine":458}]},"3491":{"elem_or_slice_single_index":[{"condition":211,"statement":1731,"time":null,"subroutine":420,"pod":408,"branch":432}]},"2312":{"pp_dump":[{"pod":197,"branch":298,"subroutine":206,"time":null,"statement":1066,"condition":117}]},"1886":{"pp_epwent":[{"time":null,"statement":820,"condition":107,"branch":260,"pod":74,"subroutine":83}]},"3387":{"pp_rv2gv":[{"pod":401,"branch":412,"subroutine":413,"time":null,"condition":205,"statement":1680}]},"4708":{"pp_regcomp":[{"condition":269,"statement":2339,"time":null,"subroutine":470,"branch":628,"pod":456}]},"2767":{"pp_flock":[{"condition":150,"statement":1330,"time":null,"subroutine":333,"branch":331,"pod":322}]},"1051":{"deparse_format":[{"subroutine":20,"pod":16,"branch":131,"statement":394,"condition":31,"time":null}]},"1344":{"pp_scope":[{"time":null,"statement":547,"condition":64,"pod":31,"branch":171,"subroutine":38}]},"1096":{"is_miniwhile":[{"statement":423,"condition":34,"time":null,"subroutine":23,"pod":19,"branch":133}]},"1871":{"pp_fork":[{"branch":260,"pod":59,"subroutine":68,"time":null,"condition":107,"statement":805}]},"2747":{"pp_warn":[{"branch":331,"pod":302,"subroutine":313,"time":null,"condition":150,"statement":1310}]},"2061":{"pp_ghbyname":[{"subroutine":165,"branch":272,"pod":156,"condition":110,"statement":932,"time":null}]},"1978":{"pp_chop":[{"condition":110,"statement":867,"time":null,"subroutine":103,"branch":270,"pod":94}]},"4367":{"pchr":[{"time":null,"condition":245,"statement":2139,"branch":558,"pod":445,"subroutine":459}]},"3277":{"padname":[{"subroutine":399,"branch":403,"pod":387,"statement":1622,"condition":204,"time":null}]},"2031":{"pp_tell":[{"subroutine":147,"pod":138,"branch":270,"statement":911,"condition":110,"time":null}]},"3785":{"pp_entersub":[{"subroutine":437,"pod":424,"branch":467,"condition":222,"statement":1872,"time":null}]},"1994":{"pp_sqrt":[{"subroutine":118,"branch":270,"pod":109,"statement":882,"condition":110,"time":null}]},"2491":{"pp_eq":[{"pod":248,"branch":309,"subroutine":257,"time":null,"condition":127,"statement":1152}]},"-1":{"__COVER__":[{"condition":279,"statement":2468,"time":null,"subroutine":483,"branch":666,"pod":469}]},"2644":{"rv2gv_or_string":[{"branch":317,"pod":284,"subroutine":295,"time":null,"statement":1254,"condition":135}]},"2627":{"pp_xor":[{"subroutine":290,"pod":280,"branch":317,"statement":1243,"condition":135,"time":null}]},"2442":{"deparse_binop_right":[{"pod":230,"branch":305,"subroutine":239,"time":null,"condition":123,"statement":1117}]},"4314":{"pp_backtick":[{"statement":2111,"condition":242,"time":null,"subroutine":454,"pod":441,"branch":550}]},"2798":{"pp_msgget":[{"branch":331,"pod":353,"subroutine":364,"time":null,"statement":1361,"condition":150}]},"2754":{"pp_dbmopen":[{"time":null,"statement":1317,"condition":150,"pod":309,"branch":331,"subroutine":320}]},"2532":{"real_concat":[{"time":null,"statement":1180,"condition":127,"branch":310,"pod":273,"subroutine":282}]},"2027":{"pp_tied":[{"time":null,"condition":110,"statement":907,"pod":134,"branch":270,"subroutine":143}]},"1917":{"pp_i_predec":[{"subroutine":94,"pod":85,"branch":262,"condition":108,"statement":835,"time":null}]},"1918":{"pp_i_postinc":[{"condition":108,"statement":836,"time":null,"subroutine":95,"branch":262,"pod":86}]},"2369":{"assoc_class":[{"pod":228,"branch":301,"subroutine":237,"time":null,"statement":1105,"condition":117}]},"4941":{"pp_introcv":[{"subroutine":480,"branch":666,"pod":466,"statement":2457,"condition":279,"time":null}]},"2742":{"pp_join":[{"time":null,"condition":150,"statement":1305,"pod":297,"branch":331,"subroutine":308}]},"1922":{"pp_negate":[{"subroutine":98,"pod":89,"branch":262,"condition":108,"statement":839,"time":null}]},"2012":{"pp_aeach":[{"subroutine":130,"branch":270,"pod":121,"statement":894,"condition":110,"time":null}]},"1887":{"pp_ggrent":[{"statement":821,"condition":107,"time":null,"subroutine":84,"pod":75,"branch":260}]},"2064":{"pp_shostent":[{"subroutine":168,"pod":159,"branch":272,"condition":110,"statement":935,"time":null}]},"4077":{"single_delim":[{"subroutine":447,"pod":434,"branch":502,"condition":235,"statement":1989,"time":null}]},"2104":{"pp_exists":[{"statement":960,"condition":110,"time":null,"subroutine":182,"branch":273,"pod":173}]},"2763":{"pp_recv":[{"time":null,"condition":150,"statement":1326,"branch":331,"pod":318,"subroutine":329}]},"2737":{"pp_sprintf":[{"branch":331,"pod":292,"subroutine":303,"time":null,"statement":1300,"condition":150}]},"2067":{"pp_sservent":[{"statement":938,"condition":110,"time":null,"subroutine":171,"pod":162,"branch":272}]},"2100":{"pp_leavegiven":[{"branch":273,"pod":171,"subroutine":180,"time":null,"statement":958,"condition":110}]},"2954":{"pp_grepwhile":[{"time":null,"statement":1452,"condition":166,"branch":353,"pod":375,"subroutine":386}]},"2340":{"pp_ftis":[{"subroutine":216,"pod":207,"branch":301,"statement":1084,"condition":117,"time":null}]},"1989":{"pp_cos":[{"time":null,"statement":877,"condition":110,"branch":270,"pod":104,"subroutine":113}]},"2736":{"pp_rindex":[{"condition":150,"statement":1299,"time":null,"subroutine":302,"pod":291,"branch":331}]},"1888":{"pp_sgrent":[{"branch":260,"pod":76,"subroutine":85,"time":null,"condition":107,"statement":822}]},"2020":{"pp_exit":[{"branch":270,"pod":128,"subroutine":137,"time":null,"condition":110,"statement":901}]},"2722":{"pp_bless":[{"statement":1291,"condition":150,"time":null,"subroutine":297,"pod":286,"branch":330}]},"2741":{"pp_pack":[{"pod":296,"branch":331,"subroutine":307,"time":null,"statement":1304,"condition":150}]},"2021":{"pp_prototype":[{"subroutine":138,"pod":129,"branch":270,"condition":110,"statement":902,"time":null}]},"2476":{"pp_divide":[{"time":null,"condition":127,"statement":1139,"pod":235,"branch":309,"subroutine":244}]},"1800":{"pp_unstack":[{"subroutine":63,"branch":252,"pod":54,"statement":779,"condition":102,"time":null}]},"1220":{"maybe_targmy":[{"condition":56,"statement":476,"time":null,"subroutine":30,"pod":26,"branch":151}]},"1991":{"pp_srand":[{"time":null,"statement":879,"condition":110,"pod":106,"branch":270,"subroutine":115}]},"2734":{"pp_vec":[{"condition":150,"statement":1297,"time":null,"subroutine":300,"branch":331,"pod":289}]},"2351":{"pp_ftfile":[{"subroutine":227,"branch":301,"pod":218,"condition":117,"statement":1095,"time":null}]},"2795":{"pp_shmctl":[{"condition":150,"statement":1358,"time":null,"subroutine":361,"pod":350,"branch":331}]},"2769":{"pp_sockpair":[{"condition":150,"statement":1332,"time":null,"subroutine":335,"branch":331,"pod":324}]},"2292":{"pp_fc":[{"statement":1054,"condition":117,"time":null,"subroutine":200,"branch":295,"pod":191}]},"739":{"WARN_MASK":[{"condition":23,"statement":217,"time":null,"subroutine":11,"pod":9,"branch":76}]},"3433":{"pp_rv2av":[{"branch":418,"pod":405,"subroutine":417,"time":null,"statement":1700,"condition":208}]}},"branch":[[329,{"text":"unless $$startop"}],[350,{"text":"$op->flags & 128 ? :"}],[336,{"text":"if ($ppname eq 'padrange')"}],[362,{"text":"if (class($op) eq 'PMOP' and ref $op->pmreplroot and ${$op->pmreplroot;} and $op->pmreplroot->isa('B::OP'))"}],[370,{"text":"if ($op->flags & 4)"}],[384,{"text":"unless $$startop"}],[385,{"text":"if $$visited{$$startop}"}],[388,{"text":"if $$visited{$$op}"}],[391,{"text":"if ($ppname =~ /^((and|d?or)(assign)?|(map|grep)while|range|cond_expr|once)$/) { }"}],[391,{"text":"elsif ($ppname eq 'subst') { }"}],[391,{"text":"elsif ($ppname =~ /^(enter(loop|iter))$/) { }"}],[438,{"text":"unless $cv->FILE eq $0 or exists $$self{'files'}{$cv->FILE}"}],[440,{"text":"if ($cv->OUTSIDE_SEQ) { }"}],[440,{"text":"elsif (not null($cv->START) and is_state($cv->START)) { }"}],[448,{"text":"unless ($is_form or class($cv->STASH) eq 'SPECIAL')"}],[467,{"text":"if 0 == length $use_dec"}],[466,{"text":"if (defined $use_dec and $$self{'expand'} < 5)"}],[464,{"text":"if ($name eq 'BEGIN')"}],[472,{"text":"if ($$self{'linenums'})"}],[482,{"text":"unless $name =~ /::/"}],[480,{"text":"if ($stash ne $$self{'curstash'})"}],[478,{"text":"if (class($cv->STASH) ne 'SPECIAL')"}],[459,{"text":"if ($$ent[2]) { }"}],[501,{"text":"if $lineseq->name ne 'lineseq'"}],[504,{"text":"if $req_op->name ne 'require'"}],[507,{"text":"if ($req_op->first->private & 64) { }"}],[519,{"text":"if class($version_op) eq 'NULL'"}],[524,{"text":"unless $self->const_sv($constop)->PV eq $module"}],[527,{"text":"if (class($version) eq 'IV') { }"}],[527,{"text":"elsif (class($version) eq 'NV') { }"}],[527,{"text":"elsif (class($version) ne 'PVMG') { }"}],[539,{"text":"if $constop->name ne 'method_named'"}],[540,{"text":"if $self->const_sv($constop)->PV ne 'VERSION'"}],[520,{"text":"if ($version_op->name eq 'lineseq')"}],[544,{"text":"if $lineseq->name ne 'lineseq'"}],[547,{"text":"if defined $version"}],[546,{"text":"if ($entersub->name eq 'stub')"}],[550,{"text":"if $entersub->name ne 'entersub'"}],[556,{"text":"unless $self->const_sv($svop)->PV eq $module"}],[561,{"text":"if length $args"}],[567,{"text":"if $method_named->name ne 'method_named'"}],[570,{"text":"if ($method_name eq 'unimport')"}],[576,{"text":"if ($module eq 'strict' or $module eq 'integer' or $module eq 'bytes' or $module eq 'warnings' or $module eq 'feature')"}],[582,{"text":"if (defined $version and length $args) { }"}],[582,{"text":"elsif (defined $version) { }"}],[582,{"text":"elsif (length $args) { }"}],[596,{"text":"if (not defined $pack) { }"}],[607,{"text":"$INC{'overload.pm'} ? :"}],[607,{"text":"if ($seen ||= {})->{$INC{'overload.pm'} ? overload::StrVal($stash) : $stash}++"}],[620,{"text":"unless $AF eq $0 or exists $$self{'files'}{$AF}"}],[617,{"text":"if (defined $A and class($A) eq 'GV' and defined $A->CV and class($A->CV) eq 'CV')"}],[632,{"text":"unless $AF eq $0 or exists $$self{'files'}{$AF}"}],[629,{"text":"if (defined $A and class($A) eq 'GV' and defined $A->CV and class($A->CV) eq 'CV')"}],[637,{"text":"if $$self{'subs_done'}{$$val}++"}],[638,{"text":"if $$val != ${$cv->GV;}"}],[636,{"text":"if (class(my $cv = $val->CV) ne 'SPECIAL')"}],[642,{"text":"if $$self{'forms_done'}{$$val}++"}],[643,{"text":"if $$val != ${$cv->GV;}"}],[641,{"text":"if (class(my $cv = $val->FORM) ne 'SPECIAL')"}],[646,{"text":"if (class($val->HV) ne 'SPECIAL' and $key =~ /::$/)"}],[612,{"text":"if ($class eq 'PV') { }"}],[612,{"text":"elsif ($class eq 'IV' and not $val->FLAGS & 2048) { }"}],[612,{"text":"elsif ($class eq 'GV') { }"}],[658,{"text":"defined $$ar[1] ? :"}],[670,{"text":"if ($opt eq 'C') { }"}],[670,{"text":"elsif ($opt eq 'i') { }"}],[670,{"text":"elsif ($opt eq 'T') { }"}],[670,{"text":"elsif ($opt eq 'v') { }"}],[710,{"text":"if ($arg eq '-d') { }"}],[710,{"text":"elsif ($arg =~ /^-f(.*)/) { }"}],[710,{"text":"elsif ($arg eq '-l') { }"}],[710,{"text":"elsif ($arg eq '-p') { }"}],[710,{"text":"elsif ($arg eq '-P') { }"}],[710,{"text":"elsif ($arg eq '-q') { }"}],[710,{"text":"elsif (substr($arg, 0, 2) eq '-s') { }"}],[710,{"text":"elsif ($arg =~ /^-x(\\d)$/) { }"}],[750,{"text":"defined $$self{'ambient_warnings'} ? :"}],[754,{"text":"if $] < 5.009"}],[766,{"text":"if (defined $^I)"}],[769,{"text":"if ($^W)"}],[772,{"text":"if ($/ ne \"\\n\" or defined $O::savebackslash)"}],[777,{"text":"B::begin_av()->isa('B::AV') ? :"}],[778,{"text":"B::unitcheck_av()->isa('B::AV') ? :"}],[781,{"text":"B::check_av()->isa('B::AV') ? :"}],[782,{"text":"B::init_av()->isa('B::AV') ? :"}],[783,{"text":"B::end_av()->isa('B::AV') ? :"}],[790,{"text":"if ($$self{'curcop'})"}],[803,{"text":"unless (null($root))"}],[811,{"text":"if @text"}],[815,{"text":"defined $$self{'curcop'} ? :"}],[818,{"text":"unless $laststash eq $$self{'curstash'}"}],[817,{"text":"if (defined *{$laststash . '::DATA';}{'IO'})"}],[829,{"text":"unless UNIVERSAL::isa($sub, 'CODE')"}],[851,{"text":"if ($val eq 'none')"}],[857,{"text":"if ($val eq 'all') { }"}],[857,{"text":"elsif (ref $val) { }"}],[873,{"text":"unless $val == 0"}],[881,{"text":"if ($val) { }"}],[891,{"text":"if ($val eq 'none')"}],[897,{"text":"if ($val eq 'all') { }"}],[897,{"text":"elsif (ref $val) { }"}],[910,{"text":"if ($val eq 'none')"}],[916,{"text":"if (ref $val) { }"}],[923,{"text":"unless defined $warning_bits"}],[848,{"text":"if ($name eq 'strict') { }"}],[848,{"text":"elsif ($name eq '$[') { }"}],[848,{"text":"elsif ($name eq 'integer' or $name eq 'bytes' or $name eq 'utf8') { }"}],[848,{"text":"elsif ($name eq 're') { }"}],[848,{"text":"elsif ($name eq 'warnings') { }"}],[848,{"text":"elsif ($name eq 'warning_bits') { }"}],[848,{"text":"elsif ($name eq 'hint_bits') { }"}],[848,{"text":"elsif ($name eq '%^H') { }"}],[943,{"text":"if (@_)"}],[958,{"text":"if not defined $op or class($op) eq 'NULL'"}],[974,{"text":"$cmd eq \"\\t\" ? :"}],[975,{"text":"if ($$self{'use_tabs'}) { }"}],[973,{"text":"if ($cmd eq \"\\t\" or $cmd eq \"\\cH\")"}],[982,{"text":"if (index($line, \"\\f\") > 0)"}],[985,{"text":"if (substr($line, 0, 1) eq \"\\f\") { }"}],[999,{"text":"if not defined $cv or $cv->isa('B::NULL')"}],[1000,{"text":"if $cv->isa('B::SPECIAL')"}],[1002,{"text":"if ($cv->FLAGS & 1024)"}],[1007,{"text":"if $cv->CvFLAGS & 2"}],[1008,{"text":"if $cv->CvFLAGS & 0"}],[1009,{"text":"if $cv->CvFLAGS & 1"}],[1005,{"text":"if ($cv->CvFLAGS & 3)"}],[1031,{"text":"if length $subs"}],[1029,{"text":"if (defined $scope_en)"}],[1022,{"text":"if ($lineseq->name eq 'lineseq') { }"}],[1040,{"text":"if ($$sv) { }"}],[1019,{"text":"if (not null($root)) { }"}],[1063,{"text":"if $op->first->name eq 'stub' or $op->first->name eq 'nextstate'"}],[1076,{"text":"if @exprs"}],[1117,{"text":"if is_state($op) or null($lseq)"}],[1119,{"text":"if ($lseq->first and not null($lseq->first) and is_state($lseq->first) and my $sib = $lseq->first->sibling)"}],[1118,{"text":"if ($lseq->name eq 'lineseq') { }"}],[1118,{"text":"elsif ($lseq->name eq 'unstack' and $lseq->flags & 128) { }"}],[1148,{"text":"if $cx == 16"}],[1142,{"text":"if ($prec < $cx or $prec == $cx and $cx != 4 and $cx != 16 and $cx != 21 or $$self{'parens'}) { }"}],[1161,{"text":"if ($name eq 'umask' and $kid =~ /^\\d+$/)"}],[1167,{"text":"if ($name eq 'umask' and $kid =~ /^\\d+$/)"}],[1171,{"text":"if (substr($kid, 0, 1) eq \"\\cS\") { }"}],[1171,{"text":"elsif (substr($kid, 0, 1) eq '(') { }"}],[1159,{"text":"if ($cx > 16 or $$self{'parens'}) { }"}],[1187,{"text":"if ($prec <= $cx or substr($text, 0, 1) eq '(' or $$self{'parens'}) { }"}],[1197,{"text":"$op->name =~ /^(gv|rv2)[ash]v$/ ? :"}],[1200,{"text":"$op->private & 128 ? :"}],[1202,{"text":"unless ($text =~ /^\\W(\\w+::)*\\w+\\z/ or utf8::decode($text) and $text =~ /^\\W(\\w+::)*\\w+\\z/)"}],[1201,{"text":"if ($our_local eq 'our')"}],[1209,{"text":"if (want_scalar($op)) { }"}],[1198,{"text":"if ($op->private & (128 | $our_intro) and not $$self{'avoid_local'}{$$op}) { }"}],[1222,{"text":"if ($op->private & 16) { }"}],[1241,{"text":"$op->private & 16 ? :"}],[1244,{"text":"if ($forbid_parens or want_scalar($op)) { }"}],[1240,{"text":"if ($op->private & 128 and not $$self{'avoid_local'}{$$op}) { }"}],[1259,{"text":"if ($B::Deparse::AUTOLOAD =~ s/^.*::pp_//) { }"}],[1278,{"text":"defined $out_cop ? :"}],[1283,{"text":"if ${$root->sibling;}"}],[1284,{"text":"if not defined $limit_seq or defined $nseq and $nseq < $limit_seq"}],[1280,{"text":"if (defined $root)"}],[1287,{"text":"if defined $$self{'limit_seq'} and !defined($limit_seq) || $$self{'limit_seq'} < $limit_seq"}],[1295,{"text":"$cx ? :"}],[1298,{"text":"if (defined $root and defined $limit_seq and not $$self{'in_format'})"}],[1309,{"text":"if $real_block"}],[1316,{"text":"if ($name eq 'and') { }"}],[1316,{"text":"elsif ($name eq 'or') { }"}],[1313,{"text":"if (is_miniwhile($kid))"}],[1311,{"text":"if ($real_block) { }"}],[1337,{"text":"is_lexical_subs(@kids) ? :"}],[1340,{"text":"length $lineseq ? :"}],[1335,{"text":"if ($cx > 0) { }"}],[1357,{"text":"if null($op->first)"}],[1363,{"text":"unless $_[1] == $#kids"}],[1374,{"text":"if ($i > $#kids)"}],[1372,{"text":"if (is_state($kids[$i]))"}],[1380,{"text":"$kids[$i]->sibling->name eq 'unstack' ? :"}],[1379,{"text":"if (is_for_loop($kids[$i]))"}],[1400,{"text":"unless ref $gv eq 'B::GV'"}],[1402,{"text":"$raw ? :"}],[1403,{"text":"if ($stash eq 'main' and $name =~ /^::/) { }"}],[1403,{"text":"elsif ($stash eq 'main' and $globalnames{$name} || $name =~ /^[^A-Za-z_:]/ or $stash eq $$self{'curstash'} and not $globalnames{$name} and $stash eq 'main' || !($name =~ /::/)) { }"}],[1416,{"text":"if (not $raw and $name =~ /^(\\^..|{)/)"}],[1429,{"text":"if $name =~ /::/"}],[1431,{"text":"unless ($prefix eq '$' or $prefix eq '@' or $prefix eq '%' or $prefix eq '$#')"}],[1438,{"text":"if ($prefix eq '@') { }"}],[1438,{"text":"elsif ($name eq '#') { }"}],[1437,{"text":"if (defined $cx and $cx == 26)"}],[1443,{"text":"if ($prefix eq '$#')"}],[1436,{"text":"if ($name =~ /^[^\\w+-]$/)"}],[1459,{"text":"if $name =~ /^(\\^..|{)/"}],[1457,{"text":"if ($name =~ /^(?:\\S|(?!\\d)[\\ca-\\cz]?(?:\\w|::)*|\\d+)\\z/) { }"}],[1469,{"text":"$prefix eq '$#' ? :"}],[1470,{"text":"if not $prefix or $name =~ /::/"}],[1471,{"text":"if $name =~ /^(?!\\d)\\w/ and not $v =~ /^\\$[ab]\\z/ and not $globalnames{$name} and $$self{'hints'} & $strict_bits{'vars'} and not $self->lex_in_scope($v, 1) or $self->lex_in_scope($v)"}],[1484,{"text":"$our ? :"}],[1485,{"text":"unless defined $$self{'curcvlex'}"}],[1487,{"text":"unless defined $$self{'curcop'}"}],[1489,{"text":"unless exists $$self{'curcvlex'}{$name}"}],[1492,{"text":"if $seq > $st and $seq <= $en"}],[1502,{"text":"if class($padlist) eq 'SPECIAL'"}],[1507,{"text":"if class($ns[$i]) eq 'SPECIAL'"}],[1508,{"text":"if (class($ns[$i]) eq 'PV')"}],[1513,{"text":"$ns[$i]->FLAGS & 16777216 ? :"}],[1519,{"text":"$ns[$i]->FLAGS & 262144 ? :"}],[1531,{"text":"unless defined $op"}],[1532,{"text":"unless $op->flags & 4"}],[1540,{"text":"if not defined $scope_st or $s < $scope_st"}],[1541,{"text":"if not defined $scope_en or $e > $scope_en"}],[1546,{"text":"if not defined $scope_st or $c < $scope_st"}],[1547,{"text":"if not defined $scope_en or $c > $scope_en"}],[1537,{"text":"if ($o->name =~ /^pad.v$/ and $o->private & 128) { }"}],[1537,{"text":"elsif (is_state($o)) { }"}],[1537,{"text":"elsif ($o->flags & 4) { }"}],[1565,{"text":"if (class($op->sibling) ne 'NULL' and $op->sibling->flags & 4 and my $nseq = $self->find_scope_st($op->sibling))"}],[1569,{"text":"if defined $out_seq and $out_seq < $seq"}],[1578,{"text":"unless defined $seq"}],[1603,{"text":"if ($stash ne $$self{'curstash'})"}],[1615,{"text":"if ($warnings->isa('B::SPECIAL') and $$warnings == 4) { }"}],[1615,{"text":"elsif ($warnings->isa('B::SPECIAL') and $$warnings == 5) { }"}],[1615,{"text":"elsif ($warnings->isa('B::SPECIAL')) { }"}],[1628,{"text":"if (defined $warning_bits and !defined($$self{'warnings'}) || $$self{'warnings'} ne $warning_bits)"}],[1634,{"text":"$] < 5.008009 ? :"}],[1636,{"text":"if ($$self{'hints'} != $hints)"}],[1642,{"text":"if ($] > 5.009)"}],[1652,{"text":"if ($$self{'hinthash'}) { }"}],[1651,{"text":"if ($to == $feature::hint_mask) { }"}],[1650,{"text":"if ($from != $to)"}],[1646,{"text":"if ($] >= 5.015006)"}],[1670,{"text":"if ($] > 5.009)"}],[1681,{"text":"if ($$self{'linenums'})"}],[1686,{"text":"if $op->label"}],[1693,{"text":"if (($to & WARN_MASK) eq (warnings::bits('all') & WARN_MASK)) { }"}],[1693,{"text":"elsif (($to & WARN_MASK) eq (\"\\000\" x length($to) & WARN_MASK)) { }"}],[1737,{"text":"if $ignored_hints{$key}"}],[1739,{"text":"if $is_feature and not $doing_features"}],[1741,{"text":"if $is_feature"}],[1742,{"text":"defined $$to{$key} ? :"}],[1740,{"text":"if (not exists $$from{$key} or $$from{$key} ne $$to{$key})"}],[1753,{"text":"if $ignored_hints{$key}"}],[1755,{"text":"if $is_feature and not $doing_features"}],[1757,{"text":"if $is_feature"}],[1756,{"text":"unless (exists $$to{$key})"}],[1763,{"text":"unless (%rev_feature)"}],[1762,{"text":"if (@features or @unfeatures)"}],[1765,{"text":"if (@features)"}],[1769,{"text":"if (@unfeatures)"}],[1775,{"text":"if @decls"}],[1783,{"text":"if $bits & 1"}],[1785,{"text":"if $bits & $strict_bits{$_}"}],[1787,{"text":"if (@strict == keys %strict_bits) { }"}],[1787,{"text":"elsif (@strict) { }"}],[1793,{"text":"if $bits & 8"}],[1828,{"text":"if $name =~ /^CORE::/"}],[1832,{"text":"if ($hints and $hints != $feature::hint_mask) { }"}],[1832,{"text":"elsif ($hints) { }"}],[1836,{"text":"unless $hh and $$hh{\"feature_$feature_keywords{$name}\"}"}],[1829,{"text":"if (exists $feature_keywords{$name})"}],[1840,{"text":"if ($strong_proto_keywords{$name} or not $name =~ /^(?:chom?p|do|exec|glob|s(?:elect|ystem))\\z/ || defined eval {\n\tdo {\n\tprototype \"CORE::$name\"\n}\n})"}],[1844,{"text":"if (exists $$self{'subs_declared'}{$name} or exists &{\"$$self{'curstash'}::$name\";})"}],[1863,{"text":"if ($cx >= 1) { }"}],[1902,{"text":"$name eq '-' && $kid =~ /^[a-zA-Z](?!\\w)/ ? :"}],[1902,{"text":"$flags & 1 ? :"}],[1926,{"text":"if ($op->first->name =~ /^(i_)?negate$/) { }"}],[1938,{"text":"if ($cx <= 4) { }"}],[1951,{"text":"unless ($name)"}],[1956,{"text":"unless $builtinname =~ /^CORE::/"}],[1957,{"text":"if (defined prototype $builtinname and prototype($builtinname) =~ /^;?\\*/ and $kid->name eq 'rv2gv')"}],[1963,{"text":"if ($nollafr)"}],[1971,{"text":"$op->flags & 128 ? :"}],[1949,{"text":"if ($op->flags & 4) { }"}],[2051,{"text":"if ($code =~ s/^((?:CORE::)?do) \\{/$1({/)"}],[2055,{"text":"$_[1]->private & 8 ? :"}],[2084,{"text":"if ($enterop->flags & 128) { }"}],[2107,{"text":"if ($op->private & 64)"}],[2112,{"text":"if ($op->flags & 128)"}],[2126,{"text":"if ($op->flags & 128)"}],[2136,{"text":"if ($op->flags & 128)"}],[2125,{"text":"if ($op->private & 64) { }"}],[2151,{"text":"$op->flags & 128 ? :"}],[2160,{"text":"$op->first->name eq 'const' && $op->first->private & 2 ? :"}],[2152,{"text":"if (class($op) eq 'UNOP' and $op->first->name eq 'const' and $op->first->private & 64) { }"}],[2175,{"text":"unless (null($kid->sibling))"}],[2201,{"text":"if ($pre eq '{' and $cx < 1)"}],[2211,{"text":"if ($op->flags & 128)"}],[2240,{"text":"if $$self{'parens'} or $kid->sibling->private & 8"}],[2231,{"text":"if ($sib_name =~ /^(pad|rv2)[ah]v$/ and not $kid->sibling->flags & 16) { }"}],[2231,{"text":"elsif ($sib_name eq 'entersub') { }"}],[2226,{"text":"if (not null($kid->sibling) and $kid->sibling->name eq 'anoncode') { }"}],[2226,{"text":"elsif ($kid->name eq 'pushmark') { }"}],[2224,{"text":"if ($kid->name eq 'null')"}],[2261,{"text":"if $kid->name eq 'rv2gv'"}],[2262,{"text":"if is_scalar($kid)"}],[2280,{"text":"unless null($kid->sibling)"}],[2283,{"text":"$op->flags & 128 ? :"}],[2277,{"text":"if ($op->flags & 4) { }"}],[2297,{"text":"if (class($op) eq 'PVOP') { }"}],[2297,{"text":"elsif (class($op) eq 'OP') { }"}],[2297,{"text":"elsif (class($op) eq 'UNOP') { }"}],[2320,{"text":"if ($name =~ /^-/)"}],[2317,{"text":"if (class($op) eq 'UNOP') { }"}],[2317,{"text":"elsif (class($op) =~ /^(SV|PAD)OP$/) { }"}],[2371,{"text":"if ($name eq 'concat' and $op->first->name eq 'concat')"}],[2375,{"text":"if ($name eq 'null' and class($op) eq 'UNOP' and $op->first->name =~ /^(and|x?or)$/ and null($op->first->sibling))"}],[2386,{"text":"$op->flags & 64 ? :"}],[2411,{"text":"if ($left{assoc_class($op)} and $left{assoc_class($left)} and $left{assoc_class($op)} == $left{assoc_class($left)}) { }"}],[2444,{"text":"if ($right{assoc_class($op)} and $right{assoc_class($right)} and $right{assoc_class($op)} == $right{assoc_class($right)}) { }"}],[2459,{"text":"if ($op->flags & 64 and $flags & 2)"}],[2463,{"text":"if ($flags & 1)"}],[2467,{"text":"if $flags & 4 and not $left =~ /^(my|our|local|)[\\@\\(]/"}],[2519,{"text":"if ($op->flags & 128) { }"}],[2538,{"text":"if ($op->flags & 64 and $op->first->name ne 'concat')"}],[2555,{"text":"if ($op->flags & 64)"}],[2559,{"text":"if (null($right)) { }"}],[2588,{"text":"$flip->flags & 128 ? :"}],[2599,{"text":"if ($cx < 1 and is_scope($right) and $blockname and $$self{'expand'} < 7) { }"}],[2599,{"text":"elsif ($cx < 1 and $blockname and not $$self{'parens'} and $$self{'expand'} < 7) { }"}],[2599,{"text":"elsif ($cx > $lowprec and $highop) { }"}],[2648,{"text":"$quoted ? :"}],[2645,{"text":"if ($op->name eq 'gv') { }"}],[2666,{"text":"$nollafr ? :"}],[2665,{"text":"if (null($kid))"}],[2673,{"text":"if (defined $proto && $proto =~ /^;?\\*/ || $name eq 'select' and $kid->name eq 'rv2gv' and not $kid->private & 128) { }"}],[2685,{"text":"if ($name eq 'chmod' and $first =~ /^\\d+$/)"}],[2688,{"text":"if not $parens || $nollafr and substr($first, 0, 1) eq '('"}],[2692,{"text":"if (defined $proto and $proto =~ /^\\*\\*/ and $kid->name eq 'rv2gv' and not $kid->private & 128)"}],[2701,{"text":"$parens ? :"}],[2700,{"text":"if ($name eq 'reverse' and $op->private & 8)"}],[2704,{"text":"if ($name =~ /^(system|exec)$/ and $op->flags & 64 and @exprs > 1)"}],[2713,{"text":"if ($parens and $nollafr) { }"}],[2713,{"text":"elsif ($parens) { }"}],[2726,{"text":"if ($op->private & 16)"}],[2816,{"text":"$op->flags & 128 ? :"}],[2825,{"text":"$cx >= 5 || $$self{'parens'} ? :"}],[2819,{"text":"if ($keyword =~ /^CORE::/ or $kid->name ne 'const' or ($text = $self->dq($kid)) =~ /^\\$?(\\w|::|\\`)+$/ or $text =~ /[<>]/) { }"}],[2849,{"text":"if not $parens and substr($fh, 0, 1) eq '('"}],[2844,{"text":"if ($op->flags & 128) { }"}],[2853,{"text":"if ($parens) { }"}],[2871,{"text":"if $indir eq '{}'"}],[2869,{"text":"if (is_scope($indir)) { }"}],[2869,{"text":"elsif ($indir->name eq 'const' and $indir->private & 64) { }"}],[2866,{"text":"if ($op->flags & 64)"}],[2881,{"text":"$op->private & 16 ? :"}],[2880,{"text":"if ($name eq 'sort' and $op->private & 3) { }"}],[2880,{"text":"elsif ($name eq 'sort' and $op->private & 16) { }"}],[2888,{"text":"!$indir && $kid == $firstkid && $name eq 'sort' && $firstkid->name eq 'entersub' ? :"}],[2892,{"text":"if ($name eq 'sort' and $op->private & 4) { }"}],[2896,{"text":"if ($name eq 'sort' and $op->private & 8)"}],[2908,{"text":"if ($cx >= 5) { }"}],[2901,{"text":"if ($indir ne '' and $name eq 'sort') { }"}],[2901,{"text":"elsif (not $indir and $name eq 'sort' and not null($op->first->sibling) and $op->first->sibling->name eq 'entersub') { }"}],[2943,{"text":"unless null($kid->sibling)"}],[2939,{"text":"if (is_scope($code)) { }"}],[2948,{"text":"if defined $expr"}],[2963,{"text":"if class($kid) eq 'NULL'"}],[2976,{"text":"if (not $lop->private & 144 || $lop->name eq 'undef' or $lop->name =~ /^(?:entersub|exit|open|split)\\z/)"}],[2985,{"text":"if $local =~ /^(?:local|our|my)$/"}],[2988,{"text":"if $local =~ /^(?:local|our|state)$/"}],[2984,{"text":"if ($lop->private & 16) { }"}],[2995,{"text":"if $local =~ /^(?:my|local|state)$/"}],[3003,{"text":"if $local =~ /^(?:my|our|state)$/"}],[2983,{"text":"if ($lop->name =~ /^pad[ash]v$/) { }"}],[2983,{"text":"elsif ($lop->name =~ /^(gv|rv2)[ash]v$/ and $lop->private & 16 or $lop->name eq 'null' and $lop->first->name eq 'gvsv' and $lop->first->private & 16) { }"}],[2983,{"text":"elsif ($lop->name ne 'undef' and not $lop->name eq 'sort' && $lop->flags & 4) { }"}],[3007,{"text":"if $local eq 'either'"}],[3008,{"text":"if null($kid->sibling) and not $local"}],[3011,{"text":"if (class($kid) eq 'UNOP' and $kid->first->name eq 'gvsv') { }"}],[3010,{"text":"if ($local) { }"}],[3024,{"text":"if ($local) { }"}],[3045,{"text":"unless ($cx < 1 and (is_scope($true) and $true->name ne 'null') and is_scope($false) || is_ifelse_cont($false) and $$self{'expand'} < 7)"}],[3063,{"text":"if ($newcond->name eq 'lineseq')"}],[3073,{"text":"if (not null($false)) { }"}],[3102,{"text":"if ($kid->last->name eq 'unstack') { }"}],[3112,{"text":"if ($ary->name eq 'null' and $enter->private & 4) { }"}],[3112,{"text":"elsif ($enter->flags & 64 and not null($ary->first->sibling->sibling)) { }"}],[3124,{"text":"if ($enter->flags & 128 and $] < 5.009) { }"}],[3132,{"text":"if ($enter->private & 16)"}],[3123,{"text":"if (null($var)) { }"}],[3123,{"text":"elsif ($var->name eq 'rv2gv') { }"}],[3123,{"text":"elsif ($var->name eq 'gv') { }"}],[3142,{"text":"unless $var eq '$_'"}],[3141,{"text":"unless (is_state($body->first) or $body->first->name =~ /^(?:stub|leave|scope)$/)"}],[3101,{"text":"if ($kid->name eq 'lineseq') { }"}],[3101,{"text":"elsif ($enter->name eq 'enteriter') { }"}],[3101,{"text":"elsif ($kid->name eq 'null') { }"}],[3101,{"text":"elsif ($kid->name eq 'stub') { }"}],[3164,{"text":"if ($bare) { }"}],[3179,{"text":"if (defined $cond and not is_scope($cont) and $$self{'expand'} < 3) { }"}],[3187,{"text":"unless defined $body"}],[3188,{"text":"if (length $init)"}],[3163,{"text":"if ($$cont_start != $$op and ${$cont_start;} != ${$body->last;}) { }"}],[3206,{"text":"$s->name eq 'unstack' ? :"}],[3227,{"text":"if $op->targ == 5"}],[3225,{"text":"if (class($op) eq 'OP') { }"}],[3225,{"text":"elsif ($op->first->name eq 'pushmark' or $op->first->name eq 'null' and $op->first->targ == 3 and _op_is_or_was($op, 149)) { }"}],[3225,{"text":"elsif ($op->first->name eq 'enter') { }"}],[3225,{"text":"elsif ($op->first->name eq 'leave') { }"}],[3225,{"text":"elsif ($op->first->name eq 'scope') { }"}],[3225,{"text":"elsif ($op->targ == 68) { }"}],[3225,{"text":"elsif ($op->targ == 25) { }"}],[3225,{"text":"elsif (not null($op->first->sibling) and $op->first->sibling->name eq 'readline' and $op->first->sibling->flags & 64) { }"}],[3225,{"text":"elsif (not null($op->first->sibling) and $op->first->sibling->name eq 'trans' and $op->first->sibling->flags & 64) { }"}],[3225,{"text":"elsif ($op->flags & 128 and $cx < 1 and not $op->targ) { }"}],[3225,{"text":"elsif (not null($op->first->sibling) and $op->first->sibling->name eq 'null' and class($op->first->sibling) eq 'UNOP' and $op->first->sibling->first->flags & 64 and $op->first->sibling->first->name eq 'rcatline') { }"}],[3308,{"text":"if (class($op) eq 'PADOP') { }"}],[3336,{"text":"if $i > 127"}],[3344,{"text":"if $op->flags & 128"}],[3348,{"text":"$quoted ? :"}],[3350,{"text":"if $i > 127"}],[3358,{"text":"if (class($op) eq 'NULL' or not $op->can('first'))"}],[3367,{"text":"if ($str =~ /^\\$([^\\w\\d])\\z/)"}],[3363,{"text":"if ($kid->name eq 'gv') { }"}],[3363,{"text":"elsif (is_scalar($kid)) { }"}],[3393,{"text":"if ($op->first->name eq 'padav') { }"}],[3404,{"text":"if (not null($op->first) and $op->first->name eq 'null' and $op->first->targ == 149) { }"}],[3426,{"text":"unless grep(($i++ != $_), @a)"}],[3418,{"text":"if (@a == 0) { }"}],[3418,{"text":"elsif (@a == 1) { }"}],[3418,{"text":"elsif (@a > 2 and not grep((!/^-?\\d+$/), @a)) { }"}],[3436,{"text":"if ($kid->name eq 'const') { }"}],[3450,{"text":"unless null($kid->sibling)"}],[3453,{"text":"if is_scope($kid)"}],[3455,{"text":"if $kid->name eq 'gv' or $kid->name eq 'padcv'"}],[3456,{"text":"if is_scalar($kid)"}],[3446,{"text":"if ($op->name =~ /^[ahg]elem/) { }"}],[3446,{"text":"elsif ($op->name eq 'entersub') { }"}],[3473,{"text":"$left eq '[' ? :"}],[3477,{"text":"if (not $allow_arrow and $quoted)"}],[3481,{"text":"$quoted ? :"}],[3468,{"text":"if ($array->name eq $padname) { }"}],[3468,{"text":"elsif (is_scope($array)) { }"}],[3468,{"text":"elsif ($array->name eq 'gv') { }"}],[3468,{"text":"elsif (not $allow_arrow or is_scalar($array)) { }"}],[3512,{"text":"if $$self{'parens'}"}],[3534,{"text":"unless ($array->name eq $padname)"}],[3539,{"text":"$array_name eq '#' ? :"}],[3539,{"text":"$array_name =~ /->\\z/ ? :"}],[3545,{"text":"is_subscriptable($array) ? :"}],[3537,{"text":"if (my $array_name = $self->elem_or_slice_array_name($array, $left, $padname, 1)) { }"}],[3559,{"text":"if $glob->name eq 'rv2gv'"}],[3563,{"text":"$scope ? :"}],[3571,{"text":"if (class($op) eq 'LISTOP') { }"}],[3578,{"text":"if $array->name eq $regname or $array->name eq 'null'"}],[3582,{"text":"if ($kid->name eq 'list') { }"}],[3592,{"text":"if $op->name =~ /^kv/i"}],[3627,{"text":"if ($kid->name eq 'list' and want_list($kid)) { }"}],[3660,{"text":"if ($meth->name eq 'const')"}],[3656,{"text":"if ($meth->name eq 'method_named') { }"}],[3684,{"text":"if $$info{'variable_method'}"}],[3686,{"text":"if ($$info{'object'}->name eq 'scope' and want_list($$info{'object'}))"}],[3697,{"text":"if (length $args) { }"}],[3708,{"text":"if $$self{'noproto'}"}],[3720,{"text":"if @args"}],[3728,{"text":"unless $arg"}],[3730,{"text":"if (want_scalar($arg)) { }"}],[3736,{"text":"if ($arg->name =~ /^(s?refgen|undef)$/) { }"}],[3746,{"text":"if ($real->first->name eq 'gv') { }"}],[3742,{"text":"if ($arg->name =~ /^s?refgen$/ and $arg->first->first->name eq 'rv2gv') { }"}],[3756,{"text":"if ($arg->name =~ /^s?refgen$/ and not null($real = $arg->first) and $chr =~ /\\$/ && is_scalar($real->first) || $chr =~ /@/ && class($real->first->sibling) ne 'NULL' && $real->first->sibling->name =~ /^(rv2|pad)av$/ || $chr =~ /%/ && class($real->first->sibling) ne 'NULL' && $real->first->sibling->name =~ /^(rv2|pad)hv$/ || $chr =~ /\\*/ && $real->first->name eq 'rv2gv') { }"}],[3729,{"text":"if ($chr eq '$' or $chr eq '_') { }"}],[3729,{"text":"elsif ($chr eq '&') { }"}],[3729,{"text":"elsif ($chr eq '*') { }"}],[3729,{"text":"elsif (substr($chr, 0, 1) eq '\\\\') { }"}],[3719,{"text":"if ($chr eq '') { }"}],[3719,{"text":"elsif ($chr eq ';') { }"}],[3719,{"text":"elsif ($chr eq '@' or $chr eq '%') { }"}],[3779,{"text":"if $proto and not $doneok"}],[3780,{"text":"if @args"}],[3787,{"text":"unless null($op->first->sibling)"}],[3792,{"text":"if ($op->flags & 128 and not $op->flags & 32) { }"}],[3792,{"text":"elsif ($op->private & 8) { }"}],[3810,{"text":"if $gv->CV->FLAGS & 1024"}],[3809,{"text":"if (class($gv->CV) ne 'SPECIAL')"}],[3815,{"text":"if ($kid eq 'main::') { }"}],[3815,{"text":"elsif (not $kid =~ /^(?:\\w|::)(?:[\\w\\d]|::(?!\\z))*\\z/) { }"}],[3814,{"text":"unless ($amper)"}],[3826,{"text":"is_subscriptable($kid->first) || $kid->first->name eq 'padcv' ? :"}],[3804,{"text":"if (is_scope($kid)) { }"}],[3804,{"text":"elsif ($kid->first->name eq 'gv') { }"}],[3804,{"text":"elsif (is_scalar($kid->first) and $kid->first->name ne 'rv2cv') { }"}],[3843,{"text":"if (not $declared and defined $proto)"}],[3852,{"text":"if ($amper eq '&')"}],[3850,{"text":"if ($declared and defined $proto and not $amper) { }"}],[3859,{"text":"if ($kid eq '&')"}],[3860,{"text":"if ($op->flags & 64) { }"}],[3871,{"text":"defined $proto ? :"}],[3872,{"text":"if (not $declared) { }"}],[3872,{"text":"elsif ($dproto =~ /^\\s*\\z/) { }"}],[3872,{"text":"elsif ($dproto eq '$' and is_scalar($exprs[0])) { }"}],[3872,{"text":"elsif ($dproto ne '$' and defined $proto || $simple) { }"}],[3858,{"text":"if ($prefix or $amper) { }"}],[3929,{"text":"defined $4 && length $4 ? :"}],[3955,{"text":"defined $4 && length $4 ? :"}],[4007,{"text":"ord $1 > 255 ? :"}],[4024,{"text":"ord $1 > 255 ? :"}],[4026,{"text":"$1 =~ tr/\\t\\n // ? :"}],[4057,{"text":"if $last_bs"}],[4060,{"text":"if $last_bs"}],[4062,{"text":"if ($cnt < 0)"}],[4056,{"text":"if ($c eq $open) { }"}],[4056,{"text":"elsif ($c eq $close) { }"}],[4070,{"text":"if $cnt != 0"}],[4071,{"text":"unless $fail"}],[4078,{"text":"if $default and index($str, $default) == -1"}],[4081,{"text":"if $succeed"}],[4079,{"text":"if ($q ne 'qr')"}],[4084,{"text":"if index($str, $delim) == -1"}],[4086,{"text":"if ($default) { }"}],[4104,{"text":"if ($f == int $f) { }"}],[4122,{"text":"if ($$self{'use_dumper'})"}],[4125,{"text":"if (class($sv) eq 'SPECIAL')"}],[4129,{"text":"if (class($sv) eq 'NULL')"}],[4135,{"text":"if $mg->TYPE eq 'V'"}],[4133,{"text":"if ($sv->FLAGS & 8388608)"}],[4141,{"text":"if $str < 0"}],[4146,{"text":"if (pack('F', $nv) eq \"\\000\\000\\000\\000\\000\\000\\000\\000\") { }"}],[4154,{"text":"if ($nv > 0) { }"}],[4163,{"text":"if (pack('F', $nv) eq \"\\000\\000\\000\\000\\000\\000\\370\\377\") { }"}],[4163,{"text":"elsif (pack('F', $nv) eq \"\\000\\000\\000\\000\\000\\000\\370\\177\") { }"}],[4145,{"text":"if ($nv == 0) { }"}],[4145,{"text":"elsif (1 / $nv == 0) { }"}],[4145,{"text":"elsif ($nv != $nv) { }"}],[4181,{"text":"if ($str != $nv)"}],[4177,{"text":"if ($str != $nv)"}],[4188,{"text":"if $nv < 0"}],[4208,{"text":"if ($] > 5.0150051 and $$self{'curcv'} and $$self{'curcv'}->object_2svref == $ref->object_2svref)"}],[4192,{"text":"if (class($ref) eq 'AV') { }"}],[4192,{"text":"elsif (class($ref) eq 'HV') { }"}],[4192,{"text":"elsif (class($ref) eq 'CV') { }"}],[4216,{"text":"if ($mg->TYPE eq 'r')"}],[4214,{"text":"if ($ref->FLAGS & 4194304)"}],[4224,{"text":"if ($$self{'in_subst_repl'} and $const =~ /^[0-9]/)"}],[4230,{"text":"if ($str =~ /[[:^print:]]/) { }"}],[4139,{"text":"if ($sv->FLAGS & 256) { }"}],[4139,{"text":"elsif ($sv->FLAGS & 512) { }"}],[4139,{"text":"elsif ($sv->FLAGS & 2048 and $sv->can('RV')) { }"}],[4139,{"text":"elsif ($sv->FLAGS & 1024) { }"}],[4247,{"text":"if ($str =~ /^\\$v/) { }"}],[4259,{"text":"unless $$sv"}],[4266,{"text":"if ($op->private & 0)"}],[4281,{"text":"if $op->private & 0"}],[4288,{"text":"unless $last =~ /^[A-Z\\\\\\^\\[\\]_?]/ and $first =~ s/([\\$\\@])\\^$/$1{^}/"}],[4280,{"text":"if ($type eq 'const') { }"}],[4280,{"text":"elsif ($type eq 'concat') { }"}],[4280,{"text":"elsif ($type eq 'uc') { }"}],[4280,{"text":"elsif ($type eq 'lc') { }"}],[4280,{"text":"elsif ($type eq 'ucfirst') { }"}],[4280,{"text":"elsif ($type eq 'lcfirst') { }"}],[4280,{"text":"elsif ($type eq 'quotemeta') { }"}],[4280,{"text":"elsif ($type eq 'fc') { }"}],[4280,{"text":"elsif ($type eq 'join') { }"}],[4317,{"text":"$op->first->sibling->isa('B::NULL') ? :"}],[4319,{"text":"if ($self->pure_string($child))"}],[4329,{"text":"if $$self{'unquote'}"}],[4349,{"text":"if index($to, $delim) == -1"}],[4345,{"text":"if (($succeed, $to) = balanced_delim($to) and $succeed) { }"}],[4356,{"text":"if index($to . $from, $delim) == -1"}],[4342,{"text":"if (not $from =~ m[/] || $to =~ m[/]) { }"}],[4342,{"text":"elsif (($succeed, $from) = balanced_delim($from) and $succeed) { }"}],[4368,{"text":"if ($n == 92) { }"}],[4368,{"text":"elsif ($n == 45) { }"}],[4368,{"text":"elsif ($n >= 32 and $n <= 126) { }"}],[4368,{"text":"elsif ($n == 7) { }"}],[4368,{"text":"elsif ($n == 8) { }"}],[4368,{"text":"elsif ($n == 9) { }"}],[4368,{"text":"elsif ($n == 10) { }"}],[4368,{"text":"elsif ($n == 27) { }"}],[4368,{"text":"elsif ($n == 12) { }"}],[4368,{"text":"elsif ($n == 13) { }"}],[4368,{"text":"elsif ($n >= 1 and $n <= 26) { }"}],[4402,{"text":"if ($c <= $#chars - 2 and $chars[$c + 1] == $tr + 1 and $chars[$c + 2] == $tr + 2)"}],[4424,{"text":"if ($tr >= 0) { }"}],[4419,{"text":"if ($table[45] != -1 and $table[44] == -1 || $table[46] == -1)"}],[4433,{"text":"if ($tr >= 0) { }"}],[4433,{"text":"elsif ($tr == -2) { }"}],[4445,{"text":"unless $from{$c}"}],[4440,{"text":"if ($flags & 32)"}],[4449,{"text":"unless ($flags & 128 or not @to)"}],[4455,{"text":"if $delhyphen"}],[4461,{"text":"if ($x == 45) { }"}],[4461,{"text":"elsif ($x == 92) { }"}],[4476,{"text":"if exists $swash{'FINAL'}"}],[4484,{"text":"if (length $max) { }"}],[4490,{"text":"if ($result == $extra) { }"}],[4498,{"text":"if ($from[$i][0] == 45) { }"}],[4498,{"text":"elsif ($from[$i][1] == 45) { }"}],[4511,{"text":"if ($delfrom[$i][0] == 45) { }"}],[4511,{"text":"elsif ($delfrom[$i][1] == 45) { }"}],[4520,{"text":"if (defined $final and $to[$#to][1] != $final)"}],[4533,{"text":"if ($$range[0] <= $$range[1])"}],[4524,{"text":"if ($flags & 32)"}],[4541,{"text":"if ($diff > 1) { }"}],[4541,{"text":"elsif ($diff == 1) { }"}],[4551,{"text":"if ($diff > 1) { }"}],[4551,{"text":"elsif ($diff == 1) { }"}],[4573,{"text":"if ($class eq 'PVOP') { }"}],[4573,{"text":"elsif ($class eq 'PADOP') { }"}],[4582,{"text":"if $priv_flags & 32"}],[4583,{"text":"if $priv_flags & 128"}],[4584,{"text":"if $from eq $to and $flags eq ''"}],[4585,{"text":"if $priv_flags & 8"}],[4594,{"text":"unless $last =~ /^[A-Z\\\\\\^\\[\\]_?]/ and $first =~ s/([\\$\\@])\\^$/$1{^}/"}],[4608,{"text":"if $op->private & 0"}],[4610,{"text":"if $extended"}],[4607,{"text":"if ($type eq 'const') { }"}],[4607,{"text":"elsif ($type eq 'concat') { }"}],[4607,{"text":"elsif ($type eq 'uc') { }"}],[4607,{"text":"elsif ($type eq 'lc') { }"}],[4607,{"text":"elsif ($type eq 'ucfirst') { }"}],[4607,{"text":"elsif ($type eq 'lcfirst') { }"}],[4607,{"text":"elsif ($type eq 'quotemeta') { }"}],[4607,{"text":"elsif ($type eq 'fc') { }"}],[4607,{"text":"elsif ($type eq 'join') { }"}],[4640,{"text":"if null($op)"}],[4651,{"text":"unless $join_op->name eq 'null' and $join_op->targ == 15"}],[4654,{"text":"unless $gvop->name eq 'gvsv'"}],[4655,{"text":"unless '\"' eq $self->gv_name($self->gv_or_padgv($gvop))"}],[4657,{"text":"unless ${$join_op->sibling;} eq ${$op->last;}"}],[4658,{"text":"unless $op->last->name =~ /^(?:[ah]slice|(?:rv2|pad)av)$/"}],[4643,{"text":"if ($type eq 'const' or $type eq 'av2arylen') { }"}],[4643,{"text":"elsif ($type =~ /^(?:[ul]c(first)?|fc)$/ or $type eq 'quotemeta') { }"}],[4643,{"text":"elsif ($type eq 'join') { }"}],[4643,{"text":"elsif ($type eq 'concat') { }"}],[4643,{"text":"elsif (is_scalar($op) or $type =~ /^[ah]elem$/) { }"}],[4643,{"text":"elsif ($type eq 'null' and $op->can('first') and not null($op->first) and $op->first->name eq 'null' && $op->first->can('first') && !null($op->first->first) && $op->first->first->name eq 'aelemfast' || $op->first->name =~ /^aelemfast(?:_lex)?\\z/) { }"}],[4687,{"text":"if $kid->name eq 'regcmaybe'"}],[4688,{"text":"if $kid->name eq 'regcreset'"}],[4689,{"text":"if ($kid->name eq 'null' and not null($kid->first) and $kid->first->name eq 'pushmark')"}],[4703,{"text":"if $self->pure_string($kid)"}],[4716,{"text":"if $pmflags & 2097152"}],[4717,{"text":"if $pmflags & 4"}],[4718,{"text":"if $pmflags & 1"}],[4719,{"text":"if $pmflags & 1048576"}],[4720,{"text":"if $pmflags & 2"}],[4721,{"text":"if $pmflags & 8"}],[4722,{"text":"if $pmflags & 16"}],[4723,{"text":"if (my $charset = $pmflags & 224) { }"}],[4723,{"text":"elsif ($$self{'hinthash'} and $$self{'hinthash'}{'reflags_charset'} || $$self{'hinthash'}{'feature_unicode'} or $$self{'hints'} & $feature::hint_mask and ($$self{'hints'} & $feature::hint_mask) != $feature::hint_mask and do {\n\t$$self{'hints'} & $feature::hint_uni8bit\n}) { }"}],[4756,{"text":"if ($op->flags & 64)"}],[4767,{"text":"if ($extended) { }"}],[4777,{"text":"if ($matchop->name eq 'regcrest')"}],[4780,{"text":"if ($matchop->name =~ /^(?:match|transr?|subst)\\z/ and $matchop->flags & 128)"}],[4765,{"text":"if (null($kid)) { }"}],[4765,{"text":"elsif ($kid->name ne 'regcomp') { }"}],[4786,{"text":"if $pmflags & 4194304"}],[4789,{"text":"if $matchwords{$flags}"}],[4790,{"text":"if ($pmflags & 65536) { }"}],[4790,{"text":"elsif ($quote) { }"}],[4796,{"text":"if $quote"}],[4799,{"text":"$rhs_bound_to_defsv ? :"}],[4797,{"text":"if ($binop) { }"}],[4830,{"text":"if (ref $replroot eq 'B::GV') { }"}],[4830,{"text":"elsif (not ref $replroot and $replroot > 0) { }"}],[4835,{"text":"if $gv"}],[4845,{"text":"$] < 5.009 ? :"}],[4845,{"text":"if ($op->flags & 128 or $kid->flags & 128 and $] < 5.009 ? $kid->pmflags & 0 : ($kid->reflags || 0) & 536870912)"}],[4857,{"text":"if ($ary) { }"}],[4881,{"text":"if ($op->flags & 64)"}],[4888,{"text":"if (null($op->pmreplroot)) { }"}],[4900,{"text":"if ($pmflags & 8388608) { }"}],[4909,{"text":"if ($extended) { }"}],[4907,{"text":"if (null($kid)) { }"}],[4918,{"text":"if $pmflags & 16777216"}],[4919,{"text":"if $pmflags & 8388608"}],[4922,{"text":"if $substwords{$flags}"}],[4923,{"text":"if ($binop) { }"}],[4935,{"text":"unless $op->name =~ /\\A(?:introcv|clonecv)\\z/"}]]}