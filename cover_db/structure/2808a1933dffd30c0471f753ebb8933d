{"statement":[29,29,29,30,30,30,31,31,31,32,32,32,33,33,33,34,34,34,35,35,35,42,42,42,3876,3876,3876,13411,13411,13411,145,146,147,150,157,158,159,162,311,312,313,313,319,320,320,324,325,326,326,330,331,331,332,332,336,337,338,340,346,347,348,349,352,355,360,361,362,363,365,369,370,371,372,374,378,379,400,401,402,405,407,409,413,420,421,422,425,430,431,435,436,440,441,442,443,447,448,449,450,454,455,459,463,464,466,467,468,469,471,483,484,488,489,497,498,499,500,505,506,511,512,513,516,521,522,523,528,529,530,531,533,536,541,542,543,549,550,551,552,553,556,557,561,562,566,567,573,574,578,579,580,583,589,590,591,594,600,601,602,605,611,612,613,616,625,626,627,628,629,630,631,632,633,636,638,639,640,641,645,649,654,655,656,657,658,659,660,663,666,667,668,671,674,677,681,710,713,715,716,718,719,720,721,723,724,725,726,729,730,731,733,736,738,741,743,748,751,753,754,755,756,757,759,760,763,764,766,769,770,774,779,780,781,784,790,791,792,793,796,800,806,807,810,815,816,817,819,820,823,837,838,839,840,844,845,846,851,852,853,855,860,861,862,865,870,871,872,875,880,883,887,888,889,890,893,898,899,900,901,902,903,904,907,908,909,912,916,917,918,919,920,921,924,926,928,932,933,934,938,939,940,941,945,946,947,948,950,954,955,956,957,958,959,960,961,963,975,976,977,981,982,983,984,990,991,992,993,994,995,996,997,998,999,1001,1005,1006,1008,1012,1013,1014,1015,1018,1019,1024,1027,1033,1036,1038,1042,1044,1045,1046,1049,1051,1054,1053,1055,1056,1058,1059,1060,1061,1063,1073,1074,1075,1076,1077,1078,1081,1084,1086,1087,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1109,1110,1114,1115,1116,1117,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1133,1134,1140,1142,1145,1146,1149,1152,1155,1158,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1175,1179,1182,1185,1186,1197,1198,1199,1202,1203,1205,1206,1209,1213,1214,1219,1222,1226,1229,1230,1231,1232,1233,1234,1235,1236,1237,1240,1243,1249,1252,1255,1258,1259,1260,1260,1261,1265,1268,1269,1269,1270,1272,1275,1277,1283,1287,1288,1289,1290,1291,1293,1294,1295,1296,1297,1298,1299,1300,1303,1304,1309,1314,1317,1320,1323,1326,1327,1328,1329,1329,1330,1335,1335,1336,1339,1339,1342,1344,1345,1346,1347,1348,1350,1352,1355,1356,1359,1360,1363,1368,1371,1373,1374,1377,1378,1379,1388,1400,1401,1402,1409,1410,1411,1412,1413,1415,1420,1421,1421,1424,1425,1426,1431,1431,1432,1437,1442,1448,1448,1449,1451,1454,1454,1455,1456,1465,1465,1465,1468,1468,1472,1473,1476,1481,1501,1502,1505,1506,1507,1508,1511,1512,1513,1514,1515,1516,1517,1518,1522,1523,1524,1526,1530,1533,1536,1539,1542,1545,1550,1553,1554,1555,1556,1556,1560,1561,1562,1565,1568,1571,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1585,1590,1591,1592,1593,1594,1595,1596,1599,1602,1603,1606,1610,1614,1617,1622,1623,1624,1625,1626,1627,1630,1632,1635,1637,1638,1641,1644,1645,1650,1651,1654,1657,1660,1663,1663,1664,1665,1667,1670,1673,1676,1683,1684,1690,1691,1692,1693,1697,1699,1703,1706,1705,1705,1707,1710,1712,1713,1714,1717,1718,1719,1722,1724,1725,1726,1728,1729,1733,1736,1737,1737,1738,1739,1741,1742,1743,1744,1748,1751,1752,1753,1753,1754,1754,1755,1758,1760,1764,1771,1775,1776,1777,1779,1780,1780,1783,1784,1785,1787,1790,1791,1792,1793,1796,1803,1804,1804,1805,1806,1807,1808,1808,1809,1812,1813,1819,1823,1826,1834,1836,1838,1847,1848,1851,1851,1852,1853,1856,1857,1860,1860,1860,1866,1869,1871,1874,1879,1883,1883,1883,1884,1891,1891,1892,1895,1903,1908,1910,1911,1914,1915,1917,1918,1919,1920,1921,1922,1923,1925,1930,1933,1936,1939,1942,1945,1948,1951,1954,1957,1962,1970,1973,1974,1975,1976,1978,1979,1980,1981,1984,1988,1989,1990,1990,1991,1992,1993,1997,2000,2003,2006,2011,2016,2016,2017,2017,2018,2019,2022,2023,2026,2029,2027,2032,2039,2040,2042,2043,2046,2050,2051,2052,2053,2056,2063,2064,2064,2067,2068,2071,2075,2078,2079,2083,2086,2087,2092,2100,2101,2102,2102,2103,2104,2108,2114,2118,2119,2124,2124,2130,2131,2139,2140,2142,2145,2146,2154,2155,2156,2158,2162,2167,2168,2169,2172,2174,2176,2177,2179,2180,2183,2188,2189,2194,2198,2199,2202,2210,2210,2211,2214,2217,2218,2222,2225,2226,2232,2233,2233,2234,2235,2236,2237,2238,2244,2248,2250,2251,2256,2260,2264,2265,2269,2275,2276,2281,2282,2283,2283,2284,2285,2286,2290,2291,2294,2294,2294,2297,2298,2301,2303,2304,2304,2304,2308,2310,2310,2310,2316,2316,2316,2320,2323,2327,2328,2334,2335,2336,2338,2338,2339,2340,2343,2344,2349,2350,2355,2356,2361,2363,2363,2366,2367,2373,2378,2379,2386,2387,2389,2390,2401,2402,2404,2406,2411,2412,2413,2421,2422,2423,2426,2427,2429,2430,2430,2433,2438,2439,2441,2444,2444,2447,2450,2454,2456,2464,2465,2466,2467,2468,2474,2475,2478,2482,2483,2484,2486,2487,2488,2489,2492,2493,2494,2494,2497,2500,2504,2510,2511,2512,2513,2514,2515,2516,2517,2518,2519,2520,2523,2526,2529,2532,2533,2534,2536,2539,2542,2543,2544,2545,2546,2548,2548,2550,2554,2556,2560,2563,2564,2565,2566,2567,2568,2569,2570,2575,2583,2586,2589,2595,2596,2597,2598,2599,2600,2601,2602,2603,2603,2604,2605,2607,2612,2612,2613,2614,2616,2619,2622,2623,2624,2626,2629,2632,2635,2636,2637,2639,2642,2645,2650,2653,2659,2660,2661,2662,2663,2664,2665,2666,2672,2673,2674,2675,2679,2680,2681,2682,2683,2684,2685,2686,2688,2689,2692,2696,2700,2704,2709,2710,2711,2712,2713,2715,2718,2720,2724,2725,2726,2727,2728,2729,2730,2731,2734,2738,2739,2740,2748,2752,2753,2754,2755,2756,2757,2762,2763,2766,2767,2770,2774,2776,2780,2781,2782,2784,2798,2788,2789,2790,2793,2796,2799,2800,2801,2801,2802,2803,2804,2805,2808,2809,2810,2813,2818,2820,2826,2827,2828,2829,2832,2833,2834,2835,2840,2841,2842,2843,2844,2847,2848,2851,2852,2855,2856,2859,2862,2865,2867,2868,2871,2873,2877,2878,2879,2880,2881,2886,2889,2892,2896,2900,2901,2902,2903,2904,2905,2911,2912,2913,2914,2915,2916,2917,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,2933,2936,2939,2942,2945,2948,2951,2956,2957,2958,2960,2961,2963,2964,2965,2966,2967,2968,2970,2971,2972,2975,2977,2978,2984,2992,2993,2993,2996,2999,3005,3006,3007,3008,3009,3010,3011,3012,3016,3017,3018,3019,3020,3021,3022,3023,3024,3026,3027,3028,3029,3030,3030,3034,3037,3039,3040,3042,3043,3044,3045,3046,3049,3054,3055,3056,3057,3061,3094,3095,3132,3133,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3151,3153,3156,3159,3160,3166,3167,3168,3169,3170,3171,3172,3173,3174,3176,3179,3181,3184,3186,3189,3192,3195,3198,3201,3204,3205,3207,3209,3231,3232,3233,3235,3236,3237,3238,3239,3247,3252,3253,3256,3257,3259,3260,3265,3266,3269,3270,3272,3273,3274,3275,3277,3281,3282,3285,3286,3287,3291,3307,3293,3294,3295,3296,3297,3298,3299,3300,3302,3305,3324,3311,3314,3315,3316,3318,3319,3322,3328,3329,3329,3330,3332,3334,3335,3338,3340,3341,3343,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3378,3379,3380,3381,3382,3383,3384,3385,3386,3388,3389,3392,3408,3409,3410,3411,3419,3422,3423,3424,3425,3426,3431,3434,3436,3440,3441,3442,3443,3447,3453,3454,3457,3464,3466,3470,3473,3474,3475,3477,3480,3483,3486,3490,3492,3496,3497,3498,3501,3503,3513,3520,3514,3527,3641,3530,3531,3532,3533,3534,3534,3538,3542,3547,3552,3553,3556,3559,3560,3569,3570,3571,3572,3633,3576,3577,3578,3579,3581,3582,3582,3586,3587,3588,3592,3596,3597,3598,3602,3605,3610,3615,3617,3627,3630,3632,3634,3635,3636,3639,3644,3646,3647,3648,3648,3652,3657,3658,3662,3665,3666,3669,3670,3674,3717,3724,3724,3737,3740,3741,3746,3748,3749,3750,3751,3752,3755,3756,3766,3767,3768,3769,3770,3773,3776,3778,3782,3783,3784,3787,3788,3794,3801,3802,3805,3806,3810,3811,3811,3813,3814,3815,3817,3818,3819,3820,3821,3822,3823,3824,3826,3828,3829,3829,3832,3835,3838,3840,3840,3845,3848,3849,3852,3853,3854,3855,3856,3857,3858,3861,3865,3868,3869,3869,3875,3877,3886,3892,3892,3892,3893,3894,3894,3895,3895,3896,3900,3900,3901,3903,3908,3909,3910,3910,3911,3914,3915,3917,3918,3919,3920,3923,3924,3925,3926,3926,3927,3930,3931,3933,3937,3938,3939,3940,3941,3945,3946,3948,3949,3950,3954,3955,3957,3958,3962,3963,3964,3973,3969,3971,3978,3979,3981,3982,3983,3984,3987,3988,3990,3991,3992,3994,3995,3997,3998,3999,4003,4008,4009,4011,4010,4012,4013,4014,4015,4018,4022,4026,4028,4033,4034,4035,4036,4036,4037,4038,4039,4044,4045,4049,4053,4058,4059,4060,4063,4068,4069,4069,4070,4071,4073,4074,4076,4077,4080,4083,4088,4089,4092,4096,4097,4098,4106,4116,4116,4117,4119,4123,4124,4125,4126,4133,4138,4153,4154,4155,4158,4159,4160,4169,4170,4172,4173,4174,4178,4185,4186,4187,4188,4190,4194,4200,4197,4201,4202,4202,4203,4204,4208,4209,4211,4212,4213,4220,4221,4223,4224,4225,4226,4229,4230,4234,4235,4240,4241,4244,4248,4249,4251,4252,4253,4253,4254,4257,4263,4264,4265,4268,4268,4269,4270,4272,4273,4277,4278,4280,4281,4282,4282,4283,4284,4285,4286,4287,4293,4293,4297,4298,4301,4307,4308,4309,4315,4316,4321,4322,4325,4326,4326,4326,4328,4328,4329,4330,4334,4337,4343,4343,4344,4348,4349,4350,4350,4351,4352,4353,4356,4356,4357,4357,4361,4376,4381,4382,4383,4384,4385,4386,4387,4388,4389,4390,4391,4393,4395,4396,4398,4403,4404,4407,4412,4413,4415,4420,4434,4435,4436,4437,4438,4438,4439,4439,4440,4441,4441,4442,4443,4444,4445,4448,4446,4447,4448,4449,4450,4451,4452,4453,4454,4454,4455,4457,4460,4474,4475,4476,4477,4478,4479,4480,4481,4486,4495,4496,4498,4497,4499,4503,4504,4504,4508,4510,4510,4511,4513,4516,4521,4522,4522,4523,4524,4527,4527,4528,4532,4533,4534,4537,4539,4540,4543,4548,4552,4553,4558,4559,4559,4560,4561,4562,4566,4570,4571,4572,4576,4580,4580,4581,4582,4583,4584,4595,4603,4604,4605,4606,4607,4608,4609,4610,4611,4612,4613,4614,4632,4635,4636,4637,4640,4642,4643,4643,4644,4646,4646,4647,4650,4653,4655,4656,4657,4658,4658,4659,4660,4663,4685,4686,4687,4688,4690,4691,4692,4697,4698,4699,4700,4701,4702,4703,4703,4707,4708,4708,4709,4712,4713,4713,4714,4715,4716,4717,4718,4719,4720,4724,4724,4725,4726,4727,4728,4729,4730,4732,4736,4737,4744,4748,4748,4750,4751,4752,4753,4759,4763,4766,4767,4768,4769,4774,4775,4776,4777,4780,4781,4782,4782,4783,4784,4788,4789,4792,4796,4797,4798,4799,4800,4803,4809,4810,4811,4812,4813,4813,4815,4816,4819,4817,4829,4830,4831,4831,4832,4833,4834,4840,4844,4845,4846,4847,4855,4856,4857,4857,4858,4859,4860,4865,4866,4867,4868,4869,4870,4873,4878,4878,4879,4880,4894,4895,4897,4898,4899,4900,4901,4902,4906,4910,4911,4912,4913,4917,4917,4919,4918,4920,4921,4922,4923,4924,4925,4932,4937,4937,4938,4939,4940,4941,4945,4948,4954,4956,4957,4958,4959,4960,4961,4962,4963,4968,4971,4972,4975,4976,4981,4985,4988,4989,4992,4995,4995,4998,5005,5006,5007,5008,5009,5010,5013,5014,5014,5015,5015,5021,5022,5023,5024,5025,5026,5027,5029,5046,5049,5050,5051,5052,5053,5056,5064,5066,5067,5074,5075,5077,5079,5080,5081,5081,5084,5089,5092,5093,5094,5095,5096,5097,5102,5109,5109,5110,5111,5112,5115,5120,5121,5121,5122,5123,5124,5125,5126,5127,5128,5129,5130,5132,5133,5136,5140,5141,5144,5152,5152,5173,5174,5175,5175,5178,5181,5181,5188,5189,5190,5191,5192,5193,5194,5197,5199,5200,5206,5207,5211,5228,5229,5232,5233,5234,5235,5236,5237,5238,5239,5242,5243,5244,5245,5246,5247,5248,5250,5253,5254,5254,5255,5256,5257,5258,5259,5262,5266,5267,5273,5274,5275,5276,5277,5278,5278,5281,5285,5293,5294,5295,5297,5298,5299,5301,5302,5303,5306,5304,5305,5305,5311,5312,5313,5316,5319,5322,5323,5324,5325,5327,5328,5329,5330,5331,5334,5336,5337,5338,5345,5345,5348,5354,5355,5358,5359,5360,5362,5363,5365,5366,5367,5368,5369,5370,5371,5376,5381,5381,5388,5384,5386,5391,5391,5395,5396,5401,5406,5407,5414,5417,5421,5427,5427,5428,5433,5433,5434,5435,5438,5439,5440,5443,5447,5446,5454,5451,5453,5452,5456,5457,5457,5460,5460,5464,5465,5466,5473,5476,5480,5485,5493,5494,5497,5498,5499,5502,5506,5513,5516,5524,5521,5522,5531,5528,5529,5529,5530,5549,5534,5535,5536,5537,5540,5538,5540,5543,5546,5548,5584,5551,5552,5553,5554,5555,5558,5559,5566,5566,5576,5576,5570,5581,5583,5585,5586,5587,5588,5589,5590,5591,5594,5595,5598,5603,5604,5604,5605,5606,5611,5615,5616,5616,5618,5621,5622,5623,5624,5653,5633,5634,5635,5636,5637,5640,5641,5646,5650,5633,5657,5658,5665,5668,5669,5670,5671,5673,5677,5676,5680,5681,5689,5692,5699,5704,5707,5708,5710,5713,5714,5715,5716,5723,5726,5728,5731,5736,5737,5738,5739,5748,5750,5751,5752,5753,5756,5757,5757,5759,5758,5760,5765,5767,5772,5772,5773,5778,5783,5786,5791,5792,5794,5795,5796,5797,5800,5802,5801,5803,5804,5804,5806,5810,5811,5812,5815,5816,5817,5818,5819,5822,5822,5823,5829,5830,5833,5834,5835,5836,5837,5838,5841,5844,5845,5848,5853,5854,5858,5860,5861,5862,5863,5866,5866,5868,5869,5871,5872,5875,5876,5876,5884,5885,5886,5889,5895,5898,5902,5903,5908,5913,5911,5914,5917,5924,5925,5926,5927,5928,5929,5931,5932,5933,5934,5937,5938,5939,5944,5945,5955,5956,5957,5960,5961,5962,5965,5966,5967,5968,5971,5974,5975,5979,5980,5981,5982,5983,5991,5992,5993,5996,6000,6003,6004,6008,6011,6016,6017,6018,6019,6020,6021,6022,6026,6027,6034,6035,6036,6037,6038,6039,6042,6044,6047,6048,6052,6073,6074,6076,6078,6077,6079,6080,6081,6082,6085,6088,6089,6090,6094,6097,6103,6104,6105,6108,6109,6110,6113,6114,6117,6120,6121,6124,6130,6131,6134,6138,6141,6143,6149,6150,6151,6152,6153,6154,6162,6167,6169,6170,6172,6173,6174,6175,6176,6179,6180,6181,6184,6188,6189,6190,6193,6197,6199,6201,6205,6206,6207,6208,6209,6210,6211,6215,6218,6220,6222,6222,6224,6229,6230,6231,6232,6233,6235,6236,6237,6239,6251,6253,6254,6255,6256,6259,6260,6264,6266,6270,6279,6280,6281,6282,6292,6300,6303,6309,6311,6312,6316,6317,6319,6322,6324,6325,6327,6331,6334,6336,6338,6340,6342,6343,6344,6345,6346,6347,6350,6352,6353,6357,6358,6359,6360,6361,6362,6364,6368,6369,6371,6372,6374,6375,6376,6378,6379,6380,6381,6382,6383,6384,6388,6389,6390,6391,6392,6396,6397,6398,6399,6400,6401,6402,6402,6404,6405,6406,6407,6408,6409,6410,6411,6411,6412,6418,6419,6423,6426,6427,6429,6430,6431,6435,6436,6437,6438,6439,6443,6444,6445,6446,6447,6449,6450,6451,6452,6453,6457,6458,6462,6463,6464,6465,6467,6468,6469,6470,6471,6472,6473,6474,6475,6475,6477,6478,6479,6480,6481,6482,6483,6487,6484,6488,6491,6497,6499,6503,6504,6505,6506,6507,6508,6509,6510,6516,6523,6524,6525,6526,6529,6533,6534,6535,6536,6537,6539,6547,6548,6549,6550,6558,6559,6560,6561,6562,6563,6564,6566,6567,6568,6569,6570,6571,6572,6573,6576,6579,6582,6583,6584,6588,6589,6591,6592,6595,6600,6602,6603,6606,6607,6610,6611,6612,6615,6616,6617,6618,6619,6620,6621,6626,6628,6634,6636,6639,6641,6642,6643,6644,6645,6646,6654,6659,6665,6667,6673,6674,6675,6676,6677,6678,6679,6681,6684,6684,6692,6695,6699,6700,6701,6701,6701,6703,6704,6708,6709,6710,6712,6715,6716,6717,6720,6721,6722,6723,6724,6725,6729,6732,6736,6742,6743,6744,6745,6745,6746,6750,6756,6757,6760,6761,6762,6763,6764,6766,6767,6768,6776,6783,6779,6781,6780,6784,6784,6788,6802,6790,6791,6792,6793,6795,6795,6795,6796,6797,6798,6801,6803,6804,6805,6807,6808,6809,6810,6811,6812,6813,6814,6819,6819,6822,6824,6825,6826,6830,6833,6834,6839,6843,6844,6845,6851,6853,6852,6853,6858,6864,6862,6863,6867,6869,6870,6871,6872,6873,6874,6875,6876,6878,6885,6883,6889,6892,6894,6897,6898,6899,6901,6902,6908,6916,6919,6920,6921,6926,6931,6932,6932,6933,6934,6935,6936,6937,6940,6943,6946,6947,6954,6955,6955,6957,6959,6964,6973,6974,6975,6975,6976,6976,6976,6976,6977,6985,6987,6994,6989,6990,6990,6991,6992,6993,6997,6998,6999,7004,7005,7005,7006,7007,7024,7014,7015,7015,7016,7018,7018,7019,7020,7021,7027,7036,7029,7030,7031,7032,7033,7034,7039,7040,7040,7041,7042,7048,7047,7048,7052,7107,7059,7060,7061,7062,7065,7066,7067,7068,7069,7077,7078,7082,7083,7084,7085,7085,7087,7088,7089,7093,7094,7095,7096,7099,7100,7102,7103,7104,7108,7109,7114,7115,7116,7118,7119,7120,7121,7122,7123,7124,7125,7129,7130,7131,7131,7132,7140,7143,7144,7147,7148,7150,7151,7152,7153,7154,7155,7158,7159,7159,7160,7172,7172,7172,7172,7173,7174,7175,7176,7176,7177,7178,7179,7186,7191,7192,7193,7195,7198,7204,7205,7206,7206,7207,7208,7209,7210,7211,7215,7220,7221,7221,7222,7223,7224,7225,7227,7230,7234,7235,7236,7237,7238,7239,7240,7245,7247,7254,7255,7257,7262,7263,7264,7265,7268,7271,7273,7274,7278,7280,7282,7283,7284,7286,7289,7292,7294,7294,7295,7296,7297,7298,7300,7301,7303,7302,7308,7315,7316,7317,7320,7322,7325,7329,7332,7333,7334,7335,7338,7342,7347,7348,7349,7354,7358,7359,7360,7368,7368,7370,7369,7372,7377,7380,7381,7384,7385,7386,7387,7387,7396,7397,7400,7401,7414,7417,7421,7420,7424,7425,7425,7426,7426,7429,7430,7433,7434,7440,7441,7442,7443,7444,7445,7449,7454,7456,7456,7459,7460,7464,7465,7467,7468,7474,7475,7475,7476,7476,7480,7490,7493,7497,7501,7502,7506,7507,7508,7509,7510,7521,7525,7525,7526,7527,7528,7536,7540,7541,7544,7544,7545,7546,7550,7550,7554,7554,7555,7556,7559,7559,7562,7565,7568,7575,7575,7576,7577,7581,7582,7583,7584,7585,7590,7591,7597,7598,7606,7607,7615,7621,7627,7628,7632,7636,7637,7640,7642,7641,7644,7648,7652,7654,7655,7656,7657,7658,7659,7668,7689,7690,7691,7696,7715,7698,7699,7700,7701,7702,7706,7706,7707,7713,7714,7718,7719,7720,7724,7725,7726,7727,7733,7734,7738,7738,7741,7742,7743,7746,7749,7750,7751,7752,7758,7759,7760,7771,7776,7777,7777,7778,7781,7786,7787,7795,7795,7800,7801,7802,7803,7804,7805,7809,7810,7811,7812,7813,7820,7821,7825,7826,7826,7827,7834,7836,7837,7838,7839,7839,7840,7841,7842,7843,7852,7856,7857,7858,7860,7863,7875,7876,7876,7876,7877,7878,7878,7879,7880,7883,7884,7884,7885,7886,7891,7900,7901,7907,7908,7909,7910,7911,7912,7912,7913,7916,7918,7919,7920,7920,7921,7922,7922,7923,7933,7934,7942,7956,7945,7946,7949,7950,7950,7951,7951,7952,7953,7957,7958,7959,7960,7964,7965,7966,7967,7967,7968,7969,7970,7976,7977,7978,7979,7982,7983,7983,7984,7993,7994,7995,7995,7996,7996,7997,7998,8001,8002,8007,8015,8016,8017,8017,8018,8019,8019,8020,8021,8022,8023,8024,8027,8028,8029,8030,8031,8034,8039,8043,8044,8045,8046,8047,8050,8061,8062,8063,8063,8087,8065,8066,8074,8077,8077,8081,8084,8088,8088,8089,8090,8091,8093,8093,8094,8095,8098,8101,8107,8109,8110,8111,8116,8116,8117,8118,8121,8121,8122,8123,8123,8124,8125,8129,8131,8134,8141,8142,8150,8151,8158,8158,8159,8162,8166,8168,8168,8168,8171,8173,8174,8175,8176,8177,8177,8178,8179,8183,8184,8185,8186,8194,8196,8196,8199,8200,8201,8202,8208,8214,8215,8218,8220,8222,8224,8228,8230,8231,8234,8235,8242,8239,8240,8246,8252,8253,8254,8265,8278,8280,8281,8282,8300,8320,8303,8304,8305,8306,8308,8309,8310,8314,8316,8317,8319,8321,8321,8327,8327,8328,8346,8333,8334,8339,8340,8341,8342,8345,8347,8348,8349,8351,8354,8355,8356,8357,8358,8359,8360,8366,8367,8367,8368,8369,8372,8373,8375,8377,8378,8386,8385,8386,8389,8389,8390,8398,8408,8409,8410,8412,8413,8416,8418,8419,8420,8421,8422,8422,8426,8427,8428,8429,8430,8431,8438,8439,8448,8451,8459,8461,8462,8463,8464,8470,8471,8471,8477,8482,8483,8484,8485,8492,8493,8496,8498,8499,8505,8509,8510,8511,8512,8513,8517,8522,8523,8526,8532,8535,8536,8538,8540,8545,8557,8559,8566,8567,8570,8575,8576,8589,8590,8591,8592,8593,8595,8596,8597,8598,8599,8602,8603,8605,8608,8610,8632,8633,8635,8653,8639,8640,8641,8642,8642,8643,8644,8645,8646,8646,8647,8648,8649,8650,8656,8657,8660,8661,8667,8664,8666,8665,8666,8671,8671,8672,8675,8678,8681,8691,8694,8695,8696,8699,8700,8701,8704,8704,8705,8706,8707,8710,8711,8715,8717,8717,8717,8723,8724,8726,8726,8728,8729,8732,8733,8737,8736,8737,8741,8742,8742,8743,8747,8750,8759,8758,8762,8762,8767,8794,8795,8796,8797,8798,8799,8800,8801,8820,8809,8810,8811,8812,8813,8813,8814,8815,8818,8823,8893,8827,8828,8829,8834,8833,8834,8837,8835,8837,8838,8846,8846,8850,8851,8852,8853,8854,8855,8856,8859,8863,8862,8864,8864,8865,8866,8867,8868,8871,8872,8874,8878,8883,8883,8884,8885,8886,8887,8888,8889,8895,8896,8897,8899,8899,8900,8901,8902,8903,8904,8908,8916,8917,8919,8918,8921,8952,8923,8924,8926,8927,8930,8931,8932,8933,8933,8934,8935,8936,8939,8940,8944,8945,8948,8953,8954,8959,8961,8970,8971,8971,8972,8973,8975,8976,8977,8978,8979,8980,8987,8991,8997,9000,9006,9009,9010,9011,9012,9013,9013,9021,9021,9022,9023,9023,9024,9025,9028,9026,9027,9032,9051,9054,9055,9059,9062,9063,9065,9066,9071,9073,9084,9085,9086,9090,9090,9091,9097,9093,9094,9095,9096,9098,9098,9099,9099,9102,9102,9103,9103,9106,9107,9107,9108,9111,9112,9114,9119,9117,9118,9126,9126,9127,9127,9128,9129,9132,9136,9137,9138,9139,9140,9142,9143,9145,9146,9147,9160,9162,9163,9164,9164,9165,9169,9170,9171,9172,9176,9177,9178,9180,9181,9183,9184,9185,9189,9190,9193,9194,9195,9196,9201,9201,9202,9203,9204,9205,9206,9212,9213,9222,9223,9224,9225,9226,9233,9237,9238,9240,9254,9255,9256,9256,9257,9260,9261,9266,9275,9276,9279,9282,9291,9292,9293,9294,9300,9301,9302,9301,9305,9306,9307,9310,9313,9318,9319,9320,9321,9322,9329,9330,9332,9333,9336,9337,9340,9347,9348,9350,9350,9350,9360,9363,9364,9368,9369,9370,9370,9376,9377,9380,9381,9382,9383,9384,9385,9395,9399,9399,9400,9401,9404,9405,9406,9406,9411,9412,9413,9413,9416,9416,9417,9418,9419,9423,9433,9436,9437,9439,9442,9442,9443,9444,9445,9446,9447,9448,9451,9451,9452,9453,9454,9455,9458,9459,9468,9471,9478,9479,9492,9494,9496,9498,9501,9502,9503,9503,9507,9507,9510,9511,9513,9513,9516,9519,9522,9523,9526,9527,9531,9532,9537,9539,9538,9542,9547,9548,9549,9550,9553,9560,9563,9564,9567,9567,9568,9570,9573,9574,9575,9582,9591,9595,9601,9604,9605,9606,9607,9611,9619,9620,9621,9626,9627,9629,9636,9637,9640,9641,9644,9644,9647,9650,9651,9655,9660,9669,9669,9669,9669,9670,9671,9673,9682,9685,9683,9687,9688,9689,9694,9694,9695,9695,9698,9699,9702,9706,9711,9719,9729,9732,9733,9736,9740,9744,9749,9748,9748,9748,9753,9756,9756,9759,9762,9771,9772,9773,9774,9775,9777,9778,9779,9780,9781,9785,9789,9790,9791,9792,9800,9801,9804,9805,9806,9809,9813,9812,9816,9816,9817,9821,9822,9826,9827,9830,9842,9843,9846,9847,9850,9855,9863,9866,9867,9868,9869,9872,9873,9874,9877,9878,9883,9891,9892,9895,9896,9897,9898,9899,9906,9900,9908,9910,9916,9917,9918,9919,9924,9926,9930,9931,9932,9932,9933,9936,9937,9943,9944,9945,9948,9949,9950,9950,9954,9952,9957,9956,9962,9962,9967,9974,9977,9978,9984,9982,9981,9982,9982,9987,9989,9990,9991,9992,9995,9996,9996,9997,9998,9999,10000,10005,10006,10006,10006,10007,10012,10019,10022,10036,10039,10047,10044,10042,10044,10044,10050,10053,10054,10055,10056,10057,10058,10067,10068,10071,10071,10072,10073,10081,10087,10088,10089,10089,10090,10091,10094,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,10112,10121,10122,10123,10126,10127,10129,10130,10133,10134,10135,10136,10138,10141,10147,10144,10144,10151,10166,10167,10168,10170,10172,10173,10174,10175,10176,10183,10184,10185,10187,10188,10189,10193,10194,10195,10196,10200,10201,10205,10206,10211,10212,10212,10213,10214,10219,10220,10221,10226,10226,10231,10231,10231,10235,10236,10237,10238,10241,10242,10242,10243,10246,10246,10247,10248,10249,10250,10252,10253,10256,10265,10269,10273,10273,10273,10276,10295,10298,10299,10301,10302,10305,10310,10310,10313,10314,10317,10318,10319,10324,10325,10326,10329,10338,10351,10352,10353,10356,10359,10364,10365,10366,10367,10368,10368,10376,10377,10380,10385,10385,10386,10393,10402,10405,10406,10410,10411,10412,10416,10417,10418,10419,10422,10425,10426,10427,10428,10432,10435,10436,10441,10442,10445,10469,10474,10477,10478,10482,10486,10487,10488,10491,10491,10494,10495,10498,10499,10502,10503,10506,10507,10508,10511,10517,10522,10525,10526,10527,10530,10537,10543,10548,10549,10553,10554,10566,10569,10570,10575,10578,10581,10586,10589,10599,10600,10600,10601,10604,10605,10608,10613,10614,10616,10626,10626,10627,10628,10631,10634,10636,10639,10642,10646,10647,10647,10648,10649,10650,10652,10656,10664,10665,10666,10667,10668,10669,10670,10687,10688,10689,10692,10693,10696,10699,10700,10705,10709,10710,10713,10717,10723,10724,10727,10733,10738,10741,10745,10766,10769,10770,10776,10777,10778,10780,10791,10793,10794,10797,10798,10799,10800,10804,10814,10815,10818,10821,10830,10833,10837,10840,10843,10848,10849,10850,10851,10852,10853,10856,10863,10868,10869,10872,10876,10877,10880,10883,10887,10887,10888,10889,10890,10891,10892,10897,10906,10907,10909,10915,10916,10919,10922,10939,10942,10944,10946,10950,10953,10954,10955,10958,10959,10962,10967,10968,10972,10977,10980,10981,10987,10988,10989,10990,10993,10996,11016,11019,11023,11028,11031,11034,11035,11040,11043,11046,11049,11050,11054,11057,11060,11061,11065,11070,11071,11076,11081,11084,11085,11087,11096,11096,11100,11101,11102,11106,11107,11114,11115,11116,11117,11120,11123,11124,11129,11131,11136,11137,11138,11145,11146,11147,11148,11149,11150,11150,11166,11167,11170,11171,11174,11175,11178,11178,11179,11182,11184,11189,11190,11196,11200,11208,11208,11209,11217,11218,11221,11222,11223,11227,11228,11229,11232,11236,11237,11238,11243,11244,11245,11246,11249,11251,11253,11257,11261,11268,11269,11276,11279,11280,11281,11283,11284,11285,11287,11288,11295,11298,11299,11300,11303,11304,11306,11306,11305,11310,11311,11312,11313,11314,11314,11315,11316,11319,11325,11326,11327,11328,11333,11334,11335,11336,11337,11338,11338,11344,11345,11349,11350,11357,11358,11360,11377,11381,11382,11392,11393,11396,11400,11403,11404,11408,11412,11417,11420,11423,11426,11429,11432,11433,11436,11439,11446,11449,11450,11451,11457,11460,11463,11466,11467,11470,11473,11480,11483,11484,11485,11488,11505,11514,11532,11532,11533,11538,11541,11542,11543,11548,11552,11555,11555,11556,11559,11571,11572,11573,11574,11577,11578,11581,11582,11586,11600,11601,11604,11605,11608,11617,11618,11623,11624,11626,11627,11630,11634,11637,11641,11643,11647,11648,11649,11652,11656,11659,11663,11664,11666,11671,11674,11678,11679,11680,11685,11686,11690,11692,11696,11697,11698,11701,11707,11708,11736,11711,11712,11713,11716,11716,11717,11718,11719,11720,11721,11722,11723,11727,11727,11728,11729,11730,11731,11733,11735,11737,11738,11739,11740,11742,11743,11750,11751,11754,11752,11756,11758,11759,11760,11761,11763,11764,11765,11766,11774,11775,11778,11781,11781,11784,11786,11786,11791,11792,11793,11794,11795,11797,11798,11799,11802,11805,11806,11811,11812,11818,11819,11822,11823,11827,11827,11835,11838,11838,11839,11840,11843,11846,11849,11853,11854,11857,11857,11859,11860,11863,11866,11869,11874,11875,11876,11877,11878,11879,11880,11881,11883,11885,11892,11893,11900,11907,11912,11913,11914,11915,11916,11917,11917,11918,11918,11919,11922,11925,11926,11927,11930,11930,11931,11938,11939,11943,11949,11950,11952,11954,11961,11962,11963,11963,11964,11965,11966,11967,11970,11971,11972,11973,11974,11976,11977,11978,11992,11994,11994,11995,11995,11996,11996,11997,11997,11998,11998,11999,12002,12003,12006,12007,12008,12009,12014,12015,12016,12017,12026,12030,12037,12038,12040,12040,12041,12042,12043,12046,12049,12052,12050,12054,12056,12057,12065,12066,12067,12073,12074,12074,12075,12078,12079,12079,12080,12084,12088,12089,12090,12091,12091,12094,12095,12098,12099,12099,12102,12132,12133,12134,12135,12136,12137,12138,12139,12147,12148,12153,12153,12153,12159,12164,12165,12166,12171,12168,12169,12170,12172,12173,12174,12175,12176,12177,12179,12180,12183,12187,12188,12189,12190,12196,12200,12202,12204,12205,12206,12207,12211,12211,12212,12213,12213,12214,12215,12216,12217,12218,12220,12221,12223,12223,12224,12225,12226,12227,12230,12232,12233,12234,12235,12238,12240,12242,12243,12244,12245,12246,12250,12253,12257,12257,12258,12262,12263,12264,12265,12266,12267,12268,12274,12276,12287,12290,12291,12299,12295,12306,12301,12309,12310,12311,12312,12313,12314,12316,12317,12326,12333,12342,12343,12346,12347,12348,12349,12354,12355,12362,12365,12365,12366,12367,12372,12376,12377,12379,12379,12380,12392,12393,12394,12395,12397,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12413,12419,12420,12421,12422,12425,12429,12432,12432,12433,12434,12440,12441,12448,12449,12450,12450,12450,12451,12454,12502,12505,12508,12509,12511,12512,12513,12516,12517,12518,12519,12522,12522,12524,12523,12525,12526,12527,12529,12533,12536,12537,12538,12539,12541,12542,12544,12559,12560,12561,12562,12563,12563,12564,12565,12566,12568,12569,12573,12574,12575,12576,12577,12578,12578,12579,12581,12586,12587,12588,12592,12593,12596,12597,12603,12612,12613,12617,12618,12623,12624,12628,12631,12632,12633,12634,12638,12653,12656,12655,12657,12658,12659,12663,12666,12667,12668,12669,12671,12671,12673,12677,12678,12679,12680,12681,12687,12688,12689,12690,12693,12696,12696,12699,12700,12701,12703,12704,12705,12707,12713,12737,12741,12744,12745,12747,12748,12749,12750,12751,12757,12762,12763,12764,12765,12766,12767,12770,12773,12774,12775,12778,12790,12793,12796,12799,12810,12811,12812,12813,12814,12819,12824,12825,12828,12841,12850,12850,12851,12852,12856,12857,12858,12859,12860,12868,12871,12872,12892,12895,12898,12899,12901,12902,12906,12907,12908,12909,12910,12911,12914,12915,12918,12919,12922,12935,12937,12943,12943,12951,12952,12955,12956,12957,12958,12959,12961,12968,12969,12971,12972,12973,12974,12975,12979,12979,12984,12985,12992,12993,12997,12998,13006,13008,13009,13011,13012,13015,13016,13017,13018,13019,13020,13023,13024,13025,13026,13027,13028,13031,13032,13033,13060,13061,13062,13064,13065,13066,13067,13068,13069,13072,13076,13076,13078,13080,13081,13082,13085,13086,13087,13088,13089,13090,13091,13095,13096,13099,13101,13105,13109,13110,13112,13113,13116,13120,13123,13127,13128,13129,13130,13131,13132,13133,13134,13135,13137,13138,13139,13142,13143,13145,13148,13149,13158,13161,13165,13169,13172,13176,13177,13180,13181,13186,13187,13188,13189,13190,13191,13191,13192,13194,13202,13210,13212,13213,13214,13215,13216,13217,13219,13220,13221,13222,13223,13231,13235,13238,13289,13290,13291,13291,13292,13293,13295,13298,13299,13300,13300,13301,13302,13303,13304,13307,13311,13312,13318,13315,13315,13320,13321,13322,13323,13324,13325,13326,13329,13330,13331,13332,13333,13335,13336,13339,13340,13342,13343,13347,13348,13360,13361,13363,13364,13365,13366,13367,13368,13374,13376,13377,13378,13379,13380,13381,13387,13414,13388,13393,13394,13398,13399,13401,13408,13412,13416,13418,13420,13421,13423,13424,13429,13430,13431,13433,13434,13435,13439,13442,13444,13452,13453,13456,13459,13460,13461,13465,13466,13467,13468,13470,13471,13472,13473,13474,13478,13479,13507,13508,13509,13510,13513,13516,13526,13527,13530,13530,13531,13532,13533,13534,13536,13537,13538,13538,13539,13540,13541,13542,13543,13546,13556,13557,13558,13558,13559,13560,13561,13562,13564,13565,13566,13566,13567,13568,13569,13570,13571,13574,13584,13585,13588,13588,13589,13590,13591,13592,13594,13595,13596,13596,13597,13598,13599,13600,13601,13604,13612,13613,13616,13616,13617,13618,13619,13620,13622,13623,13624,13624,13625,13626,13627,13628,13629,13632,13636,13638,13639,13640,13641,13642,13643,13644,13646,13647,13649,13650,13652,13653,13661,13661,13662,13664,13664,13665,13666,13667,13669,13681,13683,13684,13697,13700,13701,13703,13702,13704,13705,13708,13709,13710,13718,13721,13725,13726,13736,13743,13751,13752,13753,13754,13755,13756,13757,13758,13758,13758,13759,13760,13761,13767,13768,13769,13770,13771,13772,13778,13779,13780,13781,13782,13783,13785,13786,13786,13787,13788,13789,13790,13791,13793,13795,13813,13800,13801,13802,13803,13804,13806,13805,13808,13810,13809,13817,13822,13822,13822,13823,13824,13825,13826,13827,13828,13829,13830,13836,13840,13841,13843,13845,13846,13847,13848,13849,13852,13853,13856,13858,13859,13860,13871,13874,13915,13877,13878,13901,13881,13882,13883,13885,13886,13887,13888,13892,13894,13902,13903,13904,13911,13912,13916,13918,13920,13929,13930,13931,13932,13933,13935,13937,13938,13939,13942,13943,13945,13946,13949,13950,13951,13952,13954,13953,13955,13956,13972,13981,13982,13983,13984,13985,13986,13987,13988,13991,13992,13993,13995,13998,13999,14000,14003,14007,14009,14010,14014,14026,14029,14033,14034,14042,14048,14060,14065,14070,14074,14081,14086,14090,14094,14095,14099,14100,14103,14107,14108,14109,14110,14111,14112,14113,14122,14125,14128,14130,14131,14132,14133,14135,14135,14136,14141,14142,14143,14144,14149,14150,14152,14153,14156,14157,14159,14160,14166,14167,14168,14168,14171,14178,14179,14180,14185,14185,14188,14190,14196,14197,14198,14202,14206,14207,14208,14209,14212,14215,14216,14217,14220,14224,14229,14230,14231,14232,14233,14236,14240,14243,14248,14249,14252,14257,14258,14258,14259,14260,14260,14261,14262,14263,14264,14265,14266,14267,14271,14272,14273,14273,14274,14275,14275,14278,14279,14280,14281,14281,14282,14282,14283,14284,14288,14307,14308,14309,14310,14311,14311,14314,14317,14321,14322,14323,14326,14330,14346,14349,14353,14353,14354,14355,14356,14357,14360,14360,14361,14362,14363,14366,14370,14372,14403,14374,14375,14376,14379,14379,14380,14383,14384,14385,14386,14387,14389,14392,14393,14394,14397,14397,14398,14399,14400,14406,14407,14408,14409,14416,14446,14419,14420,14423,14424,14425,14428,14428,14429,14430,14433,14433,14434,14435,14438,14439,14439,14443,14450,14451,14455,14455,14456,14457,14458,14461,14466,14467,14472,14474,14478,14479,14482,14483,14483,14487,14488,14488,14493,14508,14509,14511,14512,14513,14516,14517,14520,14521,14525,14526,14527,14529,14532,14545,14546,14547,14548,14551,14552,14553,14558,14559,14561,14564,14577,14587,14588,14588,14593,14593,14598,14598,14600,14614,14615,14618,14618,14619,14621,14621,14622,14623,14629,14632,14633,14634,14635,14636,14637,14638,14640,14644,14647,14650,14651,14656,14661,14665,14666,14667,14669,14670,14671,14675,14681,14682,14683,14684,14687,14693,14694,14695,14696,14701,14712,14715,14716,14719,14722,14722,14723,14723,14724,14724,14725,14725,14728,14728,14729,14730,14731,14735,14735,14738,14741,14742,14743,14743,14746,14750,14749,14752,14756,14760,14760,14763,14766,14767,14768,14768,14771,14775,14774,14777,14781,14785,14792,14795,14796,14800,14803,14806,14807,14821,14822,14823,14824,14824,14825,14827,14826,14828,14828,14829,14830,14831,14834,14836,14841,14845,14848,14849,14849,14850,14851,14851,14852,14853,14853,14854,14855,14856,14857,14860,14861,14866,14869,14869,14870,14871,14872,14873,14874,14875,14876,14876,14877,14878,14881,14884,14885,14886,14889,14896,14902,14903,14907,14912,14918,14926,14920,14921,14922,14923,14924,14925,14927,14928,14929,14931,14932,14933,14936,14942,14947,14948,14948,14952,14953,14954,14964,14965,14965,14966,14977,14978,14979,14984,14985,14991,14993,14993,14996,15004,15005,15006,15006,15007,15007,15010,15011,15016,15019,15028,15030,15031,15032,15033,15033,15035,15040,15041,15046,15049,15057,15062,15063,15064,15065,15065,15066,15071,15072,15073,15074,15082,15092,15091,15095,15104,15105,15106,15107,15108,15112,15113,15114,15115,15116,15117,15118,15120,15121,15122,15124,15124,15125,15126,15127,15128,15131,15134,15135,15137,15139,15139,15140,15144,15145,15146,15147,15148,15148,15149,15150,15154,15155,15159,15163,15165,15164,15166,15167,15168,15171,15173,15174,15175,15179,15180,15181,15182,15183,15187,15190,15196,15199,15203,15203,15209,15212,15217,15218,15219,15219,15221,15220,15220,15222,15223,15224,15225,15229,15237,15234,15236,15241,15243,15244,15245,15247,15248,15248,15252,15257,15257,15258,15259,15260,15263,15267,15268,15270,15271,15274,15275,15279,15280,15287,15292,15300,15301,15304,15303,15304,15306,15307,15308,15309,15312,15313,15319,15317,15327,15330,15328,15335,15333,15340,15344,15348,15352,15355,15355,15355,15358,15359,15360,15361,15367,15373,15378,15382,15385,15388,15441,15395,15396,15397,15401,15405,15406,15408,15409,15410,15411,15414,15415,15416,15422,15423,15424,15428,15430,15433,15434,15435,15436,15437,15438,15439,15450,15443,15444,15445,15446,15447,15448,15449,15467,15452,15453,15457,15458,15459,15460,15461,15465,15468,15469,15469,15470,15471,15473,15477,15478,15478,15479,15480,15481,15482,15485,15486,15490,15491,15492,15493,15494,15495,15496,15499,15500,15501,15502,15508,15509,15510,15511,15512,15516,15517,15520,15526,15530,15531,15534,15536,15537,15538,15546,15553,15554,15555,15556,15563,15564,15569,15575,15578,15580,15584,15585,15586,15587,15588,15589,15590,15593,15597,15598,15602,15603,15609,15614,15615,15626,15629,15632,15633,15634,15634,15638,15641,15647,15648,15649,15650,15652,15654,15654,15657,15660,15660,15660,15661,15661,15665,15671,15672,15672,15676,15677,15677,15681,15681,15687,15686,15691,15691,15693,15699,15700,15701,15701,15705,15712,15713,15713,15714,15718,15719,15720,15723,15724,15727,15727,15731,15732,15732,15737,15735,15753,15754,15755,15756,15757,15759,15762,15762,15763,15763,15769,15777,15777,15787,15788,15789,15790,15791,15792,15794,15794,15800,15804,15805,15805,15815,15819,15820,15821,15823,15827,15828,15829,15832,15833,15834,15837,15839,15844,15846,15850,15851,15852,15855,15856,15856,15857,15861,15862,15863,15863,15865,15869,15870,15871,15872,15872,15873,15874,15879,15885,15885,15886,15891,15892,15898,15899,15899,15901,15903,15906,15910,15911,15915,15919,15920,15923,15923,15924,15925,15929,15932,15932,15933,15934,15937,15940,15941,15942,15943,15952,15953,15954,15955,15958,15959,15962,15966,15967,15968,15971,15974,15981,15983,15987,15988,15991,15993,15994,15994,15995,15998,16001,16004,16011,16013,16017,16020,16021,16026,16027,16028,16029,16030,16036,16037,16038,16039,16040,16044,16045,16046,16047,16048,16054,16055,16064,16066,16067,16067,16067,16068,16069,16070,16074,16075,16077,16077,16087,16088,16089,16091,16092,16100,16101,16103,16114,16115,16123,16128,16146,16134,16135,16136,16137,16138,16139,16140,16141,16142,16144,16148,16150,16151,16151,16152,16153,16155,16156,16157,16158,16159,16160,16164,16161,16162,16163,16169,16170,16178,16181,16182,16183,16185,16186,16187,16188,16191,16194,16195,16198,16199,16200,16201,16202,16203,16211,16213,16215,16222,16222,16223,16225,16230,16237,16238,16244,16244,16245,16247,16248,16249,16252,16253,16254,16257,16258,16259,16260,16261,16263,16264,16265,16266,16267,16268,16270,16273,16274,16275,16277,16279,16280,16282,16283,16284,16285,16286,16287,16288,16289,16293,16294,16295,16296,16297,16298,16302,16304,16315,16317,16318,16323,16324,16326,16330,16331,16335,16336,16340,16343,16353,16357,16358,16361,16359,16360,16362,16363,16369,16369,16370,16372,16374,16376,16377,16378,16379,16381,16382,16383,16384,16385,16387,16392,16393,16394,16395,16396,16397,16398,16400,16401,16402,16403,16406,16411,16412,16413,16414,16415,16416,16419,16420,16421,16422,16423,16424,16427,16428,16429,16430,16431,16432,16433,16436,16437,16438,16439,16440,16444,16445,16446,16447,16448,16449,16450,16451,16452,16453,16457,16458,16458,16461,16463,16464,16468,16469,16475,16475,16476,16477,16482,16483,16484,16485,16491,16491,16492,16493,16497,16499,16503,16504,16505,16506,16508,16508,16511,16514,16518,16520,16523,16524,16527,16528,16529,16531,16535,16539,16540,16548,16549,16552,16554,16555,16557,16558,16561,16564,16570,16571,16571,16572,16573,16577,16576,16576,16579,16585,16583,16584,16586,16589,16591,16591,16592,16599,16600,16604,16604,16605,16608,16610,16609,16616,16615,16621,16626,16629,16633,16634,16635,16636,16638,16639,16642,16644,16648,16649,16650,16651,16652,16662,16666,16667,16668,16668,16669,16669,16670,16671,16672,16673,16674,16675,16675,16678,16679,16680,16681,16682,16683,16684,16686,16686,16690,16692,16696,16699,16702,16703,16706,16707,16709,16708,16713,16713,16716,16719,16722,16728,16728,16729,16732,16740,16740,16741,16744,16745,16746,16752,16753,16758,16759,16760,16761,16762,16763,16764,16765,16766,16767,16774,16774,16775,16776,16782,16783,16785,16787,16788,16789,16790,16798,16798,16799,16800,16805,16810,16813,16814,16817,16818,16819,16820,16823,16826,16830,16833,16834,16837,16840,16841,16847,16851,16852,16853,16854,16855,16856,16857,16858,16859,16860,16861,16864,16865,16868,16869,16875,16877,16881,16885,16886,16887,16888,16892,16893,16894,16895,16898,16901,16905,16904,16909,16910,16911,16913,16914,16915,16917,16919,16923,16924,16925,16926,16929,16933,16934,16934,16935,16937,16944,16941,16943,16948,16952,16953,16953,16954,16956,16960,16961,16966,16970,16971,16972,16973,16974,16977,16981,16980,16984,16985,16986,16987,16989,16990,16991,16993,16995,17000,17002,17007,17008,17011,17014,17016,17020,17021,17022,17028,17026,17027,17028,17032,17036,17036,17038,17040,17041,17042,17048,17049,17050,17053,17054,17055,17060,17061,17064,17067,17068,17071,17073,17074,17076,17077,17078,17081,17082,17085,17086,17087,17088,17090,17091,17092,17093,17094,17096,17099,17100,17105,17106,17107,17108,17109,17110,17111,17114,17115,17116,17117,17119,17120,17121,17124,17127,17129,17130,17131,17132,17138,17139,17140,17142,17143,17146,17149,17150,17152,17153,17155,17159,17165,17167,17167,17168,17169,17170,17171,17171,17175,17175,17179,17179,17180,17183,17185,17186,17187,17189,17191,17192,17194,17198,17199,17200,17200,17203,17206,17210,17211,17212,17213,17214,17215,17215,17216,17217,17218,17220,17221,17221,17222,17223,17224,17227,17230,17233,17234,17235,17236,17239,17240,17241,17242,17244,17245,17247,17248,17249,17252,17259,17260,17262,17263,17267,17269,17270,17271,17274,17275,17280,17281,17287,17288,17289,17291,17292,17294,17295,17295,17296,17299,17300,17302,17303,17306,17310,17311,17313,17315,17316,17317,17318,17319,17320,17321,17325,17337,17338,17339,17341,17340,17343,17344,17344,17349,17350,17353,17356,17358,17360,17365,17361,17369,17370,17371,17372,17374,17375,17379,17380,17381,17382,17383,17384,17386,17387,17390,17394,17398,17402,17403,17406,17409,17410,17413,17415,17416,17419,17425,17429,17430,17435,17436,17437,17441,17442,17443,17444,17445,17446,17448,17449,17450,17454,17459,17460,17463,17464,17466,17468,17469,17470,17471,17472,17474,17478,17479,17481,17485,17486,17487,17489,17490,17490,17491,17494,17495,17496,17500,17501,17504,17510,17511,17512,17516,17518,17519,17520,17521,17522,17526,17527,17529,17534,17539,17543,17544,17546,17547,17548,17549,17552,17554,17555,17559,17562,17565,17567,17569,17570,17573,17574,17575,17579,17580,17581,17582,17585,17588,17589,17590,17592,17591,17593,17595,17596,17604,17600,17601,17602,17605,17606,17607,17608,17609,17610,17611,17612,17615,17618,17619,17620,17625,17626,17628,17629,17632,17636,17637,17638,17642,17643,17647,17648,17652,17656,17655,17658,17659,17660,17661,17664,17665,17666,17667,17668,17670,17671,17672,17674,17675,17678,17682,17683,17690,17726,17764,17765,17769,17774,17779,17784,17790,17796,17797,17798,17804,17809,17813,17814,17815,17816,17817,17818,17818,17820,17821,17822,17823,17824,17825,17826,17827,17828,17829,17830,17831,17832,17833,17834,17835,17836,17837,17838,17839,17840,17841,17845,17847,17848,17849,17852,17853,17854,17855,17856,17857,17858,17859,17860,17861,17862,17866,17870,17872,17873,17874,17877,17878,17879,17880,17881,17882,17887,17889,17890,17891,17892,17895,17897,17900,17901,17902,17903,17904,17906],"digest":"2808a1933dffd30c0471f753ebb8933d","pod":[[145,"store_description"],[157,"fast_mode"],[311,"equal"],[319,"unique"],[324,"find_duplicates"],[330,"intersect"],[336,"max"],[346,"aref_delete"],[360,"aref_eq"],[369,"keys_eq"],[378,"warn_msg"],[400,"context"],[413,"at_line"],[420,"check_abort"],[430,"abort_on_error"],[435,"set_abort_immediately"],[440,"error_atline"],[447,"err_msg"],[454,"syntax_err"],[459,"internal_err"],[483,"skip_space_and_comment"],[497,"check"],[505,"skip"],[511,"check_int"],[521,"read_int"],[528,"check_ip"],[541,"read_ip"],[549,"read_ip_prefix"],[561,"read_ip_prefix_pair"],[566,"gen_ip"],[573,"print_ip"],[578,"read_identifier"],[589,"read_owner_pattern"],[600,"read_name"],[611,"read_string"],[625,"read_union"],[654,"check_typed_name"],[681,"read_typed_name"],[710,"read_extended_name"],[779,"read_user_id"],[790,"check_hostname"],[806,"read_complement"],[815,"read_intersection"],[837,"read_time_val"],[844,"add_description"],[860,"check_permit_deny"],[870,"check_nat_name"],[880,"split_typed_name"],[887,"check_flag"],[898,"check_assign"],[916,"read_list"],[932,"read_list_or_null"],[938,"read_assign_list"],[945,"check_assign_list"],[954,"check_assign_pair"],[975,"new"],[981,"add_attribute"],[990,"check_radius_attributes"],[1005,"check_routing"],[1012,"check_managed"],[1042,"check_model"],[1073,"host_as_interface"],[1114,"read_host"],[1226,"read_nat"],[1283,"read_network"],[1501,"read_interface"],[1803,"set_pix_interface_level"],[1847,"check_no_in_acl"],[1903,"read_router"],[2464,"move_locked_interfaces"],[2510,"read_aggregate"],[2560,"check_router_attributes"],[2595,"read_area"],[2659,"read_group"],[2672,"read_protocolgroup"],[2679,"read_port_range"],[2709,"read_port_ranges"],[2724,"read_icmp_type_code"],[2752,"read_proto_nr"],[2780,"gen_protocol_name"],[2826,"cache_anonymous_protocol"],[2840,"read_simple_protocol"],[2877,"check_protocol_flags"],[2896,"read_typed_name_or_simple_protocol"],[2900,"read_protocol"],[2911,"assign_union_allow_user"],[2921,"read_service"],[3005,"read_pathrestriction"],[3016,"read_attributed_object"],[3094,"read_isakmp"],[3132,"read_ipsec"],[3139,"read_crypto"],[3166,"read_owner"],[3231,"read_netspoc"],[3252,"read_file"],[3281,"read_file_or_dir"],[3347,"show_read_statistics"],[3362,"is_network"],[3363,"is_router"],[3364,"is_interface"],[3365,"is_host"],[3366,"is_subnet"],[3367,"is_area"],[3368,"is_zone"],[3369,"is_group"],[3370,"is_protocolgroup"],[3371,"is_objectgroup"],[3372,"is_chain"],[3373,"is_autointerface"],[3378,"print_rule"],[3408,"prepare_prt_ordering"],[3470,"order_icmp"],[3496,"order_proto"],[3513,"order_ranges"],[3662,"expand_splitted_protocol"],[3717,"order_protocols"],[3766,"link_to_owner"],[3782,"link_to_real_owner"],[3801,"expand_watchers"],[3845,"link_owners"],[3937,"link_policy_distribution_point"],[3962,"link_general_permit"],[4008,"link_areas"],[4068,"link_interfaces"],[4123,"check_interface_ip"],[4185,"link_routers"],[4194,"link_subnet"],[4248,"link_subnets"],[4263,"add_pathrestriction"],[4277,"link_pathrestrictions"],[4376,"link_virtual_interfaces"],[4495,"is_redundany_group"],[4503,"check_ip_addresses"],[4603,"link_topology"],[4632,"disable_behind"],[4685,"check_bridged_networks"],[4748,"mark_disabled"],[4894,"split_ip_range"],[4910,"convert_hosts"],[5120,"combine_subnets"],[5173,"get_intf"],[5188,"get_auto_intf"],[5228,"check_auto_intf"],[5293,"expand_group1"],[5791,"remove_duplicates"],[5810,"expand_group"],[5829,"expand_group_in_rule"],[5931,"check_unused_groups"],[5955,"expand_protocols"],[6016,"split_protocols"],[6073,"add_rules"],[6103,"get_zone"],[6149,"expand_special"],[6229,"add_managed_hosts"],[6251,"collect_unenforceable"],[6316,"show_unenforceable"],[6357,"warn_useless_unenforceable"],[6368,"show_deleted_rules1"],[6423,"collect_redundant_rules"],[6462,"show_deleted_rules2"],[6503,"warn_unused_overlaps"],[6523,"collect_log"],[6533,"check_log"],[6547,"normalize_log"],[6558,"expand_rules"],[6699,"print_rulecount"],[6708,"expand_services"],[6776,"set_policy_distribution_ip"],[6916,"propagate_owners"],[7234,"expand_auto_intf"],[7254,"show_unknown_owners"],[7278,"set_service_owner"],[7414,"set_natdomain"],[7490,"distribute_nat1"],[7636,"distribute_nat"],[7648,"distribute_nat_info"],[7942,"invert_nat_set"],[8015,"adjust_crypto_nat"],[8043,"get_nat_network"],[8061,"check_subnets"],[8107,"nat_to_loopback_ok"],[8134,"by_name"],[8141,"find_subnets_in_zone"],[8408,"find_subnets_in_nat_domain"],[8632,"cluster_crosslink_routers"],[8691,"check_crosslink"],[8794,"get_managed_local_clusters"],[8916,"mark_managed_local"],[8970,"link_reroute_permit"],[9006,"add_managed_hosts_to_aggregate"],[9051,"link_aggregate_to_zone"],[9084,"link_implicit_aggregate_to_zone"],[9160,"link_aggregates"],[9254,"duplicate_aggregate_to_cluster"],[9291,"get_any"],[9347,"get_cluster_aggregates"],[9360,"set_zone1"],[9433,"set_zone_cluster"],[9478,"zone_eq"],[9492,"set_area1"],[9560,"inherit_router_attributes"],[9601,"nat_equal"],[9619,"check_useless_nat"],[9636,"inherit_area_nat"],[9669,"inherit_attributes_from_area"],[9682,"inherit_nat_to_subnets_in_zone"],[9744,"inherit_nat_in_zone"],[9771,"cleanup_after_inheritance"],[9789,"inherit_attributes"],[9800,"set_zones"],[9842,"cluster_zones"],[9863,"prepare_area_borders"],[9891,"set_area"],[9916,"set_areas"],[9974,"find_area_subset_relations"],[10036,"check_routers_in_nested_areas"],[10087,"clean_areas"],[10100,"set_zone"],[10121,"check_virtual_interfaces"],[10166,"check_pathrestrictions"],[10295,"traverse_loop_part"],[10338,"apply_pathrestriction_optimization"],[10402,"optimize_pathrestrictions"],[10469,"setpath_obj"],[10566,"set_loop_cluster"],[10599,"find_dists_and_loops"],[10626,"process_loops"],[10664,"setpath"],[10687,"get_path"],[10766,"cluster_path_mark1"],[10939,"cluster_navigation"],[11016,"cluster_path_mark"],[11377,"path_mark"],[11505,"loop_path_walk"],[11571,"path_walk"],[11707,"set_auto_intf_from_border"],[11750,"path_auto_interfaces"],[11835,"link_ipsec"],[11853,"link_crypto"],[11874,"gen_tunnel_rules"],[11907,"link_tunnels"],[12088,"crypto_behind"],[12132,"verify_asa_vpn_attributes"],[12164,"verify_subject_name"],[12187,"verify_asa_trustpoint"],[12200,"expand_crypto"],[12448,"setup_ref2obj"],[12502,"collect_supernet_dst_rules"],[12533,"find_supernet"],[12559,"find_zone_network"],[12612,"find_matching_supernet"],[12653,"check_supernet_in_zone"],[12737,"check_supernet_src_rule"],[12892,"check_supernet_dst_rule"],[12968,"check_supernet_dst_collections"],[13006,"find_smaller_prt"],[13060,"check_for_transient_supernet_rule"],[13289,"mark_stateful"],[13311,"check_supernet_rules"],[13360,"gen_reverse_rules1"],[13465,"gen_reverse_rules"],[13507,"get_zone2"],[13526,"mark_secondary"],[13556,"mark_primary"],[13584,"mark_strict_secondary"],[13612,"mark_local_secondary"],[13636,"mark_secondary_rules"],[13743,"check_dynamic_nat_rules"],[13981,"optimize_rules"],[14107,"optimize_and_warn_deleted"],[14122,"collect_nat_path"],[14141,"distribute_nat_to_device"],[14206,"get_zone3"],[14229,"get_networks"],[14248,"prepare_nat_commands"],[14307,"get_route_networks"],[14346,"set_routes_in_zone"],[14508,"add_path_routes"],[14545,"add_end_routes"],[14577,"get_route_path"],[14614,"generate_routing_tree"],[14712,"generate_routing_info"],[14792,"find_active_routes"],[14821,"fix_bridged_hops"],[14845,"check_and_convert_routes"],[15104,"print_header"],[15112,"print_routes"],[15300,"print_nat1"],[15382,"print_pix_static"],[15477,"optimize_nat_networks"],[15530,"print_nat"],[15546,"distribute_rule"],[15699,"add_router_acls"],[15819,"distribute_rules"],[15827,"create_general_permit_rules"],[15850,"distribute_general_permit"],[15919,"rules_distribution"],[15952,"address"],[16026,"ios_route_code"],[16036,"prefix_code"],[16044,"full_prefix_code"],[16054,"print_acl_placeholder"],[16064,"get_split_tunnel_nets"],[16087,"print_asavpn"],[16411,"print_acl_prefix"],[16444,"print_acl_suffix"],[16457,"print_iptables_acls"],[16503,"print_cisco_acls"],[16633,"generate_acls"],[16648,"gen_crypto_rules"],[16666,"print_ezvpn"],[16752,"print_crypto_acl"],[16782,"print_crypto_filter_acl"],[16805,"print_crypto_map_attributes"],[16851,"print_tunnel_group"],[16881,"print_ca_and_tunnel_group_map"],[16892,"print_static_crypto_map"],[16970,"print_dynamic_crypto_map"],[17020,"print_crypto"],[17210,"print_interface"],[17280,"print_address"],[17287,"print_prt"],[17310,"print_acls"],[17510,"check_output_dir"],[17539,"print_code"],[17636,"copy_raw"],[17682,"show_version"],[17690,"init_protocols"],[17813,"init_global_vars"],[17845,"compile"]],"branch":[[146,{"text":"if (defined $set) { }"}],[158,{"text":"if (defined $set) { }"}],[311,{"text":"unless @_"}],[338,{"text":"if $max < $el"}],[348,{"text":"if ($$aref[$i] eq $elt)"}],[361,{"text":"unless @$a1 == @$a2"}],[363,{"text":"if $$a1[$i] ne $$a2[$i]"}],[370,{"text":"unless keys %$href1 == keys %$href2"}],[372,{"text":"unless exists $$href2{$key}"}],[401,{"text":"if (pos $input == length $input) { }"}],[421,{"text":"if ($error_counter == $$Netspoc::Compiler::Pass1::config{'max_errors'}) { }"}],[421,{"text":"elsif ($abort_immediately) { }"}],[430,{"text":"if $error_counter"}],[463,{"text":"if ($error_counter)"}],[469,{"text":"if @args"}],[512,{"text":"if ($input =~ /\\G(\\d+)/cg) { }"}],[522,{"text":"unless defined $result"}],[530,{"text":"if ($1 > 255 or $2 > 255 or $3 > 255 or $4 > 255)"}],[529,{"text":"if ($input =~ /\\G(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)/cg) { }"}],[542,{"text":"unless defined $result"}],[552,{"text":"unless defined $mask"}],[553,{"text":"unless match_ip($ip, $ip, $mask)"}],[579,{"text":"if ($input =~ /(\\G[\\w-]+)/cg) { }"}],[590,{"text":"if ($input =~ / ( \\G [\\w-]* [*] ) /cgx) { }"}],[601,{"text":"if ($input =~ /(\\G[^;,\\s\"\"'']+)/cg) { }"}],[612,{"text":"if ($input =~ /\\G([^;,\"\"''\\n]+)/cg) { }"}],[632,{"text":"if check($delimiter)"}],[636,{"text":"if check($delimiter)"}],[638,{"text":"unless $comma_seen"}],[645,{"text":"if $user_ref_error"}],[655,{"text":"unless $input =~ / \\G (\\w+) : /cgx"}],[658,{"text":"if ($input =~ m[ \\G ( [\\w-]+ (?: ( [\\@/] ) [\\w-]+ )? ) ]cgx) { }"}],[668,{"text":"unless $separator eq '@'"}],[671,{"text":"unless $separator eq '/'"}],[667,{"text":"if ($type eq 'router') { }"}],[667,{"text":"elsif ($type eq 'network' or $type eq 'interface') { }"}],[666,{"text":"if ($separator)"}],[713,{"text":"unless $$user_object{'active'}"}],[710,{"text":"if (check('user'))"}],[718,{"text":"unless $input =~ /\\G([\\w-]+):/cg"}],[724,{"text":"if ($interface || $type eq 'host' and check('managed')) { }"}],[724,{"text":"elsif ($type eq 'any' and check('ip')) { }"}],[736,{"text":"unless $input =~ / \\G ( $hostname_regex ) /cgox"}],[741,{"text":"unless $input =~ / \\G ( $network_regex ) /cgox"}],[723,{"text":"if ($input =~ / \\G \\[ /cgox) { }"}],[723,{"text":"elsif ($type eq 'host') { }"}],[723,{"text":"elsif ($type eq 'network') { }"}],[723,{"text":"elsif ($interface and $input =~ / \\G ( [\\w-]+ (?: \\@ [\\w-]+ ) ) /cgx or $input =~ / \\G ( [\\w-]+ ) /cgx) { }"}],[754,{"text":"unless $input =~ / \\G \\. /cgox"}],[757,{"text":"unless $selector =~ /^(auto|all)$/"}],[763,{"text":"if $ext"}],[764,{"text":"unless $input =~ / \\G ( $network_regex ) /cgox"}],[769,{"text":"if ($input =~ / \\G \\. /cgox)"}],[755,{"text":"if ($input =~ / \\G \\[ /cgox) { }"}],[753,{"text":"if ($interface)"}],[774,{"text":"$ext ? :"}],[780,{"text":"if ($input =~ /\\G($user_id_regex)/cog) { }"}],[792,{"text":"if ($input =~ /\\G($hostname_regex)/cog) { }"}],[791,{"text":"if ($input =~ /\\G host:/cgx) { }"}],[806,{"text":"if (check('!')) { }"}],[819,{"text":"if (@result == 1) { }"}],[839,{"text":"unless my $factor = $timeunits{$unit}"}],[845,{"text":"unless check('description')"}],[852,{"text":"if (store_description())"}],[861,{"text":"if ($input =~ /\\G(permit|deny)/cg) { }"}],[871,{"text":"if ($input =~ /\\G nat:([\\w-]+)/cgx) { }"}],[888,{"text":"if (check($token)) { }"}],[901,{"text":"if (wantarray) { }"}],[899,{"text":"if (check($token))"}],[920,{"text":"if check(';')"}],[924,{"text":"if check(';')"}],[926,{"text":"unless $comma_seen"}],[933,{"text":"if check(';')"}],[946,{"text":"if (check($token))"}],[955,{"text":"if (check($token))"}],[982,{"text":"if defined $$obj{$key}"}],[991,{"text":"unless check('radius_attributes')"}],[995,{"text":"if check('\\\\}')"}],[997,{"text":"check('=') ? :"}],[1005,{"text":"unless my $protocol = check_assign('routing', \\&read_identifier)"}],[1006,{"text":"unless my $routing = $routing_info{$protocol}"}],[1012,{"text":"unless check('managed')"}],[1019,{"text":"if ($value =~ /^(?:secondary|standard|full|primary|\n\f                           local|local_secondary|routing_only)$/x) { }"}],[1014,{"text":"if (check(';')) { }"}],[1014,{"text":"elsif (check('=')) { }"}],[1042,{"text":"unless my($model, @attributes) = check_assign_list('model', \\&read_name)"}],[1045,{"text":"unless ($info)"}],[1055,{"text":"unless $ext"}],[1056,{"text":"$ext ? :"}],[1058,{"text":"if (@ext_list)"}],[1077,{"text":"if (not $model) { }"}],[1077,{"text":"elsif (not $$model{'can_managed_host'}) { }"}],[1086,{"text":"unless ($hw_name)"}],[1092,{"text":"$$host{'server_name'} ? :"}],[1116,{"text":"if $private"}],[1117,{"text":"if (my($id) = $name =~ /^host:id:(.*)$/)"}],[1128,{"text":"if check('\\\\}')"}],[1133,{"text":"unless $ip1 <= $ip2"}],[1140,{"text":"unless $managed eq 'standard'"}],[1145,{"text":"if $$host{'model'}"}],[1170,{"text":"if $$host{'nat'}{$name}"}],[1162,{"text":"if ($type eq 'nat') { }"}],[1129,{"text":"if (my $ip = check_assign('ip', \\&read_ip)) { }"}],[1129,{"text":"elsif (my($ip1, $ip2) = check_assign_pair('range', '-', \\&read_ip)) { }"}],[1129,{"text":"elsif (my $managed = check_managed()) { }"}],[1129,{"text":"elsif (my $model = check_model()) { }"}],[1129,{"text":"elsif (my $hardware = check_assign('hardware', \\&read_name)) { }"}],[1129,{"text":"elsif (my $server_name = check_assign('server_name', \\&read_name)) { }"}],[1129,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1129,{"text":"elsif (my $radius_attributes = check_radius_attributes()) { }"}],[1129,{"text":"elsif (my $pair = check_typed_name()) { }"}],[1182,{"text":"unless $$host{'ip'} xor $$host{'range'}"}],[1198,{"text":"if $ok{$key}"}],[1185,{"text":"if ($$host{'managed'})"}],[1209,{"text":"if $$host{'radius_attributes'}"}],[1205,{"text":"if ($$host{'id'}) { }"}],[1214,{"text":"if ($$host{'range'})"}],[1213,{"text":"if ($$host{'nat'})"}],[1234,{"text":"if check('\\\\}')"}],[1235,{"text":"if (my($ip, $mask) = check_assign('ip', \\&read_ip_prefix)) { }"}],[1235,{"text":"elsif (check_flag('hidden')) { }"}],[1235,{"text":"elsif (check_flag('identity')) { }"}],[1235,{"text":"elsif (check_flag('dynamic')) { }"}],[1235,{"text":"elsif (my $pair = check_assign('subnet_of', \\&read_typed_name)) { }"}],[1260,{"text":"if grep {$key eq $_;} 'name', 'hidden'"}],[1269,{"text":"if grep {$key eq $_;} 'name', 'identity'"}],[1275,{"text":"unless defined $$nat{'ip'}"}],[1258,{"text":"if ($$nat{'hidden'}) { }"}],[1258,{"text":"elsif ($$nat{'identity'}) { }"}],[1289,{"text":"if $private"}],[1290,{"text":"if ($net_name =~ m[^(.*)/])"}],[1297,{"text":"if check('\\\\}')"}],[1303,{"text":"if defined $$network{'ip'}"}],[1328,{"text":"if (is_host($host)) { }"}],[1328,{"text":"elsif (is_interface($host)) { }"}],[1347,{"text":"if ($other_net ne $network)"}],[1344,{"text":"if (my $other = $hosts{$host_name})"}],[1356,{"text":"if $$network{'nat'} and $$network{'nat'}{$nat_tag}"}],[1298,{"text":"if (my($ip, $mask) = check_assign('ip', \\&read_ip_prefix)) { }"}],[1298,{"text":"elsif (check_flag('unnumbered')) { }"}],[1298,{"text":"elsif (check_flag('has_subnets')) { }"}],[1298,{"text":"elsif (check_flag('crosslink')) { }"}],[1298,{"text":"elsif (my $pair = check_assign('subnet_of', \\&read_typed_name)) { }"}],[1298,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1298,{"text":"elsif (my $radius_attributes = check_radius_attributes()) { }"}],[1298,{"text":"elsif (my $host_name = check_hostname()) { }"}],[1298,{"text":"elsif (my $nat_tag = check_nat_name()) { }"}],[1371,{"text":"unless defined $ip"}],[1378,{"text":"if $ok{$key}"}],[1379,{"text":"$key eq 'nat' ? :"}],[1379,{"text":"$key eq 'hosts' ? :"}],[1401,{"text":"if $ok{$key}"}],[1402,{"text":"$key eq 'hosts' ? :"}],[1411,{"text":"if $$hash{$nat_tag}{'identity'}"}],[1409,{"text":"if (my $hash = $$network{'nat'})"}],[1425,{"text":"unless (match_ip($host_ip, $ip, $mask))"}],[1432,{"text":"unless (match_ip($ip1, $ip, $mask) and match_ip($ip2, $ip, $mask))"}],[1424,{"text":"if (my $host_ip = $$host{'ip'}) { }"}],[1424,{"text":"elsif ($$host{'range'}) { }"}],[1448,{"text":"if (@{$$network{'hosts'};} and $$network{'crosslink'})"}],[1455,{"text":"if $$nat{'dynamic'}"}],[1456,{"text":"unless $$nat{'mask'} == $mask"}],[1451,{"text":"if ($$network{'nat'})"}],[1468,{"text":"unless @{$$network{'hosts'};} == $id_hosts_count"}],[1476,{"text":"if $$network{'radius_attributes'}"}],[1465,{"text":"if (my $id_hosts_count = grep({$$_{'id'};} @{$$network{'hosts'};})) { }"}],[1373,{"text":"if ($ip eq 'unnumbered') { }"}],[1373,{"text":"elsif ($$network{'bridged'}) { }"}],[1505,{"text":"unless (check('='))"}],[1516,{"text":"if check('\\\\}')"}],[1555,{"text":"unless $type eq 'crypto'"}],[1561,{"text":"unless $type eq 'crypto'"}],[1568,{"text":"if $level > 100"}],[1583,{"text":"if $$interface{'nat'}{$name2}"}],[1594,{"text":"if check('\\\\}')"}],[1595,{"text":"if (my $ip = check_assign('ip', \\&read_ip)) { }"}],[1602,{"text":"if ($$secondary{'ip'}) { }"}],[1575,{"text":"if ($type eq 'nat') { }"}],[1575,{"text":"elsif ($type eq 'secondary') { }"}],[1614,{"text":"if $virtual"}],[1625,{"text":"if check('\\\\}')"}],[1630,{"text":"unless $xxrp_info{$type}"}],[1635,{"text":"unless $id =~ /^\\d+$/"}],[1637,{"text":"unless $id < 256"}],[1626,{"text":"if (my $ip = check_assign('ip', \\&read_ip)) { }"}],[1626,{"text":"elsif (my $type = check_assign('type', \\&read_identifier)) { }"}],[1626,{"text":"elsif (my $id = check_assign('id', \\&read_identifier)) { }"}],[1644,{"text":"unless $$virtual{'ip'}"}],[1645,{"text":"if $$virtual{'redundancy_id'} and not $$virtual{'redundancy_type'}"}],[1650,{"text":"if $$interface{'bind_nat'}"}],[1663,{"text":"unless $$_[0] ne 'network'"}],[1663,{"text":"if (grep {ref $$_[1] unless $$_[0] ne 'network';} @pairs)"}],[1517,{"text":"if (my(@ip) = check_assign_list('ip', \\&read_ip)) { }"}],[1517,{"text":"elsif (check_flag('unnumbered')) { }"}],[1517,{"text":"elsif (check_flag('negotiated')) { }"}],[1517,{"text":"elsif (check_flag('loopback')) { }"}],[1517,{"text":"elsif (check_flag('vip')) { }"}],[1517,{"text":"elsif (check_flag('no_in_acl')) { }"}],[1517,{"text":"elsif (check_flag('dhcp_server')) { }"}],[1517,{"text":"elsif (my $pair = check_assign('subnet_of', \\&read_typed_name)) { }"}],[1517,{"text":"elsif (my(@pairs) = check_assign_list('hub', \\&read_typed_name)) { }"}],[1517,{"text":"elsif ($pair = check_assign('spoke', \\&read_typed_name)) { }"}],[1517,{"text":"elsif (my $id = check_assign('id', \\&read_user_id)) { }"}],[1517,{"text":"elsif (defined(my $level = check_assign('security_level', \\&read_int))) { }"}],[1517,{"text":"elsif ($pair = check_typed_name()) { }"}],[1517,{"text":"elsif (check('virtual')) { }"}],[1517,{"text":"elsif (my(@tags) = check_assign_list('bind_nat', \\&read_identifier)) { }"}],[1517,{"text":"elsif (my $hardware = check_assign('hardware', \\&read_name)) { }"}],[1517,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1517,{"text":"elsif (my $routing = check_routing()) { }"}],[1517,{"text":"elsif (@pairs = check_assign_list('reroute_permit', \\&read_typed_name)) { }"}],[1517,{"text":"elsif (check_flag('disabled')) { }"}],[1517,{"text":"elsif (check_flag('no_check')) { }"}],[1683,{"text":"if ($name =~ m[/])"}],[1692,{"text":"if ($ip =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1691,{"text":"if (my $ip = $$interface{'ip'})"}],[1690,{"text":"if ($virtual) { }"}],[1713,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1712,{"text":"if ($$interface{'nat'})"}],[1719,{"text":"if $$interface{'hardware'}"}],[1717,{"text":"if ($$interface{'vip'})"}],[1724,{"text":"if ($$interface{'owner'} and not $$interface{'vip'})"}],[1738,{"text":"$$interface{'vip'} ? :"}],[1736,{"text":"if (keys %copy)"}],[1742,{"text":"$$interface{'vip'} ? :"}],[1741,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1728,{"text":"if ($$interface{'loopback'}) { }"}],[1728,{"text":"elsif ($$interface{'subnet_of'}) { }"}],[1753,{"text":"if (my(@extra) = grep({not $ok{$_};} keys %$interface))"}],[1751,{"text":"if ($$interface{'ip'} eq 'bridged')"}],[1760,{"text":"if @secondary_interfaces"}],[1764,{"text":"if $$interface{'hub'}"}],[1771,{"text":"if $$interface{'id'}"}],[1758,{"text":"if (my $crypto = $$interface{'spoke'}) { }"}],[1776,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1775,{"text":"if (my $crypto_list = $$interface{'hub'})"}],[1784,{"text":"if ($$interface{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[1783,{"text":"if (@secondary_interfaces)"}],[1793,{"text":"if $$interface{$key}"}],[1812,{"text":"if (@levels >= 2 and not equal(@levels)) { }"}],[1807,{"text":"if (my(@levels) = grep({defined $_;} map({$$_{'security_level'};} @{$$hardware{'interfaces'};}))) { }"}],[1807,{"text":"elsif ($hwname =~ /inside/) { }"}],[1807,{"text":"elsif ($hwname =~ /outside/) { }"}],[1807,{"text":"elsif (($level) = $hwname =~ /(\\d+)$/ and $level <= 100) { }"}],[1852,{"text":"unless delete $$interface{'no_in_acl'}"}],[1856,{"text":"if $$hardware{'no_in_acl'}"}],[1860,{"text":"unless 1 == grep({not $$_{'main_interface'};} @{$$hardware{'interfaces'};})"}],[1871,{"text":"unless $no_in_acl_counter"}],[1874,{"text":"unless 1 == $no_in_acl_counter"}],[1879,{"text":"unless $$router{'model'}{'has_out_acl'}"}],[1883,{"text":"unless $$_{'hub'}"}],[1883,{"text":"if (grep {$$_{'spoke'} unless $$_{'hub'};} @{$$router{'interfaces'};})"}],[1892,{"text":"unless $$hardware{'no_in_acl'}"}],[1914,{"text":"unless $vrf"}],[1911,{"text":"if (defined $vrf)"}],[1921,{"text":"if check('\\\\}')"}],[1923,{"text":"if $$router{'managed'}"}],[1976,{"text":"if defined $$router{'log'}{$name2}"}],[1978,{"text":"check('=') ? :"}],[1975,{"text":"if ($type eq 'log') { }"}],[1975,{"text":"elsif ($type ne 'interface') { }"}],[1992,{"text":"if ($interfaces{$iname})"}],[2006,{"text":"if $private"}],[1922,{"text":"if (my $managed = check_managed()) { }"}],[1922,{"text":"elsif (my(@filter_only) = check_assign_list('filter_only', \\&read_ip_prefix_pair)) { }"}],[1922,{"text":"elsif (my $model = check_model()) { }"}],[1922,{"text":"elsif (check_flag('no_group_code')) { }"}],[1922,{"text":"elsif (check_flag('no_crypto_filter')) { }"}],[1922,{"text":"elsif (check_flag('no_protect_self')) { }"}],[1922,{"text":"elsif (check_flag('strict_secondary')) { }"}],[1922,{"text":"elsif (check_flag('log_deny')) { }"}],[1922,{"text":"elsif (my $routing = check_routing()) { }"}],[1922,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[1922,{"text":"elsif (my $radius_attributes = check_radius_attributes()) { }"}],[1922,{"text":"elsif (my $pair = check_assign('policy_distribution_point', \\&read_typed_name)) { }"}],[1922,{"text":"elsif (my(@list) = check_assign_list('general_permit', \\&read_typed_name_or_simple_protocol)) { }"}],[2018,{"text":"if ($$interface{'vip'} and not $model && $$model{'has_vip'})"}],[2026,{"text":"if ($error)"}],[2042,{"text":"unless ($model)"}],[2050,{"text":"if ($managed eq 'routing_only')"}],[2056,{"text":"if $$router{'vrf'} and not $$model{'can_vrf'}"}],[2067,{"text":"if ($$interface{'ip'} eq 'short')"}],[2078,{"text":"if ($$interface{'ip'} ne 'short')"}],[2075,{"text":"unless ($hw_name)"}],[2092,{"text":"unless aref_eq($$interface{'bind_nat'} || $bind_nat0, $$hardware{'bind_nat'} || $bind_nat0)"}],[2103,{"text":"if (my $nat = $$interface{'bind_nat'})"}],[2108,{"text":"if $hw_name eq 'VIP' and $$model{'has_vip'} and not $$interface{'vip'}"}],[2087,{"text":"if ($hardware = $hardware{$hw_name}) { }"}],[2118,{"text":"unless ($$interface{'loopback'})"}],[2131,{"text":"if $$routing{'name'} eq 'manual'"}],[2130,{"text":"if (my $routing = $$interface{'routing'})"}],[2139,{"text":"if ($all_routing)"}],[2146,{"text":"unless $rname =~ /^(?:manual|dynamic)$/"}],[2142,{"text":"if (my $routing = $$interface{'routing'} and $$interface{'ip'} eq 'unnumbered')"}],[2039,{"text":"if (my $managed = $$router{'managed'})"}],[2156,{"text":"unless $$router{'filter_only'}"}],[2158,{"text":"if $$model{'has_io_acl'}"}],[2155,{"text":"if ($managed =~ /^local/)"}],[2162,{"text":"if $$router{'log_deny'} and not $$model{'can_log_deny'}"}],[2172,{"text":"unless my $modifier = $$hash{$name2}"}],[2174,{"text":"if $$log_modifiers{$modifier}"}],[2179,{"text":"if ($valid) { }"}],[2168,{"text":"if (my $log_modifiers = $$model{'log_modifiers'}) { }"}],[2167,{"text":"if (my $hash = $$router{'log'})"}],[2194,{"text":"if $$router{'no_protect_self'} and not $$model{'need_protect'}"}],[2198,{"text":"if ($$model{'need_protect'})"}],[2202,{"text":"if $$router{'strict_secondary'} and not $managed =~ /secondary$/"}],[2211,{"text":"if (defined $$interface{'security_level'} and not $$model{'has_interface_level'})"}],[2218,{"text":"unless $$model{'crypto'}"}],[2217,{"text":"if ($$interface{'hub'} or $$interface{'spoke'})"}],[2222,{"text":"if ($$interface{'no_check'} and not $$interface{'hub'} && $$model{'do_auth'})"}],[2234,{"text":"unless $$interface{'ip'} eq 'bridged'"}],[2251,{"text":"unless $$layer3_intf{'hardware'}{'name'} eq 'device'"}],[2250,{"text":"if ($$model{'class'} eq 'ASA')"}],[2256,{"text":"if (my($no_ip) = $$layer3_intf{'ip'} =~ /^(unnumbered|negotiated|short|bridged)$/)"}],[2237,{"text":"if (exists $layer3_seen{$layer3_name}) { }"}],[2237,{"text":"elsif ($layer3_intf = $interfaces{$layer3_name}) { }"}],[2284,{"text":"unless my $main = $$interface{'main_interface'}"}],[2285,{"text":"if ($$main{'is_layer3'})"}],[2294,{"text":"if $changed"}],[2281,{"text":"if (keys %layer3_seen)"}],[2297,{"text":"if ($$model{'has_interface_level'})"}],[2304,{"text":"if grep {$$_{'bind_nat'};} @{$$router{'interfaces'};}"}],[2303,{"text":"if ($managed =~ /^local/)"}],[2310,{"text":"unless grep {$$_{'hub'};} @{$$router{'interfaces'};}"}],[2316,{"text":"if grep {$$_{'bind_nat'};} @{$$router{'interfaces'};}"}],[2323,{"text":"if $$router{'radius_attributes'}"}],[2308,{"text":"if ($$model{'do_auth'}) { }"}],[2327,{"text":"if ($$model{'no_crypto_filter'})"}],[2335,{"text":"if (delete $$router{'owner'})"}],[2339,{"text":"if ($$interface{'hub'})"}],[2343,{"text":"if (delete $$interface{'reroute_permit'})"}],[2349,{"text":"if ($$interface{'ip'} eq 'bridged')"}],[2355,{"text":"if ($bridged)"}],[2154,{"text":"if (my $managed = $$router{'managed'}) { }"}],[2373,{"text":"if ($$interface{'redundant'}) { }"}],[2401,{"text":"if (my $private = $$interface{'private'})"}],[2389,{"text":"unless ($networks{$net_name})"}],[2422,{"text":"if ($$interface{$key})"}],[2426,{"text":"if ($interfaces{$iname})"}],[2438,{"text":"if (my $private = $$interface{'private'})"}],[2366,{"text":"if ($$interface{'loopback'}) { }"}],[2366,{"text":"elsif (my $crypto = $$interface{'spoke'}) { }"}],[2447,{"text":"if ($$interface{'spoke'} || $$interface{'hub'} and not $$interface{'no_check'})"}],[2454,{"text":"if @move_locked"}],[2494,{"text":"unless 1 == @{$$hardware{'interfaces'};}"}],[2497,{"text":"if (my $hash = $$orig_router{'radius_attributes'})"}],[2486,{"text":"if ($$orig_router{'managed'})"}],[2512,{"text":"if $private"}],[2517,{"text":"if check('\\\\}')"}],[2533,{"text":"unless $$nat{'dynamic'}"}],[2534,{"text":"if $$aggregate{'nat'}{$nat_name}"}],[2518,{"text":"if (my($ip, $mask) = check_assign('ip', \\&read_ip_prefix)) { }"}],[2518,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[2518,{"text":"elsif (my $link = check_assign('link', \\&read_typed_name)) { }"}],[2518,{"text":"elsif (check_flag('has_unenforceable')) { }"}],[2518,{"text":"elsif (my $nat_name = check_nat_name()) { }"}],[2542,{"text":"unless $$aggregate{'link'}"}],[2548,{"text":"if grep {$key eq $_;} 'name', 'ip', 'mask', 'link', 'is_aggregate', 'private', 'nat'"}],[2545,{"text":"if ($ip) { }"}],[2564,{"text":"unless check('router_attributes')"}],[2568,{"text":"if check('\\\\}')"}],[2569,{"text":"if (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[2569,{"text":"elsif (my $pair = check_assign('policy_distribution_point', \\&read_typed_name)) { }"}],[2569,{"text":"elsif (my(@list) = check_assign_list('general_permit', \\&read_typed_name_or_simple_protocol)) { }"}],[2601,{"text":"if check('\\\\}')"}],[2603,{"text":"unless $$_[0] ne 'interface'"}],[2603,{"text":"if (grep {ref $$_[1] unless $$_[0] ne 'interface';} @elements)"}],[2612,{"text":"unless $$_[0] ne 'interface'"}],[2612,{"text":"if (grep {ref $$_[1] unless $$_[0] ne 'interface';} @elements)"}],[2622,{"text":"if ($$pair[0] ne 'network' or ref $$pair[1])"}],[2636,{"text":"unless $$nat{'dynamic'}"}],[2637,{"text":"if $$area{'nat'}{$nat_name}"}],[2602,{"text":"if (my(@elements) = check_assign_list('border', \\&read_intersection)) { }"}],[2602,{"text":"elsif (@elements = check_assign_list('inclusive_border', \\&read_intersection)) { }"}],[2602,{"text":"elsif (check_flag('auto_border')) { }"}],[2602,{"text":"elsif (my $pair = check_assign('anchor', \\&read_typed_name)) { }"}],[2602,{"text":"elsif (my $owner = check_assign('owner', \\&read_identifier)) { }"}],[2602,{"text":"elsif (my $router_attributes = check_router_attributes($name)) { }"}],[2602,{"text":"elsif (my $nat_name = check_nat_name()) { }"}],[2645,{"text":"if $$area{'border'} || $$area{'inclusive_border'} and $$area{'anchor'}"}],[2650,{"text":"unless $$area{'anchor'} or $$area{'border'} or $$area{'inclusive_border'}"}],[2662,{"text":"if $private"}],[2680,{"text":"if $port1 > 65535"}],[2681,{"text":"if $port1 == 0"}],[2684,{"text":"if $port2 > 65535"}],[2685,{"text":"if $port2 == 0"}],[2686,{"text":"if $port1 > $port2"}],[2688,{"text":"if ($port1 == 1 and $port2 == 65535) { }"}],[2683,{"text":"if (defined(my $port2 = check_int())) { }"}],[2682,{"text":"if (check('-')) { }"}],[2679,{"text":"if (defined(my $port1 = check_int())) { }"}],[2712,{"text":"if ($range ne $aref_tcp_any)"}],[2711,{"text":"if (check(':')) { }"}],[2726,{"text":"if $type > 255"}],[2729,{"text":"if $code > 255"}],[2728,{"text":"if (defined(my $code = check_int())) { }"}],[2739,{"text":"if ($type == 0 or $type == 3 or $type == 11)"}],[2727,{"text":"if (check('/')) { }"}],[2725,{"text":"if (defined(my $type = check_int())) { }"}],[2754,{"text":"if $nr > 255"}],[2755,{"text":"if $nr == 0"}],[2756,{"text":"if ($nr == 1) { }"}],[2756,{"text":"elsif ($nr == 4) { }"}],[2756,{"text":"elsif ($nr == 17) { }"}],[2753,{"text":"if (defined(my $nr = check_int())) { }"}],[2789,{"text":"if ($v1 == $v2) { }"}],[2789,{"text":"elsif ($v1 == 1 and $v2 == 65535) { }"}],[2803,{"text":"if $src_port"}],[2804,{"text":"if $dst_port"}],[2805,{"text":"if $port"}],[2809,{"text":"if (defined(my $code = $$protocol{'code'})) { }"}],[2808,{"text":"if (defined(my $type = $$protocol{'type'}))"}],[2784,{"text":"if ($proto eq 'ip') { }"}],[2784,{"text":"elsif ($proto eq 'tcp' or $proto eq 'udp') { }"}],[2784,{"text":"elsif ($proto eq 'icmp') { }"}],[2828,{"text":"if (my $cached = $protocols{$name}) { }"}],[2843,{"text":"if ($proto eq 'ip') { }"}],[2843,{"text":"elsif ($proto eq 'tcp') { }"}],[2843,{"text":"elsif ($proto eq 'udp') { }"}],[2843,{"text":"elsif ($proto eq 'icmp') { }"}],[2843,{"text":"elsif ($proto eq 'proto') { }"}],[2867,{"text":"if ($name) { }"}],[2880,{"text":"if ($flag =~ /^(src|dst)_(net|any)$/) { }"}],[2880,{"text":"elsif ($flag =~ /^(?:stateless|reversed|oneway|overlaps|no_check_supernet_rules)/) { }"}],[2923,{"text":"if $private"}],[2928,{"text":"if check('user')"}],[2929,{"text":"if (my $sub_owner = check_assign('sub_owner', \\&read_identifier)) { }"}],[2929,{"text":"elsif (my(@other) = check_assign_list('overlaps', \\&read_typed_name)) { }"}],[2929,{"text":"elsif (my $visible = check_assign('visible', \\&read_owner_pattern)) { }"}],[2929,{"text":"elsif (check_flag('multi_owner')) { }"}],[2929,{"text":"elsif (check_flag('unknown_owner')) { }"}],[2929,{"text":"elsif (check_flag('has_unenforceable')) { }"}],[2929,{"text":"elsif (check_flag('disabled')) { }"}],[2957,{"text":"if (check('foreach'))"}],[2964,{"text":"if check('\\\\}')"}],[2971,{"text":"if (my(@list) = check_assign_list('log', \\&read_identifier))"}],[2975,{"text":"unless $src_user or $dst_user"}],[2977,{"text":"if ($$service{'foreach'} and not $src_user && $dst_user)"}],[2984,{"text":"$dst_user ? :"}],[2984,{"text":"$src_user ? :"}],[2992,{"text":"if $log"}],[2965,{"text":"if (my $action = check_permit_deny()) { }"}],[3008,{"text":"if $private"}],[3022,{"text":"if check('\\\\}')"}],[3024,{"text":"unless my $val_descr = $$attr_descr{$attribute}"}],[3030,{"text":"unless grep {$_ eq $val;} @$values"}],[3028,{"text":"if (my $values = $$val_descr{'values'}) { }"}],[3028,{"text":"elsif (my $fun = $$val_descr{'function'}) { }"}],[3045,{"text":"if (my $default = $$description{'default'}) { }"}],[3044,{"text":"unless (defined $$object{$attribute})"}],[3056,{"text":"if (exists $$map{$value})"}],[3054,{"text":"if (my $map = $$description{'map'})"}],[3143,{"text":"if $private"}],[3146,{"text":"if check('\\\\}')"}],[3151,{"text":"if $$crypto{'type'}"}],[3147,{"text":"if (check_flag('detailed_crypto_acl')) { }"}],[3147,{"text":"elsif (my $type = check_assign('type', \\&read_typed_name)) { }"}],[3159,{"text":"unless $$crypto{'type'}"}],[3172,{"text":"if check('\\\\}')"}],[3174,{"text":"if $$owner{'alias'}"}],[3179,{"text":"if $$owner{'admins'}"}],[3184,{"text":"if $$owner{'watchers'}"}],[3173,{"text":"if (my $alias = check_assign('alias', \\&read_string)) { }"}],[3173,{"text":"elsif (my(@admins) = check_assign_list('admins', \\&read_name)) { }"}],[3173,{"text":"elsif (my(@watchers) = check_assign_list('watchers', \\&read_name)) { }"}],[3173,{"text":"elsif (check_flag('extend_only')) { }"}],[3173,{"text":"elsif (check_flag('extend_unbounded')) { }"}],[3173,{"text":"elsif (check_flag('extend')) { }"}],[3173,{"text":"elsif (check_flag('show_all')) { }"}],[3205,{"text":"unless $$owner{'extend_only'} and $$owner{'watchers'}"}],[3204,{"text":"unless ($$owner{'admins'})"}],[3231,{"text":"unless my $pair = check_typed_name()"}],[3233,{"text":"unless my $descr = $global_type{$type}"}],[3238,{"text":"if (my $other = $$hash{$name})"}],[3260,{"text":"unless open my $fh, '<', $current_file"}],[3259,{"text":"if (defined $current_file) { }"}],[3285,{"text":"unless (defined $path and -d $path)"}],[3295,{"text":"unless opendir my $dh, $path"}],[3297,{"text":"if $file =~ /^\\./"}],[3298,{"text":"if $file =~ /$$Netspoc::Compiler::Pass1::config{'ignore_files'}/o"}],[3294,{"text":"if (-d $path) { }"}],[3315,{"text":"if ($private)"}],[3314,{"text":"if (my($name) = $path =~ m[([^/]*)\\.private$]) { }"}],[3328,{"text":"unless opendir my $dh, $path"}],[3334,{"text":"if $file =~ /^\\./"}],[3335,{"text":"if $file =~ /$$Netspoc::Compiler::Pass1::config{'ignore_files'}/o"}],[3338,{"text":"if $file =~ /^(config|raw)$/"}],[3381,{"text":"if $$rule{'for_router'}"}],[3382,{"text":"if $$rule{'stateless'}"}],[3383,{"text":"if $$rule{'stateless_icmp'}"}],[3384,{"text":"if $service"}],[3386,{"text":"$$rule{'deny'} ? :"}],[3388,{"text":"if (my $chain = $$rule{'chain'})"}],[3422,{"text":"unless my $range = $$prt{$where}"}],[3425,{"text":"unless ($range_prt)"}],[3442,{"text":"defined $code ? :"}],[3442,{"text":"defined $type ? :"}],[3443,{"text":"unless $main_prt = $prt_hash{$proto}{$key}"}],[3447,{"text":"unless $main_prt = $prt_hash{$proto}"}],[3454,{"text":"unless $main_prt = $prt_hash{'proto'}{$key}"}],[3411,{"text":"if ($proto eq 'tcp' or $proto eq 'udp') { }"}],[3411,{"text":"elsif ($proto eq 'icmp') { }"}],[3411,{"text":"elsif ($proto eq 'ip') { }"}],[3457,{"text":"if ($main_prt)"}],[3473,{"text":"if (my $prt = $$hash{''})"}],[3480,{"text":"if (not defined $$prt{'type'}) { }"}],[3480,{"text":"elsif (defined $$prt{'code'}) { }"}],[3514,{"text":"unless $$a{'range'}[0] <=> $$b{'range'}[0]"}],[3532,{"text":"if $i == @sorted"}],[3538,{"text":"if ($a2 + 1 == $b1)"}],[3547,{"text":"if $a2 < $b1"}],[3559,{"text":"unless $i"}],[3552,{"text":"if ($a2 >= $b2)"}],[3578,{"text":"if ($i == @sorted)"}],[3586,{"text":"if ($a1 > $b1)"}],[3596,{"text":"if ($a2 < $b2)"}],[3602,{"text":"if ($a2 == $b2)"}],[3592,{"text":"if ($a1 == $b1)"}],[3644,{"text":"unless @sorted"}],[3652,{"text":"unless $a1 == 1 and $a2 == 65535"}],[3657,{"text":"if &$check_subrange($a, $a1, $a2, 1)"}],[3665,{"text":"if (not $prt) { }"}],[3665,{"text":"elsif (my $split = $$prt{'split'}) { }"}],[3724,{"text":"$$_{'prt'} ? :"}],[3769,{"text":"if (my $owner = $owners{$value})"}],[3768,{"text":"if (my $value = $$obj{$key})"}],[3784,{"text":"if ($$owner{'extend_only'})"}],[3783,{"text":"if (my $owner = link_to_owner($obj, $key))"}],[3805,{"text":"unless ($names)"}],[3810,{"text":"if ($$owner{'watching_owners'})"}],[3813,{"text":"if ($names eq 'recursive')"}],[3823,{"text":"unless ($owner_b)"}],[3821,{"text":"if (my($o_name) = $name =~ /^owner:(.*)$/) { }"}],[3855,{"text":"if $$owner{'alias'}"}],[3857,{"text":"if $$other{'alias'}"}],[3853,{"text":"if (my $other = $alias2owner{$alias}) { }"}],[3877,{"text":"unless $email =~ m[^ [\\w.!\\#$%&''*+/=?^_``{|}~-]+ \\@ [\\w.-]+ $]x"}],[3875,{"text":"unless do {\n\tuse bytes;\n$email eq 'guest' unless $email =~ m[^ [\\w.!\\#$%&''*+/=?^_``{|}~-]+ \\@ [\\w.-]+ $]x\n}"}],[3894,{"text":"if (my(@emails) = find_duplicates(@{$$owner{$attr};}))"}],[3900,{"text":"if (my(@duplicates) = find_duplicates(@{$$owner{'admins'};}, @{$$owner{'watchers'};}))"}],[3892,{"text":"if (find_duplicates(@{$$owner{'admins'};}, @{$$owner{'watchers'};}))"}],[3919,{"text":"if (my $router_attributes = $$area{'router_attributes'})"}],[3925,{"text":"unless $$router{'model'}{'has_vip'}"}],[3938,{"text":"unless my $pair = $$obj{'policy_distribution_point'}"}],[3940,{"text":"if ($type ne 'host')"}],[3949,{"text":"unless ($host)"}],[3963,{"text":"unless my $list = $$obj{'general_permit'}"}],[3969,{"text":"ref $a eq 'ARRAY' ? :"}],[3969,{"text":"ref $b eq 'ARRAY' ? :"}],[3987,{"text":"unless $range = $$prt{'range'}"}],[3982,{"text":"if (ref $prt eq 'ARRAY') { }"}],[3991,{"text":"if (my $flags = $$orig_prt{'flags'})"}],[3994,{"text":"if ($src_range or $range and $range ne $aref_tcp_any)"}],[3997,{"text":"if (@reason)"}],[4014,{"text":"if (is_network($obj)) { }"}],[4012,{"text":"if (@elements == 1) { }"}],[4034,{"text":"unless $$area{$attr}"}],[4039,{"text":"unless $$router{'managed'}"}],[4044,{"text":"if (my $main_interface = $$obj{'main_interface'})"}],[4037,{"text":"if (is_interface($obj)) { }"}],[4009,{"text":"if ($$area{'anchor'}) { }"}],[4058,{"text":"if (my $router_attributes = $$area{'router_attributes'})"}],[4076,{"text":"if ($$interface{'disabled'}) { }"}],[4073,{"text":"unless ($network)"}],[4098,{"text":"unless $private1 eq $private2"}],[4097,{"text":"if (my $private2 = $$interface{'private'}) { }"}],[4096,{"text":"if (my $private1 = $$network{'private'})"}],[4133,{"text":"unless $network_ip eq 'unnumbered'"}],[4154,{"text":"unless (match_ip($ip, $network_ip, $mask))"}],[4159,{"text":"unless ($$network{'loopback'})"}],[4169,{"text":"if ($ip == $network_ip)"}],[4173,{"text":"if ($ip == $broadcast)"}],[4158,{"text":"if ($mask == 4294967295) { }"}],[4126,{"text":"if ($ip =~ /^(?:short|tunnel)$/) { }"}],[4126,{"text":"elsif ($ip eq 'unnumbered') { }"}],[4126,{"text":"elsif ($network_ip eq 'unnumbered') { }"}],[4126,{"text":"elsif ($ip eq 'negotiated') { }"}],[4126,{"text":"elsif ($ip eq 'bridged') { }"}],[4197,{"text":"ref $parent ? :"}],[4197,{"text":"!$parent ? :"}],[4201,{"text":"unless $$object{'subnet_of'}"}],[4203,{"text":"if ($type ne 'network')"}],[4212,{"text":"unless ($network)"}],[4229,{"text":"if ($ip eq 'unnumbered')"}],[4240,{"text":"unless (match_ip($sub_ip, $ip, $mask))"}],[4252,{"text":"unless my $nat = $$obj{'nat'}"}],[4270,{"text":"unless $$router{'managed'}"}],[4283,{"text":"unless (is_interface($obj))"}],[4298,{"text":"unless $$router{'managed'}"}],[4301,{"text":"if $$obj{'main_interface'}"}],[4309,{"text":"if $private eq $obj_p"}],[4308,{"text":"if (my $obj_p = $$obj{'private'})"}],[4315,{"text":"if (my $obj_p = $$obj{'private'})"}],[4307,{"text":"if ($private) { }"}],[4321,{"text":"if ($no_private)"}],[4325,{"text":"if ($changed)"}],[4329,{"text":"if ($count == 1) { }"}],[4329,{"text":"elsif ($count == 0) { }"}],[4344,{"text":"unless $$interface{'spoke'} or $$interface{'hub'}"}],[4348,{"text":"if $$interface{'no_check'}"}],[4352,{"text":"unless $real_intf"}],[4353,{"text":"unless $real_intf eq $interface"}],[4382,{"text":"if $$virtual1{'disabled'}"}],[4390,{"text":"if ($type1 ne $type2)"}],[4395,{"text":"unless ($id1 eq ($$virtual2{'redundancy_id'} || ''))"}],[4413,{"text":"if (my $virtual2 = $net2id2type2virtual{$net}{$id1}{$type1}) { }"}],[4412,{"text":"if ($id1)"}],[4387,{"text":"if (my $interfaces = $net2ip2virtual{$net}{$ip}) { }"}],[4437,{"text":"if @$interfaces <= 2"}],[4442,{"text":"if $$interface{'main_interface'}"}],[4443,{"text":"unless my $restricts = $$interface{'path_restrict'}"}],[4445,{"text":"if $seen{$restrict}"}],[4449,{"text":"if @restrict_routers == @virt_routers"}],[4454,{"text":"if (grep {$_ eq $router;} @restrict_routers)"}],[4478,{"text":"if ($$router{'managed'} or $$router{'routing_only'})"}],[4496,{"text":"unless my $group = $$interfaces[0]{'redundancy_interfaces'}"}],[4497,{"text":"unless $$_{'redundancy_interfaces'}"}],[4504,{"text":"if ($$network{'ip'} eq 'unnumbered' and $$network{'interfaces'} and @{$$network{'interfaces'};} > 2)"}],[4527,{"text":"if (1 < @{$$interface{'router'}{'interfaces'};})"}],[4534,{"text":"if ($$router{'managed'} || $$router{'routing_only'} and not $$interface{'routing'})"}],[4540,{"text":"unless ($$old_intf{'redundant'} and $$interface{'redundant'})"}],[4539,{"text":"if (my $old_intf = $ip2obj{$ip}) { }"}],[4532,{"text":"unless ($ip =~ /^(?:unnumbered|negotiated|tunnel|bridged)$/)"}],[4524,{"text":"if ($ip eq 'short') { }"}],[4552,{"text":"if ($short_intf and $route_intf)"}],[4561,{"text":"if (my $other_device = $ip2obj{$ip}) { }"}],[4571,{"text":"if (my $other_device = $range2obj{$from}{$to}) { }"}],[4560,{"text":"if (my $ip = $$host{'ip'}) { }"}],[4560,{"text":"elsif (my $range = $$host{'range'}) { }"}],[4584,{"text":"unless is_host($other_device)"}],[4583,{"text":"if (my $other_device = $ip2obj{$ip})"}],[4581,{"text":"if (my $range = $$host{'range'})"}],[4637,{"text":"if (not $network or $$network{'disabled'})"}],[4647,{"text":"if $interface eq $in_interface"}],[4650,{"text":"if ($$interface{'disabled'})"}],[4659,{"text":"if $out_interface eq $interface"}],[4687,{"text":"unless my $prefix = $$network{'bridged'}"}],[4692,{"text":"unless $$network{'disabled'}"}],[4691,{"text":"if (my $network = $networks{$prefix})"}],[4700,{"text":"unless @group"}],[4709,{"text":"unless $ip == $ip1 and $mask == $mask1"}],[4714,{"text":"if $$in_intf{'ip'} ne 'bridged'"}],[4716,{"text":"if $seen{$router}"}],[4720,{"text":"unless match_ip($$layer3_intf{'ip'}, $ip, $mask)"}],[4719,{"text":"if (my $layer3_intf = $$in_intf{'layer3_interface'})"}],[4725,{"text":"if $out_intf eq $in_intf"}],[4726,{"text":"if $$out_intf{'ip'} ne 'bridged'"}],[4728,{"text":"unless $$href{$next_net}"}],[4732,{"text":"unless $count > 1"}],[4737,{"text":"unless $$href{$network} eq 'connected'"}],[4751,{"text":"if $$interface{'router'}{'disabled'}"}],[4753,{"text":"if ($$interface{'router'}{'disabled'})"}],[4768,{"text":"if ($$router{'managed'} or $$router{'routing_only'})"}],[4781,{"text":"unless my $borders = $$area{$attr}"}],[4782,{"text":"if (my(@active_borders) = grep({not $$_{'disabled'};} @$borders))"}],[4776,{"text":"if (my $anchor = $$area{'anchor'}) { }"}],[4788,{"text":"if ($ok) { }"}],[4797,{"text":"if $$router{'disabled'}"}],[4799,{"text":"if ($$router{'managed'}) { }"}],[4799,{"text":"elsif ($$router{'routing_only'}) { }"}],[4811,{"text":"if $$router{'orig_router'}"}],[4816,{"text":"if @$aref == 1"}],[4817,{"text":"$$_{'managed'} || $$_{'routing_only'} ? :"}],[4819,{"text":"unless equal(map({$$_{'managed'} || $$_{'routing_only'} ? $$_{'model'}{'name'} : ();} @$aref))"}],[4833,{"text":"if (my $other = $hardware{$name}) { }"}],[4858,{"text":"if $$interface{'disabled'}"}],[4860,{"text":"unless $seen{$network}++"}],[4866,{"text":"if $$network{'disabled'}"}],[4868,{"text":"if (keys %networks > 1) { }"}],[4867,{"text":"unless ($seen{$network})"}],[4899,{"text":"if (($low & $mask) == 0 and $low + $mask <= $high)"}],[4912,{"text":"if $$network{'ip'} =~ /^(?:unnumbered|tunnel)$/"}],[4925,{"text":"unless $user"}],[4924,{"text":"if (my($user, $dom) = $id =~ /^(.*?)(\\@.*)$/) { }"}],[4923,{"text":"if ($id)"}],[4940,{"text":"if (@ip_mask > 1) { }"}],[4940,{"text":"elsif ($ip_mask[0][1] == 4294967295) { }"}],[4940,{"text":"elsif ($id =~ /^.+\\@/) { }"}],[4939,{"text":"if ($id)"}],[4921,{"text":"if (my $ip = $$host{'ip'}) { }"}],[4921,{"text":"elsif ($$host{'range'}) { }"}],[4972,{"text":"unless ($$nat2{$name} and $$nat{$name} eq $$nat2{$name})"}],[4968,{"text":"if (keys %$nat == keys %$nat2) { }"}],[4962,{"text":"if ($nat xor $nat2) { }"}],[4962,{"text":"elsif ($nat and $nat2) { }"}],[4985,{"text":"if $nat_error"}],[4989,{"text":"if ($owner xor $owner2 or $owner and $owner2 and $owner ne $owner2)"}],[5005,{"text":"if $nat"}],[5006,{"text":"if $private"}],[5007,{"text":"if $owner"}],[5008,{"text":"if ($id)"}],[4959,{"text":"if (my $other_subnet = $inv_prefix_aref[$inv_prefix]{$ip}) { }"}],[5075,{"text":"if $private"}],[5074,{"text":"if (my $private = $$subnet{'private'})"}],[5053,{"text":"if ($up_inv_prefix >= $network_inv_prefix) { }"}],[5053,{"text":"elsif ($up_inv_prefix < @inv_prefix_aref and $up = $inv_prefix_aref[$up_inv_prefix]{$ip}) { }"}],[5049,{"text":"if (my $neighbor = $$ip2subnet{$next_ip})"}],[5029,{"text":"if (not $$subnet{'nat'} || $$subnet{'id'} and $ip % $modulo == 0)"}],[5089,{"text":"if $$subnet{'up'}"}],[5095,{"text":"if (my $up = $inv_prefix_aref[$j]{$ip})"}],[5023,{"text":"if (my $ip2subnet = $inv_prefix_aref[$i])"}],[5111,{"text":"if $$router{'managed'} or $$router{'routing_only'}"}],[5128,{"text":"unless ($hash{$up})"}],[5126,{"text":"if ($neighbor = $$subnet{'neighbor'} and $hash{$neighbor})"}],[5136,{"text":"if (@extra) { }"}],[5152,{"text":"unless $$a{'mask'} <=> $$b{'mask'}"}],[5174,{"text":"if (my $orig_router = $$router{'orig_router'}) { }"}],[5174,{"text":"elsif (my $orig_interfaces = $$router{'orig_interfaces'}) { }"}],[5193,{"text":"if (is_router($object)) { }"}],[5206,{"text":"if $$object{'disabled'}"}],[5191,{"text":"unless ($result)"}],[5246,{"text":"unless ($other)"}],[5258,{"text":"if (!$$other{'network'} eq $network)"}],[5257,{"text":"if (not $other and $other = $$info{'i'}{$router})"}],[5243,{"text":"if (is_router($auto)) { }"}],[5235,{"text":"if ($type eq 'Interface') { }"}],[5235,{"text":"elsif ($type eq 'Autointerface') { }"}],[5266,{"text":"if ($other)"}],[5277,{"text":"if (ref $val) { }"}],[5303,{"text":"$$element[0] eq '!' ? :"}],[5312,{"text":"if ($$element[0] eq '!') { }"}],[5319,{"text":"unless @non_compl >= 1"}],[5330,{"text":"if ($$result{$element})"}],[5337,{"text":"if $$element{'disabled'}"}],[5338,{"text":"unless delete $$result{$element}"}],[5355,{"text":"ref $elements eq 'ARRAY' ? :"}],[5360,{"text":"unless ref $ext"}],[5366,{"text":"if $$object{'disabled'}"}],[5376,{"text":"unless $$object{'mask'} == 0"}],[5384,{"text":"unless $$_{'router'}{'managed'}"}],[5371,{"text":"if ($$object{'is_aggregate'}) { }"}],[5371,{"text":"elsif ($managed) { }"}],[5395,{"text":"if ($$object{'is_aggregate'}) { }"}],[5370,{"text":"if ($selector eq 'all') { }"}],[5407,{"text":"if ($managed and not $$router{'managed'} || $$router{'routing_only'}) { }"}],[5407,{"text":"elsif ($selector eq 'all') { }"}],[5438,{"text":"unless ($seen{$router})"}],[5446,{"text":"unless $$_{'managed'}"}],[5453,{"text":"$r ? :"}],[5443,{"text":"if ($managed) { }"}],[5456,{"text":"if ($selector eq 'all') { }"}],[5466,{"text":"if ($managed and not $$obj{'managed'} || $$obj{'routing_only'}) { }"}],[5466,{"text":"elsif ($selector eq 'all') { }"}],[5465,{"text":"if (is_router($obj)) { }"}],[5369,{"text":"if ($type eq 'Network') { }"}],[5369,{"text":"elsif ($type eq 'Interface') { }"}],[5369,{"text":"elsif ($type eq 'Area') { }"}],[5369,{"text":"elsif ($type eq 'Autointerface') { }"}],[5497,{"text":"if $managed"}],[5498,{"text":"if ($selector eq 'all') { }"}],[5494,{"text":"if (my $router = $routers{$name}) { }"}],[5359,{"text":"if (ref $name) { }"}],[5359,{"text":"elsif (ref $ext) { }"}],[5359,{"text":"elsif (my $interface = $interfaces{\"$name.$ext\"}) { }"}],[5524,{"text":"$clean_autogrp ? :"}],[5537,{"text":"if ($type eq 'Area') { }"}],[5537,{"text":"elsif ($type eq 'Network' and $$object{'is_aggregate'}) { }"}],[5558,{"text":"if (not $$object{'is_aggregate'}) { }"}],[5576,{"text":"$$_{'is_aggregate'} ? :"}],[5554,{"text":"if ($type eq 'Host' or $type eq 'Interface') { }"}],[5554,{"text":"elsif ($type eq 'Network') { }"}],[5554,{"text":"elsif (my $aggregates = &$get_aggregates($object, 0, 0)) { }"}],[5594,{"text":"if ($$object{'is_managed_host'}) { }"}],[5605,{"text":"if (my $managed_hosts = $$network{'managed_hosts'})"}],[5590,{"text":"if ($type eq 'Host') { }"}],[5590,{"text":"elsif ($type eq 'Interface') { }"}],[5590,{"text":"elsif (my $networks = &$get_networks($object)) { }"}],[5615,{"text":"if ($managed)"}],[5621,{"text":"if $ext"}],[5640,{"text":"if (@$interfaces > 1)"}],[5636,{"text":"if ($$intf{'router'}{'managed'}) { }"}],[5633,{"text":"if ($$_{'loopback'}) { }"}],[5653,{"text":"$clean_autogrp ? :"}],[5624,{"text":"if (my $networks = &$get_networks($object)) { }"}],[5668,{"text":"$ext ? :"}],[5671,{"text":"if (my $aggregates = &$get_aggregates($object, $ip, $mask)) { }"}],[5671,{"text":"elsif (my $networks = &$get_networks($object)) { }"}],[5585,{"text":"if ($type eq 'host') { }"}],[5585,{"text":"elsif ($type eq 'network') { }"}],[5585,{"text":"elsif ($type eq 'any') { }"}],[5699,{"text":"if $ext"}],[5707,{"text":"$clean_autogrp ? :"}],[5739,{"text":"unless $private1 eq $private2"}],[5738,{"text":"if (my $private2 = $$element{'private'})"}],[5751,{"text":"if ($unique{$obj}++)"}],[5756,{"text":"if (@duplicate)"}],[5713,{"text":"if ($$object{'recursive'}) { }"}],[5713,{"text":"elsif (not $elements) { }"}],[5704,{"text":"if (is_group($object)) { }"}],[5704,{"text":"elsif ($$object{'is_aggregate'} and $$object{'zone'}{'zone_cluster'}) { }"}],[5298,{"text":"if ($type eq '&') { }"}],[5298,{"text":"elsif ($type eq '!') { }"}],[5298,{"text":"elsif ($type eq 'user') { }"}],[5298,{"text":"elsif ($type eq 'interface') { }"}],[5298,{"text":"elsif (ref $name) { }"}],[5298,{"text":"elsif (my $object = $name2object{$type}{$name}) { }"}],[5795,{"text":"if ($seen{$obj}++)"}],[5800,{"text":"if (@duplicate)"}],[5817,{"text":"if ($$object{'disabled'})"}],[5822,{"text":"if $changed"}],[5844,{"text":"if ($$object{'is_tunnel'}) { }"}],[5844,{"text":"elsif ($$object{'has_id_hosts'}) { }"}],[5837,{"text":"if ($$object{'ip'} eq 'unnumbered') { }"}],[5837,{"text":"elsif ($$object{'crosslink'}) { }"}],[5837,{"text":"elsif ($$object{'is_aggregate'}) { }"}],[5853,{"text":"if ($$object{'ip'} =~ /^(short|unnumbered)$/)"}],[5836,{"text":"if (is_network($object)) { }"}],[5836,{"text":"elsif (is_interface($object)) { }"}],[5836,{"text":"elsif (is_area($object)) { }"}],[5860,{"text":"if ($ignore)"}],[5866,{"text":"if $changed"}],[5886,{"text":"unless ($$network{'has_id_hosts'} or $subnet_warning_seen{$subnet}++)"}],[5884,{"text":"if ($$subnet{'mask'} == $$subnet{'network'}{'mask'}) { }"}],[5884,{"text":"elsif (my $host = $subnet2host{$subnet}) { }"}],[5875,{"text":"if (is_host($obj)) { }"}],[5913,{"text":"$convert_hosts eq 'no_combine' ? :"}],[5868,{"text":"if ($convert_hosts) { }"}],[5925,{"text":"$print_type eq 'warn' ? :"}],[5928,{"text":"if $$value{'is_used'}"}],[5932,{"text":"if (my $conf = $$Netspoc::Compiler::Pass1::config{'check_unused_groups'})"}],[5937,{"text":"if (my $conf = $$Netspoc::Compiler::Pass1::config{'check_unused_protocols'})"}],[5960,{"text":"if (ref $pair eq 'HASH')"}],[5967,{"text":"if (my $prt = $protocols{$name}) { }"}],[5981,{"text":"if ($elements eq 'recursive') { }"}],[5981,{"text":"elsif (not $$prtgroup{'is_used'}) { }"}],[5979,{"text":"if (my $prtgroup = $protocolgroups{$name}) { }"}],[5966,{"text":"if ($type eq 'protocol') { }"}],[5966,{"text":"elsif ($type eq 'protocolgroup') { }"}],[6020,{"text":"unless ($proto eq 'tcp' or $proto eq 'udp')"}],[6036,{"text":"unless ($aref_list)"}],[6034,{"text":"if ($src_range or $$prt{'flags'} or $$dst_range{'name'} ne $$prt{'name'}) { }"}],[6085,{"text":"if ($old_rule)"}],[6108,{"text":"if ($type eq 'Autointerface')"}],[6120,{"text":"if ($$obj{'router'}{'managed'}) { }"}],[6130,{"text":"if ($$obj{'managed'}) { }"}],[6113,{"text":"if ($type eq 'Network') { }"}],[6113,{"text":"elsif ($type eq 'Subnet') { }"}],[6113,{"text":"elsif ($type eq 'Interface') { }"}],[6113,{"text":"elsif ($type eq 'Router') { }"}],[6113,{"text":"elsif ($type eq 'Host') { }"}],[6153,{"text":"if ($$interface{'ip'} eq 'short') { }"}],[6153,{"text":"elsif ($$interface{'ip'} eq 'unnumbered') { }"}],[6151,{"text":"if (is_autointerface($src)) { }"}],[6179,{"text":"if ($$obj{'id'}) { }"}],[6188,{"text":"if ($$obj{'router'}{'managed'} or $$obj{'loopback'}) { }"}],[6175,{"text":"if ($type eq 'Network') { }"}],[6175,{"text":"elsif ($type eq 'Subnet' or $type eq 'Host') { }"}],[6175,{"text":"elsif ($type eq 'Interface') { }"}],[6199,{"text":"if $$network{'ip'} ne 'unnumbered'"}],[6169,{"text":"if ($$flags{'net'})"}],[6210,{"text":"if ($type eq 'Network') { }"}],[6210,{"text":"elsif ($type eq 'Subnet' or $type eq 'Interface' or $type eq 'Host') { }"}],[6205,{"text":"if ($$flags{'any'})"}],[6232,{"text":"unless my $managed_hosts = $$object{'managed_hosts'}"}],[6235,{"text":"if (@extra)"}],[6253,{"text":"if ($$zone{'has_unenforceable'})"}],[6264,{"text":"if $src eq $dst"}],[6270,{"text":"if is_autointerface($src) or is_autointerface($dst)"}],[6280,{"text":"$$src{'ip'} > $$dst{'ip'} ? :"}],[6281,{"text":"if ($$a{'ip'} + complement_32bit($$a{'mask'}) + 1 == $$b{'ip'})"}],[6279,{"text":"if ($$src{'network'} eq $$dst{'network'})"}],[6292,{"text":"if zone_eq($$src{'zone'}, $$dst{'zone'}) and $$src{'ip'} == $$dst{'ip'} and $$src{'mask'} == $$dst{'mask'}"}],[6300,{"text":"if zone_eq($$src{'zone'}, get_zone($dst))"}],[6303,{"text":"if zone_eq($$dst{'zone'}, get_zone($src))"}],[6266,{"text":"if (is_router($zone)) { }"}],[6266,{"text":"elsif (is_subnet($src) and is_subnet($dst)) { }"}],[6266,{"text":"elsif ($$src{'is_aggregate'} and $$dst{'is_aggregate'}) { }"}],[6266,{"text":"elsif ($$src{'is_aggregate'} and $$src{'mask'} == 0) { }"}],[6266,{"text":"elsif ($$dst{'is_aggregate'} and $$dst{'mask'} == 0) { }"}],[6266,{"text":"elsif ($$dst{'managed_hosts'}) { }"}],[6319,{"text":"if ($$service{'has_unenforceable'} and not $$service{'seen_unenforceable'} && $$service{'seen_enforceable'})"}],[6324,{"text":"unless $$Netspoc::Compiler::Pass1::config{'check_unenforceable'}"}],[6325,{"text":"if $$service{'disabled'}"}],[6327,{"text":"$$Netspoc::Compiler::Pass1::config{'check_unenforceable'} eq 'warn' ? :"}],[6334,{"text":"if ($$service{'seen_unenforceable'} or $$service{'silent_unenforceable'})"}],[6331,{"text":"unless (delete $$service{'seen_enforceable'})"}],[6340,{"text":"if $$service{'has_unenforceable'}"}],[6342,{"text":"if (my $hash = delete $$service{'seen_unenforceable'})"}],[6358,{"text":"unless $$zone{'has_unenforceable'}"}],[6359,{"text":"if $$zone{'seen_unenforceable'}"}],[6361,{"text":"$agg00 ? :"}],[6368,{"text":"unless @deleted_rules"}],[6376,{"text":"if $$prt1{'flags'}{'overlaps'} and $$prt2{'flags'}{'overlaps'}"}],[6382,{"text":"if ($oservice eq $overlap)"}],[6380,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6390,{"text":"if ($service eq $overlap)"}],[6388,{"text":"if (my $overlaps = $$oservice{'overlaps'})"}],[6405,{"text":"$action eq 'warn' ? :"}],[6404,{"text":"if (my $action = $$Netspoc::Compiler::Pass1::config{'check_duplicate_rules'})"}],[6426,{"text":"unless $$rule{'rule'}"}],[6427,{"text":"unless $$other{'rule'}"}],[6431,{"text":"if $$prt1{'flags'}{'overlaps'} and $$prt2{'flags'}{'overlaps'}"}],[6438,{"text":"if ($$router{'managed'} or $$router{'routing_only'})"}],[6436,{"text":"if (is_interface($src))"}],[6445,{"text":"unless ($oservice)"}],[6451,{"text":"if ($oservice eq $overlap)"}],[6449,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6462,{"text":"unless @deleted_rules"}],[6478,{"text":"$action eq 'warn' ? :"}],[6477,{"text":"if (my $action = $$Netspoc::Compiler::Pass1::config{'check_redundant_rules'})"}],[6505,{"text":"if $$service{'disabled'}"}],[6509,{"text":"if $$overlap{'disabled'}"}],[6510,{"text":"unless $$used{$overlap}"}],[6506,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6524,{"text":"unless my $log = $$router{'log'}"}],[6535,{"text":"if $known_log{$tag}"}],[6568,{"text":"$deny ? :"}],[6572,{"text":"if (@$log) { }"}],[6570,{"text":"if ($log)"}],[6582,{"text":"$foreach ? :"}],[6602,{"text":"if (ref $prt eq 'ARRAY') { }"}],[6602,{"text":"elsif (my $main_prt = $$prt{'main'}) { }"}],[6610,{"text":"$orig_prt ? :"}],[6612,{"text":"$$flags{'reversed'} ? :"}],[6621,{"text":"if ($src_zone eq $dst_zone or $src_zone_cluster and $dst_zone_cluster and $src_zone_cluster eq $dst_zone_cluster)"}],[6636,{"text":"unless my(@src) = expand_special($src, $dst, $$flags{'src'}, $context)"}],[6646,{"text":"unless $src_p and $src_p eq $private or $dst_p and $dst_p eq $private"}],[6654,{"text":"if $$src{'private'}"}],[6659,{"text":"if $$dst{'private'}"}],[6643,{"text":"if ($private) { }"}],[6665,{"text":"if $disabled"}],[6673,{"text":"if $stateless"}],[6674,{"text":"if $deny"}],[6675,{"text":"if $src_range"}],[6676,{"text":"if $log"}],[6677,{"text":"if $orig_prt"}],[6678,{"text":"if $$flags{'oneway'}"}],[6679,{"text":"if $$flags{'no_check_supernet_rules'}"}],[6681,{"text":"if $$flags{'stateless_icmp'}"}],[6709,{"text":"if $convert_hosts"}],[6724,{"text":"if (!$type eq 'service') { }"}],[6724,{"text":"elsif (my $other = $services{$oname}) { }"}],[6720,{"text":"if (my $overlaps = $$service{'overlaps'})"}],[6745,{"text":"unless (grep {/^$prefix/;} keys %owners)"}],[6744,{"text":"if ($prefix)"}],[6743,{"text":"if (my($prefix) = $visible =~ /^ (\\S*) [*] $/x)"}],[6742,{"text":"if (my $visible = $$service{'visible'})"}],[6781,{"text":"unless $p1 <= 22 and 22 <= $p2"}],[6792,{"text":"if ($pdp_src = $host2pdp_src{$host})"}],[6804,{"text":"unless my $pdp = $$router{'policy_distribution_point'}"}],[6805,{"text":"if $$router{'orig_router'}"}],[6814,{"text":"unless my $sub_rule_tree = $rule_tree{$stateless}{$deny}{$src_range}{$src}"}],[6822,{"text":"if $$interface{'vip'}"}],[6825,{"text":"unless $$sub_rule_tree{$interface}{$prt}"}],[6844,{"text":"if ($found_interfaces{$front})"}],[6851,{"text":"unless (@result)"}],[6858,{"text":"unless @result"}],[6833,{"text":"if (keys %found_interfaces == 1) { }"}],[6870,{"text":"if $seen{$router}"}],[6871,{"text":"unless $$router{'policy_distribution_point'}"}],[6872,{"text":"if $$router{'orig_router'}"}],[6875,{"text":"unless ($$member{'admin_ip'})"}],[6883,{"text":"unless !$$a{'admin_ip'} <=> !$$b{'admin_ip'}"}],[6892,{"text":"unless $$router{'admin_ip'}"}],[6873,{"text":"if (my $vrf_members = $$router{'vrf_members'}) { }"}],[6898,{"text":"if (@unreachable > 4)"}],[6897,{"text":"if (@unreachable)"}],[6920,{"text":"if (my $cluster = $$zone{'zone_cluster'})"}],[6926,{"text":"if $$zone{'owner'}"}],[6933,{"text":"if $$network{'ip'} eq 'tunnel'"}],[6935,{"text":"unless $net_owner"}],[6937,{"text":"if $net_owner ne $owner"}],[6936,{"text":"if ($owner) { }"}],[6943,{"text":"if ($owner)"}],[6955,{"text":"unless my(@implicit_owner_zones) = grep({$zone_got_net_owners{$_};} @$cluster)"}],[6957,{"text":"unless (@implicit_owner_zones == @$cluster and equal(map({$$_{'owner'};} @implicit_owner_zones)))"}],[6975,{"text":"unless my(@areas) = values %{$$zone{'areas'};}"}],[6998,{"text":"if (my $super = $$area{'subset_of'})"}],[7006,{"text":"if ($zone2area{$zone} eq $area)"}],[7020,{"text":"unless ($$router{'managed'} or $$router{'routing_only'})"}],[7031,{"text":"unless my $subnets = $$network{'networks'}"}],[7068,{"text":"unless ($zone_got_net_owners{$upper_node})"}],[7077,{"text":"if ($$upper_owner{'extend'})"}],[7067,{"text":"if ($owner eq $upper_owner) { }"}],[7066,{"text":"if ($upper_owner)"}],[7083,{"text":"if $extend"}],[7084,{"text":"if $extend_only"}],[7061,{"text":"if (not $owner) { }"}],[7088,{"text":"if (my $upper_extend = $$extend_only[0])"}],[7087,{"text":"unless ($owner and $$owner{'extend_only'})"}],[7093,{"text":"if ($owner and $$owner{'extend_only'}) { }"}],[7093,{"text":"elsif ($owner) { }"}],[7102,{"text":"unless my $childs = $tree{$node}"}],[7121,{"text":"if $zone_got_net_owners{$node}"}],[7125,{"text":"$owner_list eq $ext ? :"}],[7130,{"text":"if $$e_owner{'extend_unbounded'}"}],[7131,{"text":"if grep {$e_owner eq $_;} @$other"}],[7123,{"text":"if ($node1) { }"}],[7147,{"text":"if ($combined and @$combined)"}],[7154,{"text":"if ($node_owner ne $owner)"}],[7158,{"text":"if (@invalid)"}],[7150,{"text":"if ($$owner{'show_all'})"}],[7173,{"text":"unless my $attributes = $$area{'router_attributes'}"}],[7174,{"text":"unless my $owner = $$attributes{'owner'}"}],[7178,{"text":"if ($r_owner eq $owner)"}],[7177,{"text":"if (my $r_owner = $$router{'owner'}) { }"}],[7192,{"text":"unless my $owner = $$router{'owner'}"}],[7207,{"text":"unless $$interface{'loopback'}"}],[7208,{"text":"unless my $owner = $$interface{'owner'}"}],[7211,{"text":"if $managed"}],[7222,{"text":"if $$aggregate{'owner'}"}],[7225,{"text":"unless $$up{'is_aggregate'}"}],[7227,{"text":"$up ? :"}],[7237,{"text":"unless is_autointerface($src)"}],[7257,{"text":"$$Netspoc::Compiler::Pass1::config{'check_service_unknown_owner'} eq 'warn' ? :"}],[7265,{"text":"if ($unknown2services{$up} and $unknown2services{$obj} eq $unknown2services{$up})"}],[7296,{"text":"if ($has_user eq 'both')"}],[7301,{"text":"if $what eq $has_user"}],[7316,{"text":"if (@objects) { }"}],[7315,{"text":"if ($is_coupling) { }"}],[7334,{"text":"if ($owner) { }"}],[7349,{"text":"if keys %$service_owners == 1 and $$service_owners{$sub_owner}"}],[7347,{"text":"if (my $sub_owner = $$service{'sub_owner'})"}],[7354,{"text":"$is_coupling ? :"}],[7368,{"text":"$$Netspoc::Compiler::Pass1::config{'check_service_multi_owner'} eq 'warn' ? :"}],[7368,{"text":"$$Netspoc::Compiler::Pass1::config{'check_service_multi_owner'} ? :"}],[7359,{"text":"if ($$service{'multi_owner'}) { }"}],[7358,{"text":"if ($multi_count > 1 xor $$service{'multi_owner'})"}],[7384,{"text":"if ($$Netspoc::Compiler::Pass1::config{'check_service_unknown_owner'})"}],[7380,{"text":"if ($$service{'unknown_owner'}) { }"}],[7377,{"text":"if ($unknown_owners and keys %$unknown_owners xor $$service{'unknown_owner'})"}],[7397,{"text":"unless delete $$owner{'is_used'}"}],[7417,{"text":"if $$network{'nat_domain'}"}],[7429,{"text":"if $interface eq $in_interface"}],[7430,{"text":"if $$interface{'main_interface'}"}],[7441,{"text":"if aref_eq($nat_tags, $entry_nat_tags)"}],[7444,{"text":"if $$router{'nat_err_seen'}{\"$names1 $names2\"}++"}],[7440,{"text":"if (my $entry_nat_tags = $$router{'active_path'})"}],[7459,{"text":"if $out_interface eq $interface"}],[7460,{"text":"if $$out_interface{'main_interface'}"}],[7465,{"text":"if (aref_eq($out_nat_tags, $nat_tags)) { }"}],[7465,{"text":"elsif (not $$router{'nat_tags'}{$domain}) { }"}],[7493,{"text":"if ($$domain{'active_path'})"}],[7502,{"text":"if $$nat_set{$nat_tag}"}],[7509,{"text":"if ($$nat_set{$nat_tag2})"}],[7506,{"text":"if (my $aref = $$nat_tags2multi{$nat_tag})"}],[7526,{"text":"unless my $nat = $$network{'nat'}"}],[7527,{"text":"unless $$nat{$nat_tag}"}],[7545,{"text":"if $router eq $in_router"}],[7550,{"text":"if grep {$_ eq $nat_tag;} @$in_nat_tags"}],[7555,{"text":"if $out_domain eq $domain"}],[7562,{"text":"if ($$router{'active_path'})"}],[7559,{"text":"if (grep {$_ eq $nat_tag;} @$out_nat_tags)"}],[7576,{"text":"if $out_domain eq $domain"}],[7584,{"text":"if $nat_tag2 eq $nat_tag"}],[7585,{"text":"unless $$href{$nat_tag2}"}],[7606,{"text":"unless ($$next_info{'dynamic'})"}],[7597,{"text":"if ($$nat_info{'hidden'}) { }"}],[7597,{"text":"elsif ($$nat_info{'dynamic'}) { }"}],[7581,{"text":"if (my $aref = $$nat_tags2multi{$nat_tag})"}],[7621,{"text":"if (my $err_path = distribute_nat1($out_domain, $nat_tag, $nat_tags2multi, $router))"}],[7637,{"text":"if (my $err_path = distribute_nat1($domain, $nat_tag, $nat_tags2multi, $in_router))"}],[7655,{"text":"unless my $href = $$network{'nat'}"}],[7658,{"text":"unless ($$nat_network{'hidden'})"}],[7691,{"text":"unless my $href = $$network{'nat'}"}],[7699,{"text":"if $err_shown"}],[7726,{"text":"unless keys_eq($href, $href2)"}],[7724,{"text":"if ($has_non_hidden{$nat_tag})"}],[7734,{"text":"if keys_eq($href, $href2)"}],[7742,{"text":"if $nat_tag2 eq $nat_tag"}],[7746,{"text":"if $all_hidden{$href2}"}],[7750,{"text":"if ($$href2{$nat_tag2})"}],[7758,{"text":"unless ($$href2{$nat_tag2})"}],[7749,{"text":"if ($has_non_hidden{$nat_tag2}) { }"}],[7738,{"text":"if (grep {$has_non_hidden{$_};} %$href) { }"}],[7778,{"text":"if ($common_size eq keys %$href) { }"}],[7778,{"text":"elsif ($common_size eq keys %$href2) { }"}],[7720,{"text":"if (my $aref = $nat_tags2multi{$nat_tag})"}],[7802,{"text":"if @$aref > 1"}],[7804,{"text":"if keys %$href > 1"}],[7810,{"text":"if $$network{'is_aggregate'}"}],[7811,{"text":"if $$network{'nat_domain'}"}],[7837,{"text":"unless my $aref = $nat_tags2multi{$nat_tag}"}],[7839,{"text":"if $$href{$_}"}],[7840,{"text":"unless @tags >= 2"}],[7834,{"text":"if (@$nat_tags >= 2)"}],[7857,{"text":"if ($nat_definitions{$nat_tag}) { }"}],[7885,{"text":"unless (match_ip($obj_ip, $ip, $mask))"}],[7880,{"text":"if ($nat_network = $$network{'nat'}{$nat_tag} and $$nat_network{'dynamic'}) { }"}],[7877,{"text":"if ($$obj{'nat'})"}],[7901,{"text":"unless $nat_definitions{$name} eq 'used'"}],[7908,{"text":"unless my $nat = $$network{'nat'}"}],[7911,{"text":"unless $$nat_info{'dynamic'}"}],[7916,{"text":"if $intf_nat and $$intf_nat{$nat_tag}"}],[7919,{"text":"unless $$router{'need_protect'}"}],[7921,{"text":"unless my $bind = $$bind_intf{'bind_nat'}"}],[7922,{"text":"unless grep {$_ eq $nat_tag;} @$bind"}],[7946,{"text":"if $partitions{$domain}"}],[7952,{"text":"if $out_domain eq $domain"}],[7968,{"text":"unless my $href = $$network{'nat'}"}],[7998,{"text":"unless $$router{'managed'} or $$router{'semi_managed'}"}],[8002,{"text":"if $$router{'managed'} or $$router{'routing_only'}"}],[8018,{"text":"if $$tunnel{'disabled'}"}],[8021,{"text":"if $seen{$real_intf}++"}],[8022,{"text":"unless $$real_intf{'router'}{'managed'}"}],[8024,{"text":"unless keys %$tunnel_set"}],[8030,{"text":"if ref $hardware"}],[8046,{"text":"if $$no_nat_set{$tag}"}],[8044,{"text":"if (my $href = $$network{'nat'} and $no_nat_set)"}],[8062,{"text":"if $$network{'is_aggregate'} or $$subnet{'is_aggregate'}"}],[8077,{"text":"if (grep {$_ eq $nat_tag2;} @$nat_tags and $$object{'ip'} == $$subnet{'ip'} and $$subnet{'mask'} == 4294967295)"}],[8074,{"text":"if (my $nat_tags = $$object{'bind_nat'} and my($nat_tag2) = $$subnet{'name'} =~ /^nat:(.*)\\(/)"}],[8066,{"text":"if (match_ip($ip1, $sub_ip, $sub_mask) or $ip2 and match_ip($ip2, $sub_ip, $sub_mask) || $ip1 <= $sub_ip && $sub_ip <= $ip2)"}],[8090,{"text":"if $ip =~ /^(?:unnumbered|negotiated|tunnel|short|bridged)$/"}],[8094,{"text":"if (my $ip = $$host{'ip'}) { }"}],[8094,{"text":"elsif (my $range = $$host{'range'}) { }"}],[8123,{"text":"if (grep {$_ eq $nat_tag1;} @$nat_tags)"}],[8122,{"text":"if (my $nat_tags = $$all_intf{'bind_nat'})"}],[8162,{"text":"if $seen{$no_nat_set}++"}],[8171,{"text":"if $$network{'ip'} =~ /^(?:unnumbered|tunnel)$/"}],[8176,{"text":"if $$no_nat_set{$tag}"}],[8174,{"text":"if (my $href = $$network{'nat'})"}],[8184,{"text":"unless my $other = $$network{'up'}"}],[8185,{"text":"if get_nat_network($other, $no_nat_set)->{'hidden'}"}],[8183,{"text":"if ($$nat_network{'hidden'})"}],[8199,{"text":"if (my $other_net = $mask_ip_hash{$mask}{$ip}) { }"}],[8218,{"text":"unless @mask_list"}],[8231,{"text":"unless my $bignet = $mask_ip_hash{$m}{$i}"}],[8240,{"text":"unless $$subnet{'networks'}"}],[8242,{"text":"$$subnet{'is_aggregate'} ? :"}],[8253,{"text":"if ($other ne $bignet)"}],[8252,{"text":"if (my $other = $$subnet{'up'}) { }"}],[8234,{"text":"if ($interface eq $first_intf) { }"}],[8281,{"text":"if (my $other = $$subnet{'up'})"}],[8280,{"text":"if ($interface ne $first_intf)"}],[8304,{"text":"unless $network"}],[8305,{"text":"if (my $max_net = $max_up_net{$network})"}],[8309,{"text":"unless ($$network{'is_aggregate'})"}],[8308,{"text":"if (my $max_net = &$set_max_net($$network{'up'}))"}],[8316,{"text":"if ($$network{'is_aggregate'})"}],[8328,{"text":"unless my $max = $max_up_net{$network}"}],[8339,{"text":"if (my $aref = $net2zone_nat_tags{$network})"}],[8355,{"text":"unless keys %$nat == keys %$up_nat"}],[8357,{"text":"unless my $up_nat_info = $$up_nat{$tag}"}],[8360,{"text":"unless $$up_nat_info{'hidden'}"}],[8366,{"text":"if $$up_nat_info{'hidden'}"}],[8368,{"text":"unless match_ip($$up_nat_info{'ip'}, $ip, $mask)"}],[8369,{"text":"unless $$up_nat_info{'mask'} >= $mask"}],[8359,{"text":"if ($$nat_info{'hidden'}) { }"}],[8372,{"text":"unless ($$up{'is_aggregate'})"}],[8377,{"text":"if ($max_routing)"}],[8419,{"text":"if $$network{'ip'} =~ /^(?:unnumbered|tunnel)$/"}],[8421,{"text":"if $$nat_network{'hidden'}"}],[8430,{"text":"if ($$old_net{'zone'} eq $$network{'zone'}) { }"}],[8448,{"text":"unless nat_to_loopback_ok($old_net, $nat_network)"}],[8451,{"text":"unless nat_to_loopback_ok($network, $nat_old_net)"}],[8429,{"text":"if ($$old_net{'is_aggregate'} or $$network{'is_aggregate'}) { }"}],[8429,{"text":"elsif ($$nat_old_net{'dynamic'} and $$nat_network{'dynamic'}) { }"}],[8429,{"text":"elsif ($$old_net{'loopback'} and $$nat_network{'dynamic'}) { }"}],[8429,{"text":"elsif ($$nat_old_net{'dynamic'} and $$network{'loopback'}) { }"}],[8429,{"text":"elsif (($$network{'bridged'} || 0) eq ($$old_net{'bridged'} || 1)) { }"}],[8461,{"text":"if ($error) { }"}],[8426,{"text":"if (my $old_net = $mask_ip_hash{$mask}{$ip}) { }"}],[8496,{"text":"unless @mask_list"}],[8511,{"text":"unless my $bignet = $mask_ip_hash{$m}{$i}"}],[8523,{"text":"if ($$subnet{'has_other_subnet'})"}],[8522,{"text":"if ($$bignet{'zone'} eq $$subnet{'zone'}) { }"}],[8535,{"text":"if ($seen{$nat_bignet}{$nat_subnet})"}],[8566,{"text":"if ($$Netspoc::Compiler::Pass1::config{'check_subnets'} eq 'warn') { }"}],[8545,{"text":"unless ($$bignet{'is_aggregate'} or $$subnet{'is_aggregate'} or $$bignet{'has_subnets'} or $$nat_subnet{'subnet_of'} and $$nat_subnet{'subnet_of'} eq $bignet or $$nat_subnet{'is_layer3'})"}],[8540,{"text":"if ($$Netspoc::Compiler::Pass1::config{'check_subnets'})"}],[8590,{"text":"unless my $max = $$network{'max_routing_net'}"}],[8591,{"text":"unless ($$max{'has_other_subnet'})"}],[8602,{"text":"unless ($$up{'is_aggregate'})"}],[8598,{"text":"if ($$up{'has_other_subnet'}) { }"}],[8608,{"text":"if $max_secondary"}],[8644,{"text":"unless $$network{'crosslink'}"}],[8645,{"text":"if $$network{'disabled'}"}],[8647,{"text":"if $out_intf eq $in_intf"}],[8649,{"text":"if $cluster{$router2}"}],[8657,{"text":"if $seen{$router}"}],[8695,{"text":"unless $$network{'crosslink'}"}],[8696,{"text":"if $$network{'disabled'}"}],[8705,{"text":"if $$interface{'main_interface'}"}],[8710,{"text":"unless ($$router{'managed'})"}],[8717,{"text":"unless 1 == grep({not $$_{'main_interface'};} @{$$hardware{'interfaces'};})"}],[8724,{"text":"unless my $strength = $crosslink_strength{$managed}"}],[8728,{"text":"if ($$router{'need_protect'})"}],[8732,{"text":"if ($$hardware{'need_out_acl'})"}],[8747,{"text":"if ($weakest == $crosslink_strength{'local'} and $strength2intf{$crosslink_strength{'secondary'}})"}],[8741,{"text":"if (my($weakest) = (sort numerically keys %strength2intf))"}],[8759,{"text":"unless not $out_acl_count or $out_acl_count == @{$$network{'interfaces'};}"}],[8762,{"text":"unless equal(map({$$_{'zone'};} @no_in_acl_intf))"}],[8797,{"text":"unless $$router0{'managed'} =~ /^local/"}],[8798,{"text":"if $$router0{'local_mark'}"}],[8814,{"text":"if ($mask >= $m)"}],[8812,{"text":"unless ($$bignet{'is_aggregate'})"}],[8838,{"text":"unless $k eq $k0"}],[8829,{"text":"if ($filter_only ne $$router{'filter_only'})"}],[8854,{"text":"$zone_cluster ? :"}],[8855,{"text":"if $$zone{'disabled'}"}],[8856,{"text":"if $$zone{'local_mark'}"}],[8871,{"text":"if ($mask > $m)"}],[8867,{"text":"if ($mask >= $m and match_ip($ip, $i, $m))"}],[8884,{"text":"if $out_intf eq $in_intf"}],[8886,{"text":"unless my $managed = $$router2{'managed'}"}],[8887,{"text":"unless $managed =~ /^local/"}],[8888,{"text":"if $$router2{'local_mark'}"}],[8901,{"text":"if $matched{\"$i/$m\"}"}],[8926,{"text":"if (my $subnetworks = $$network{'networks'})"}],[8931,{"text":"if $$nat_network{'hidden'}"}],[8932,{"text":"if $$nat_network{'ip'} eq 'unnumbered'"}],[8936,{"text":"unless $mask > $m and match_ip($ip, $i, $m)"}],[8944,{"text":"if $$obj{'filter_at'}{$mark}"}],[8972,{"text":"unless my $group = $$interface{'reroute_permit'}"}],[8979,{"text":"if (not zone_eq($net_zone, $zone)) { }"}],[8977,{"text":"if (is_network($obj)) { }"}],[9012,{"text":"unless my $managed_hosts = $$network{'managed_hosts'}"}],[9024,{"text":"if $$network{'mask'} > $mask"}],[9025,{"text":"unless my $managed_hosts = $$network{'managed_hosts'}"}],[9010,{"text":"if (@$networks) { }"}],[9062,{"text":"if $$zone{'is_tunnel'}"}],[9063,{"text":"if $$zone{'has_id_hosts'}"}],[9065,{"text":"if ($$zone{'disabled'}) { }"}],[9094,{"text":"unless my $subnets = $$network{'networks'}"}],[9108,{"text":"unless match_ip($i, $ip, $mask)"}],[9112,{"text":"if $$up{'mask'} >= $mask"}],[9111,{"text":"if (my $up = $$obj{'up'})"}],[9119,{"text":"$$obj{'is_aggregate'} ? :"}],[9128,{"text":"unless match_ip($ip, $i, $m)"}],[9139,{"text":"if $owner = $$up{'owner'}"}],[9143,{"text":"if $owner"}],[9169,{"text":"if ($type ne 'network')"}],[9177,{"text":"unless ($network)"}],[9183,{"text":"if ($$network{'disabled'})"}],[9196,{"text":"unless $private1 eq $private2"}],[9204,{"text":"$cluster ? :"}],[9205,{"text":"if (my $other = $$zone2{'ipmask2aggregate'}{$key})"}],[9212,{"text":"if ($cluster)"}],[9225,{"text":"$cluster ? :"}],[9224,{"text":"if (my $v = delete $$aggregate{$attr})"}],[9222,{"text":"if ($mask == 0)"}],[9261,{"text":"if $$zone{'ipmask2aggregate'}{$key}"}],[9275,{"text":"if ($implicit) { }"}],[9301,{"text":"if $$_{'mask'} == $mask"}],[9300,{"text":"$cluster ? :"}],[9305,{"text":"if @networks > 1"}],[9313,{"text":"if $cluster"}],[9321,{"text":"if $prefix != 0"}],[9329,{"text":"if (my $private = $$zone{'private'})"}],[9333,{"text":"if $cluster"}],[9300,{"text":"if (my(@networks) = grep({$$_{'ip'} == $ip if $$_{'mask'} == $mask;} map({@{$$_{'networks'};};} $cluster ? @$cluster : $zone))) { }"}],[9294,{"text":"unless ($$zone{'ipmask2aggregate'}{$key})"}],[9336,{"text":"if ($cluster) { }"}],[9350,{"text":"unless $$_{'ipmask2aggregate'}{$key}"}],[9363,{"text":"if ($$network{'zone'})"}],[9369,{"text":"unless ($$network{'ip'} =~ /^(?:unnumbered|tunnel)$/)"}],[9376,{"text":"if $$network{'ip'} eq 'tunnel'"}],[9377,{"text":"if $$network{'has_id_hosts'}"}],[9383,{"text":"if ($private1 ne $private2)"}],[9381,{"text":"if ($$zone{'private'})"}],[9400,{"text":"if $interface eq $in_interface"}],[9411,{"text":"if $$router{'zone'}"}],[9417,{"text":"if $out_interface eq $interface"}],[9418,{"text":"if $$out_interface{'disabled'}"}],[9404,{"text":"if ($$router{'managed'} or $$router{'semi_managed'}) { }"}],[9436,{"text":"unless $$zone{'is_tunnel'}"}],[9443,{"text":"if $interface eq $in_interface"}],[9444,{"text":"if $$interface{'main_interface'}"}],[9446,{"text":"if $$router{'managed'}"}],[9447,{"text":"if $$router{'active_path'}"}],[9452,{"text":"if $out_interface eq $interface"}],[9454,{"text":"if $$next{'zone_cluster'}"}],[9455,{"text":"if $$out_interface{'main_interface'}"}],[9459,{"text":"unless $private1 eq $private2"}],[9494,{"text":"if $$obj{'areas'}{$area}"}],[9502,{"text":"unless ($$obj{'is_tunnel'})"}],[9501,{"text":"if ($is_zone) { }"}],[9501,{"text":"elsif ($$obj{'managed'} or $$obj{'routing_only'}) { }"}],[9516,{"text":"if $interface eq $in_interface"}],[9519,{"text":"if $$interface{'main_interface'}"}],[9526,{"text":"if ($$is_inclusive{$area} xor not $is_zone)"}],[9538,{"text":"$is_zone ? :"}],[9537,{"text":"if ($$interface{'is_border'})"}],[9522,{"text":"if ($$lookup{$interface}) { }"}],[9522,{"text":"elsif ($auto_border) { }"}],[9547,{"text":"$is_zone ? :"}],[9548,{"text":"if (my $err_path = set_area1($next, $area, $interface))"}],[9563,{"text":"unless my $attributes = $$area{'router_attributes'}"}],[9564,{"text":"if $$attributes{'owner'} and keys %$attributes == 1"}],[9570,{"text":"if $key eq 'owner'"}],[9575,{"text":"if ($r_val eq $val or ref $r_val eq 'ARRAY' and ref $val eq 'ARRAY' and aref_eq($r_val, $val))"}],[9574,{"text":"if (my $r_val = $$router{$key}) { }"}],[9605,{"text":"if defined $$nat1{$attr} xor defined $$nat2{$attr}"}],[9606,{"text":"unless defined $$nat1{$attr}"}],[9607,{"text":"if $$nat1{$attr} ne $$nat2{$attr}"}],[9620,{"text":"if (nat_equal($nat1, $nat2))"}],[9626,{"text":"if ($$nat2{'identity'})"}],[9637,{"text":"unless my $hash = $$area{'nat'}"}],[9647,{"text":"if (my $z_nat = $$zone{'nat'}{$nat_tag})"}],[9685,{"text":"is_network($net_or_zone) ? :"}],[9698,{"text":"unless $mask2 > $mask1"}],[9699,{"text":"unless match_ip($ip2, $ip1, $mask1)"}],[9729,{"text":"unless ($$nat{'dynamic'})"}],[9702,{"text":"if (my $n_nat = $$network{'nat'}{$nat_tag}) { }"}],[9702,{"text":"elsif ($$network{'ip'} eq 'bridged' and not $$nat{'identity'}) { }"}],[9753,{"text":"$$zone{'nat'} ? :"}],[9772,{"text":"unless my $href = $$network{'nat'}"}],[9773,{"text":"if ($$network{'is_aggregate'})"}],[9779,{"text":"unless $$nat_network{'identity'}"}],[9781,{"text":"unless $$nat_network{'is_used'}"}],[9801,{"text":"if $$network{'zone'}"}],[9813,{"text":"if $$network{'loopback'} and @{$$zone{'networks'};} == 1"}],[9816,{"text":"if (@{$$zone{'networks'};})"}],[9821,{"text":"if (my $unmanaged = $$zone{'unmanaged_routers'})"}],[9826,{"text":"if ($$zone{'private'} and $$zone{'private'} eq 'public')"}],[9843,{"text":"if $$zone{'zone_cluster'}"}],[9850,{"text":"if 1 >= @$cluster"}],[9868,{"text":"unless my $border = $$area{$attribute}"}],[9873,{"text":"if ($attribute eq 'inclusive_border')"}],[9895,{"text":"if $in_interface"}],[9898,{"text":"$$is_inclusive{$area} ? :"}],[9899,{"text":"$$err_obj{'areas'}{$area} ? :"}],[9892,{"text":"if (my $err_path = set_area1($obj, $area, $in_interface))"}],[9931,{"text":"unless my $borders = $$area{$attr}"}],[9933,{"text":"if $start"}],[9937,{"text":"$attr eq 'border' ? :"}],[9945,{"text":"if $err"}],[9949,{"text":"unless my $borders = $$area{$attr}"}],[9950,{"text":"unless my(@bad_intf) = grep({$$lookup{$_} ne 'found';} @$borders)"}],[9918,{"text":"if (my $network = $$area{'anchor'}) { }"}],[9962,{"text":"unless @{$$area{'zones'};}"}],[9978,{"text":"unless $$zone{'areas'}"}],[9982,{"text":"unless @{$$a{'zones'};} <=> @{$$b{'zones'};}"}],[9984,{"text":"unless my(@areas) = (sort {$$a{'name'} cmp $$b{'name'} unless @{$$a{'zones'};} <=> @{$$b{'zones'};};} values %{$$zone{'areas'};})"}],[9992,{"text":"if $seen{$small}{$next}"}],[9997,{"text":"unless ($$zone{'areas'}{$next})"}],[10006,{"text":"if (@{$$small{'zones'};} == @{$$next{'zones'};}) { }"}],[10005,{"text":"if ($ok)"}],[10044,{"text":"unless @{$$a{'zones'};} <=> @{$$b{'zones'};}"}],[10057,{"text":"if $next eq $big"}],[10068,{"text":"unless my $big = $$area{'subset_of'}"}],[10072,{"text":"if $$router{'areas'}{$big}"}],[10123,{"text":"unless my $related = $$interface{'redundancy_interfaces'}"}],[10127,{"text":"unless $$router{'managed'} or $$router{'semi_managed'}"}],[10129,{"text":"if $seen{$related}"}],[10135,{"text":"unless ($$v{'router'}{'loop'})"}],[10141,{"text":"if $err"}],[10147,{"text":"unless equal(map({$$_{'loop'};} @$related))"}],[10168,{"text":"unless @$elements"}],[10175,{"text":"if $$interface{'disabled'}"}],[10183,{"text":"unless ($loop)"}],[10195,{"text":"unless ($cluster eq $prev_cluster)"}],[10194,{"text":"if ($prev_cluster) { }"}],[10213,{"text":"if (1 == @$elements)"}],[10211,{"text":"if ($deleted)"}],[10219,{"text":"if ($invalid)"}],[10226,{"text":"unless $$_{'router'}{'managed'}"}],[10226,{"text":"if grep {$$_{'router'}{'routing_only'} unless $$_{'router'}{'managed'};} @$elements"}],[10231,{"text":"unless $$_{'zone_cluster'}"}],[10231,{"text":"unless equal(map({$_ unless $$_{'zone_cluster'};} map({$$_{'zone'};} @$elements)))"}],[10248,{"text":"if $zone2 eq $zone"}],[10250,{"text":"if $cluster2 eq $zone_cluster"}],[10249,{"text":"if (my $cluster2 = $$zone2{'zone_cluster'})"}],[10253,{"text":"if ($loop eq $loop2)"}],[10252,{"text":"if (my $loop2 = $$zone2{'loop'})"}],[10298,{"text":"if $$obj{'reachable_part'}{$mark}"}],[10299,{"text":"if $$obj{'active_path'}"}],[10313,{"text":"if $interface eq $in_interface"}],[10314,{"text":"if $$interface{'main_interface'}"}],[10318,{"text":"$is_zone ? :"}],[10324,{"text":"unless $$interface{'loop'}"}],[10325,{"text":"$is_zone ? :"}],[10317,{"text":"if (my $reached = $$lookup{$interface}) { }"}],[10366,{"text":"if $mark eq 'none'"}],[10356,{"text":"if ($$reached{'zone'} eq $$reached{'router'} and $$reached{'zone'} ne 'none') { }"}],[10380,{"text":"unless aref_delete($$interface{'path_restrict'}, $restrict)"}],[10385,{"text":"unless (@{$$interface{'path_restrict'};})"}],[10376,{"text":"if (not $has_interior) { }"}],[10422,{"text":"if $$reached{$direction}"}],[10426,{"text":"unless ($$obj{'loop'})"}],[10441,{"text":"if ($mark > $start_mark + 1)"}],[10474,{"text":"if ($$obj{'active_path'})"}],[10494,{"text":"if $interface eq $to_zone1"}],[10495,{"text":"if $$interface{'loop'}"}],[10498,{"text":"is_router($obj) ? :"}],[10503,{"text":"if $max > $max_distance"}],[10525,{"text":"if ($$loop{'distance'} < $$loop2{'distance'}) { }"}],[10522,{"text":"if ($loop ne $loop2)"}],[10511,{"text":"if ($obj eq $loop_obj) { }"}],[10511,{"text":"elsif (my $loop2 = $$obj{'loop'}) { }"}],[10506,{"text":"if ($loop) { }"}],[10548,{"text":"if ($$obj{'loop'} and $$obj{'loop'}{'exit'} ne $obj) { }"}],[10578,{"text":"if ($$exit{'loop'} eq $loop) { }"}],[10569,{"text":"if (my $marker = $$loop{'cluster_exit'}) { }"}],[10599,{"text":"unless @zones"}],[10600,{"text":"unless $$_{'managed'}"}],[10605,{"text":"if $$obj{'to_zone1'} or $$obj{'loop'}"}],[10626,{"text":"unless $$_{'managed'}"}],[10628,{"text":"unless my $loop = $$obj{'loop'}"}],[10648,{"text":"if (my $loop = $$interface{'loop'})"}],[10709,{"text":"if ($$obj{'path_restrict'} or $$obj{'reachable_at'}) { }"}],[10700,{"text":"if ($$router{'managed'} or $$router{'semi_managed'}) { }"}],[10723,{"text":"if ($$obj{'managed'} or $$obj{'semi_managed'}) { }"}],[10692,{"text":"if ($type eq 'Network') { }"}],[10692,{"text":"elsif ($type eq 'Subnet') { }"}],[10692,{"text":"elsif ($type eq 'Interface') { }"}],[10692,{"text":"elsif ($type eq 'Router') { }"}],[10692,{"text":"elsif ($type eq 'Zone') { }"}],[10692,{"text":"elsif ($type eq 'Host') { }"}],[10778,{"text":"if ($$restrict{'active_path'})"}],[10776,{"text":"if ($pathrestriction)"}],[10800,{"text":"unless ($$has_mark{$mark})"}],[10818,{"text":"if (intersect($reachable, $reachable2))"}],[10815,{"text":"if (my $reachable2 = $$reachable_at2{$$end_intf{'router'}})"}],[10814,{"text":"if (my $reachable_at2 = $$end_intf{'reachable_at'})"}],[10797,{"text":"if ($$other{'loop'}) { }"}],[10793,{"text":"if (my $reachable = $$reachable_at{$obj})"}],[10791,{"text":"if ($reachable_at and $end_intf and $end_intf ne $in_intf)"}],[10830,{"text":"if ($$obj{'active_path'})"}],[10837,{"text":"if ($obj eq $end)"}],[10850,{"text":"$end_intf ? :"}],[10853,{"text":"unless ($$has_mark{$mark})"}],[10849,{"text":"if (my $reachable = $$reachable_at{$obj})"}],[10848,{"text":"if ($reachable_at)"}],[10868,{"text":"if ($pathrestriction)"}],[10876,{"text":"is_router($obj) ? :"}],[10883,{"text":"unless my $allowed = $$navi{$$obj{'loop'}}"}],[10888,{"text":"if $interface eq $in_intf"}],[10889,{"text":"if $$interface{'main_interface'}"}],[10890,{"text":"unless my $loop = $$interface{'loop'}"}],[10891,{"text":"unless $$allowed{$loop}"}],[10897,{"text":"if (cluster_path_mark1($next, $interface, $end, $end_intf, $path_tuples, $loop_leave, $navi))"}],[10915,{"text":"if ($pathrestriction)"}],[10944,{"text":"if ($navi = $$from{'navi'}{$to} and scalar keys %$navi)"}],[10959,{"text":"if $from eq $to"}],[10958,{"text":"if ($from_loop eq $to_loop) { }"}],[10958,{"text":"elsif ($$from_loop{'distance'} >= $$to_loop{'distance'}) { }"}],[11019,{"text":"if $$from_in{'path'}{$to_store}"}],[11031,{"text":"if (is_interface($from_store) and $$from_store{'router'} eq $from || $$from_store{'zone'} eq $from) { }"}],[11031,{"text":"elsif ($from_in and $$from_in{'path_restrict'} || $$from_in{'reachable_at'}) { }"}],[11046,{"text":"if (is_interface($to_store) and $$to_store{'router'} eq $to || $$to_store{'zone'} eq $to) { }"}],[11046,{"text":"elsif ($to_out and $$to_out{'path_restrict'} || $$to_out{'reachable_at'}) { }"}],[11065,{"text":"if ($from_in and not $$from_in{'loop'} and my $restrictions = $$from_in{'path_restrict'} and not $start_intf)"}],[11084,{"text":"if ($$restrict{'active_path'})"}],[11076,{"text":"if ($to_out and not $$to_out{'loop'} and my $restrictions = $$to_out{'path_restrict'} and not $end_intf)"}],[11096,{"text":"$end_intf ? :"}],[11100,{"text":"if ($start_intf and $$start_intf{'zone'} eq $end_node)"}],[11107,{"text":"unless my $reachable_at = $$intf{'reachable_at'}"}],[11114,{"text":"$start_intf ? :"}],[11115,{"text":"unless my $reachable = $$reachable_at{$start_node}"}],[11123,{"text":"if ($start_intf) { }"}],[11120,{"text":"unless ($$has_mark{$mark})"}],[11136,{"text":"if ($success and $start_intf)"}],[11146,{"text":"unless $intf"}],[11149,{"text":"if $interface eq $intf"}],[11147,{"text":"if (my $interfaces = $$intf{'redundancy_interfaces'})"}],[11167,{"text":"unless $intf"}],[11171,{"text":"unless $router eq $from or $router eq $to"}],[11174,{"text":"unless my $removed = delete $$intf{'path_restrict'}"}],[11179,{"text":"if $interface eq $intf"}],[11189,{"text":"if (intersect($orig, $removed)) { }"}],[11184,{"text":"if ($orig) { }"}],[11208,{"text":"unless $success"}],[11221,{"text":"if ($$start_store{'loop_enter'}{$end_store})"}],[11232,{"text":"unless my $navi = cluster_navigation($from, $to)"}],[11237,{"text":"is_router($from) ? :"}],[11238,{"text":"unless my $allowed = $$navi{$$from{'loop'}}"}],[11244,{"text":"if $$interface{'main_interface'}"}],[11246,{"text":"unless $loop"}],[11249,{"text":"unless ($$allowed{$loop})"}],[11253,{"text":"if $$interface{'loopback'} and $get_next eq 'zone'"}],[11261,{"text":"if (cluster_path_mark1($next, $interface, $to, $end_intf, $path_tuples, $loop_leave, $navi))"}],[11276,{"text":"unless $success"}],[11281,{"text":"unless my $in_intf = $key2obj{$in_intf_ref}"}],[11285,{"text":"unless my $out_intf = $key2obj{$out_intf_ref}"}],[11311,{"text":"unless $intf"}],[11312,{"text":"unless $$intf{'saved_path_restrict'}"}],[11315,{"text":"if (my $orig = delete $$interface{'saved_path_restrict'}) { }"}],[11326,{"text":"if (my $orig = delete $$start_intf{'saved_reachable_at_zone'})"}],[11325,{"text":"if ($start_intf)"}],[11334,{"text":"unless $intf"}],[11337,{"text":"if $interface eq $intf"}],[11335,{"text":"if (my $interfaces = $$intf{'redundancy_interfaces'})"}],[11345,{"text":"if ($intf and not $$intf{'loop'} and my $restrictions = $$intf{'path_restrict'})"}],[11357,{"text":"if ($success)"}],[11392,{"text":"$$from_store{'loop'} ? :"}],[11400,{"text":"if ($from eq $to)"}],[11408,{"text":"if ($from_loop and $to_loop and $$from_loop{'cluster_exit'} eq $$to_loop{'cluster_exit'})"}],[11420,{"text":"if $$from_in{'path'}{$to_store}"}],[11429,{"text":"unless $from_loop"}],[11436,{"text":"unless $from_out"}],[11439,{"text":"unless cluster_path_mark($from, $exit, $from_in, $from_out, $from_store, $to_store)"}],[11426,{"text":"unless ($from_out)"}],[11463,{"text":"unless $to_loop"}],[11470,{"text":"unless $to_in"}],[11473,{"text":"unless cluster_path_mark($entry, $to, $to_in, $to_out, $from_store, $to_store)"}],[11460,{"text":"unless ($to_in)"}],[11417,{"text":"if ($$from{'distance'} >= $$to{'distance'}) { }"}],[11514,{"text":"if (is_router($loop_entry) or is_interface($loop_entry) and $$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'} xor $call_at_zone)"}],[11543,{"text":"if $at_router xor $call_at_zone"}],[11552,{"text":"if ($exit_at_router xor $call_at_zone)"}],[11572,{"text":"unless $rule"}],[11586,{"text":"$$from_store{'loop'} ? :"}],[11600,{"text":"unless $from and $to"}],[11601,{"text":"if $from eq $to"}],[11605,{"text":"unless (path_mark($from, $to, $from_store, $to_store))"}],[11604,{"text":"unless (exists $$path_store{'path'}{$to_store})"}],[11641,{"text":"unless ($loop_out)"}],[11630,{"text":"if ($$from{'loop'} and $$from_store{'loop_exit'} and my $loop_exit = $$from_store{'loop_exit'}{$to_store}) { }"}],[11671,{"text":"unless ($loop_out)"}],[11685,{"text":"if ($call_it)"}],[11690,{"text":"unless ($out)"}],[11659,{"text":"if ($in and $$in{'loop_entry'} and my $loop_entry = $$in{'loop_entry'}{$to_store}) { }"}],[11717,{"text":"if $interface eq $in_intf"}],[11718,{"text":"if $$interface{'zone'}"}],[11719,{"text":"if $$interface{'orig_main'}"}],[11721,{"text":"if $active_path{$router}"}],[11728,{"text":"if $out_intf eq $interface"}],[11729,{"text":"if $$out_intf{'orig_main'}"}],[11754,{"text":"is_autointerface($src) ? :"}],[11756,{"text":"is_autointerface($dst) ? :"}],[11763,{"text":"if $from eq $to"}],[11765,{"text":"unless (path_mark($from, $to, $from_store, $to_store))"}],[11764,{"text":"unless ($$from_store{'path'}{$to_store})"}],[11778,{"text":"if ($$from_store{'loop_exit'} and my $exit = $$from_store{'loop_exit'}{$to_store}) { }"}],[11794,{"text":"unless ($border2obj2auto{$border})"}],[11791,{"text":"unless (is_router($from))"}],[11811,{"text":"if (my $orig = $$interface{'orig_main'}) { }"}],[11811,{"text":"elsif (my $layer3_intf = $$interface{'layer3_interface'}) { }"}],[11822,{"text":"if ($bridged_count > 1)"}],[11827,{"text":"$managed ? :"}],[11840,{"text":"unless my $isakmp = $isakmp{$name}"}],[11839,{"text":"if ($type eq 'isakmp') { }"}],[11860,{"text":"unless my $ipsec = $ipsec{$name2}"}],[11859,{"text":"if ($type eq 'ipsec') { }"}],[11881,{"text":"if $use_ah"}],[11883,{"text":"if $use_esp"}],[11880,{"text":"if (not $nat_traversal or $nat_traversal ne 'on')"}],[11892,{"text":"if ($nat_traversal)"}],[11919,{"text":"unless $real_hubs and @$real_hubs"}],[11922,{"text":"unless $real_spokes and @$real_spokes"}],[11931,{"text":"if $crypto_name eq $name"}],[11939,{"text":"unless $$router{'managed'}"}],[11943,{"text":"if $$router{'model'}{'do_auth'} and not $need_id"}],[11949,{"text":"if (my $orig_router = $$router{'orig_router'})"}],[11952,{"text":"unless $hub_seen{$router}++"}],[11973,{"text":"if (my $orig_router = $$router{'orig_router'})"}],[11992,{"text":"if $$real_hub{'bind_nat'}"}],[12002,{"text":"if (my $aref = $$router{'orig_interfaces'})"}],[12008,{"text":"unless ($$model{'do_auth'} or $$model{'can_dyn_crypto'})"}],[12006,{"text":"if ($$real_spoke{'ip'} =~ /^(?:negotiated|short|unnumbered)$/)"}],[12017,{"text":"unless $s_p and $s_p eq $private or $h_p and $h_p eq $private"}],[12026,{"text":"if $$real_spoke{'private'}"}],[12030,{"text":"if $$real_hub{'private'}"}],[12014,{"text":"if ($private) { }"}],[12042,{"text":"if ($$network{'has_id_hosts'}) { }"}],[12042,{"text":"elsif ($$interface{'ip'} ne 'tunnel') { }"}],[12049,{"text":"if ($has_id_hosts and @other)"}],[12056,{"text":"if ($$router{'managed'} and $$crypto{'detailed_crypto_acl'})"}],[12065,{"text":"if (@hubs > 1)"}],[12091,{"text":"unless 1 == @{$$zone{'interfaces'};}"}],[12099,{"text":"unless 1 == @{$$network{'interfaces'};}"}],[12089,{"text":"if ($managed) { }"}],[12133,{"text":"unless my $attributes = $$obj{'radius_attributes'}"}],[12136,{"text":"unless $spec"}],[12139,{"text":"unless $value =~ /^(?:tunnelall|tunnelspecified)$/"}],[12148,{"text":"unless $$obj{'range'}"}],[12153,{"text":"if grep {$$_{'ip'};} @{$$obj{'hosts'};}"}],[12147,{"text":"if (is_host($obj)) { }"}],[12147,{"text":"elsif (is_network($obj)) { }"}],[12137,{"text":"if ($key eq 'split-tunnel-policy') { }"}],[12137,{"text":"elsif ($key eq 'trust-point') { }"}],[12166,{"text":"if $id =~ /@/"}],[12172,{"text":"if &$has_attr($host)"}],[12173,{"text":"if &$has_attr($$host{'network'})"}],[12176,{"text":"if &$has_attr($$peer{'router'})"}],[12179,{"text":"if ($missing)"}],[12190,{"text":"unless $$isakmp{'trust_point'}"}],[12189,{"text":"if ($$isakmp{'authentication'} eq 'rsasig')"}],[12212,{"text":"if $$tunnel{'disabled'}"}],[12214,{"text":"if $$tunnel_intf{'is_hub'}"}],[12224,{"text":"if $interface eq $tunnel_intf"}],[12226,{"text":"if ($managed and $$router{'model'}{'crypto'} eq 'EZVPN')"}],[12225,{"text":"if ($$interface{'ip'} eq 'tunnel')"}],[12234,{"text":"if (my $intf2 = $id2interface{$id})"}],[12233,{"text":"if (my $id = $$interface{'id'})"}],[12232,{"text":"if ($$interface{'spoke'})"}],[12246,{"text":"if $managed"}],[12253,{"text":"if @all_networks > 1"}],[12266,{"text":"if (my $other = $$peer{'id_rules'}{$id})"}],[12244,{"text":"if ($$network{'has_id_hosts'}) { }"}],[12299,{"text":"if $has_id_hosts and $has_other_network"}],[12306,{"text":"unless $has_id_hosts or $has_other_network"}],[12317,{"text":"unless $need_id"}],[12326,{"text":"unless $do_auth"}],[12316,{"text":"if ($$tunnel_intf{'id'}) { }"}],[12316,{"text":"elsif ($encrypted[0]{'has_id_hosts'}) { }"}],[12316,{"text":"elsif ($need_id) { }"}],[12348,{"text":"if (is_host($obj))"}],[12342,{"text":"if (grep {$$_{'router'}{'model'}{'crypto'} eq 'ASA_VPN';} @$peers)"}],[12354,{"text":"if ($managed and $$router{'model'}{'crypto'} eq 'ASA')"}],[12376,{"text":"if $$intf1{'ip'} eq 'negotiated'"}],[12362,{"text":"if ($real_spoke and not $$real_spoke{'ip'} =~ /^(?:short|unnumbered)$/)"}],[12394,{"text":"unless my $crypto = $$model{'crypto'}"}],[12395,{"text":"unless $crypto eq 'ASA_VPN'"}],[12398,{"text":"unless @id_rules_interfaces >= 2"}],[12404,{"text":"if (my $src2 = $id2src{$id}) { }"}],[12425,{"text":"unless my $trust_point = delete $$router{'radius_attributes'}{'trust-point'}"}],[12433,{"text":"unless my $crypto = $$interface{'crypto'}"}],[12421,{"text":"if ($crypto_type eq 'ASA_VPN') { }"}],[12421,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[12505,{"text":"unless $in_intf"}],[12509,{"text":"unless $$router{'managed'}"}],[12513,{"text":"if $$out_intf{'zone'} ne $zone"}],[12519,{"text":"if $$dst{'hidden'}"}],[12516,{"text":"unless ($$dst{'is_aggregate'})"}],[12536,{"text":"if $$net1{'mask'} < $$net2{'mask'}"}],[12539,{"text":"unless $net1 = $$net1{'up'}"}],[12541,{"text":"if $net1 eq $net2"}],[12542,{"text":"unless $net2 = $$net2{'up'}"}],[12562,{"text":"if $$nat_other{'hidden'}"}],[12565,{"text":"if (my $aggregate = $$zone{'ipmask2aggregate'}{$key})"}],[12568,{"text":"if (my $result = $$zone{'ipmask2net'}{$key})"}],[12577,{"text":"if $$nat_network{'hidden'}"}],[12579,{"text":"if $i =~ /^(?:unnumbered|tunnel)$/"}],[12586,{"text":"unless ($result)"}],[12592,{"text":"if (my $super = find_supernet($result, $network)) { }"}],[12581,{"text":"if ($m >= $mask and match_ip($i, $ip, $mask) or $m < $mask and match_ip($ip, $i, $m))"}],[12617,{"text":"unless ($net_or_count)"}],[12623,{"text":"unless (ref $net_or_count)"}],[12659,{"text":"$where eq 'src' ? :"}],[12669,{"text":"if $$dst{'hidden'}"}],[12666,{"text":"unless ($$dst{'is_aggregate'})"}],[12673,{"text":"if $supernet_rule_tree{$stateless}{$src}{$src_range}{$prt}{$interface}{$ipmask}{$zone}"}],[12663,{"text":"if ($where eq 'dst')"}],[12678,{"text":"unless $networks"}],[12689,{"text":"$where eq 'src' ? :"}],[12690,{"text":"if ($rule_tree{$stateless}{$deny}{$src_range}{$src}{$dst}{$prt})"}],[12680,{"text":"if (not ref $networks) { }"}],[12700,{"text":"if $missing_supernet{$interface}{$service}"}],[12704,{"text":"$reversed ? :"}],[12705,{"text":"$$Netspoc::Compiler::Pass1::config{'check_supernet_rules'} eq 'warn' ? :"}],[12741,{"text":"unless $out_intf"}],[12745,{"text":"unless my $managed = $$router{'managed'}"}],[12751,{"text":"if ($$dst{'has_other_subnet'} and $out_zone eq $dst_zone)"}],[12765,{"text":"unless my $src_filter_at = $$src_net{'filter_at'}"}],[12766,{"text":"unless my $dst_filter_at = $$dst_net{'filter_at'}"}],[12767,{"text":"unless $$src_filter_at{$mark} and $$dst_filter_at{$mark}"}],[12762,{"text":"if (my $mark = $$router{'local_mark'})"}],[12778,{"text":"if ($no_acl_zone eq $dst_zone) { }"}],[12778,{"text":"elsif ($in_zone eq $no_acl_zone) { }"}],[12778,{"text":"elsif ($$no_acl_intf{'main_interface'}) { }"}],[12774,{"text":"if ($no_acl_intf = $$router{'no_in_acl'})"}],[12814,{"text":"$managed =~ /^(?:secondary|local.*)$/ ? :"}],[12812,{"text":"unless ($m2)"}],[12828,{"text":"if ($no_acl_zone eq $dst_zone) { }"}],[12828,{"text":"elsif ($no_acl_zone eq $src_zone) { }"}],[12828,{"text":"elsif ($$no_acl_intf{'main_interface'}) { }"}],[12851,{"text":"if $intf eq $in_intf"}],[12852,{"text":"if $$intf{'loopback'} and not $$intf{'vip'}"}],[12857,{"text":"if $zone eq $src_zone"}],[12858,{"text":"if $zone eq $dst_zone"}],[12859,{"text":"if $$intf{'main_interface'}"}],[12824,{"text":"if (my $no_acl_intf = $$router{'no_in_acl'}) { }"}],[12819,{"text":"if ($proto eq 'tcp' || $proto eq 'udp' || $proto eq 'ip' and $m1 == $m2)"}],[12796,{"text":"if ($$router{'model'}{'stateless'} and not $$rule{'oneway'})"}],[12868,{"text":"if $src_zone eq $in_zone"}],[12895,{"text":"unless $in_intf"}],[12899,{"text":"unless $$router{'managed'}"}],[12909,{"text":"unless my $src_filter_at = $$src_net{'filter_at'}"}],[12910,{"text":"unless my $dst_filter_at = $$dst_net{'filter_at'}"}],[12911,{"text":"unless $$src_filter_at{$mark} and $$dst_filter_at{$mark}"}],[12906,{"text":"if (my $mark = $$router{'local_mark'})"}],[12922,{"text":"if ($no_acl_zone eq $src_zone) { }"}],[12922,{"text":"elsif ($no_acl_zone eq $dst_zone) { }"}],[12922,{"text":"elsif ($$no_acl_intf{'main_interface'}) { }"}],[12918,{"text":"if (my $no_acl_intf = $$router{'no_in_acl'})"}],[12943,{"text":"$$router{'model'}{'has_io_acl'} ? :"}],[12951,{"text":"if $intf eq $in_intf"}],[12952,{"text":"if $$intf{'loopback'} and not $$intf{'vip'}"}],[12956,{"text":"if $zone eq $src_zone"}],[12957,{"text":"if $zone eq $dst_zone"}],[12958,{"text":"if $$intf{'main_interface'}"}],[12968,{"text":"unless keys %supernet_rule_tree"}],[13008,{"text":"if ($prt1 eq $prt2)"}],[13011,{"text":"if (defined(my $prt = $smaller_prt{$prt1}{$prt2}))"}],[13017,{"text":"if ($prt eq $prt2)"}],[13025,{"text":"if ($prt eq $prt1)"}],[13065,{"text":"if $$rule{'deleted'}"}],[13066,{"text":"if $$rule{'deny'}"}],[13067,{"text":"if $$rule{'no_check_supernet_rules'}"}],[13069,{"text":"unless $$dst{'has_other_subnet'}"}],[13072,{"text":"if $$dst{'mask'} != 0"}],[13076,{"text":"if @{$$dst{'zone'}{'interfaces'};} <= 1"}],[13087,{"text":"unless my $hash = $rule_tree{$stateless2}"}],[13088,{"text":"unless $hash = $$hash{$deny}"}],[13091,{"text":"unless my $smaller_src_range = find_smaller_prt($src_range1, $src_range2)"}],[13095,{"text":"unless $hash = $$hash{$src2}"}],[13099,{"text":"if $src1 eq $dst2_str"}],[13105,{"text":"if ($obj2zone{$src1} || get_zone($src1)) eq ($obj2zone{$dst2} || get_zone($dst2))"}],[13110,{"text":"if $$rule2{'no_check_supernet_rules'}"}],[13120,{"text":"unless $smaller_prt"}],[13149,{"text":"if (my $other_rule = $$hash{$prt})"}],[13161,{"text":"unless $prt = $$prt{'up'}"}],[13145,{"text":"if (my $hash = $$hash{$dst})"}],[13165,{"text":"unless $dst = $$dst{'up'}"}],[13139,{"text":"if (my $hash = $$hash{$src})"}],[13169,{"text":"unless $src = $$src{'up'}"}],[13135,{"text":"if (my $hash = $$hash{$src_range})"}],[13172,{"text":"unless $src_range = $$src_range{'up'}"}],[13132,{"text":"if (my $hash = $$hash{$deny})"}],[13176,{"text":"if $deny"}],[13129,{"text":"if (my $hash = $rule_tree{$stateless})"}],[13180,{"text":"unless $stateless"}],[13190,{"text":"if ($smaller_src_range ne $prt_ip)"}],[13202,{"text":"if $new"}],[13231,{"text":"$$Netspoc::Compiler::Pass1::config{'check_transient_supernet_rules'} eq 'warn' ? :"}],[13212,{"text":"if ($missing_count)"}],[13295,{"text":"unless $$router{'model'}{'stateless'} or $$router{'managed'} =~ /^(?:secondary|local.*)$/"}],[13293,{"text":"if ($$router{'managed'})"}],[13298,{"text":"if $$router{'active_path'}"}],[13301,{"text":"if $out_interface eq $in_interface"}],[13303,{"text":"if $$next_zone{'stateful_mark'}"}],[13315,{"text":"if not $$_{'deleted'}"}],[13312,{"text":"if ($$Netspoc::Compiler::Pass1::config{'check_supernet_rules'} or $$Netspoc::Compiler::Pass1::config{'check_transient_supernet_rules'})"}],[13325,{"text":"unless ($$zone{'stateful_mark'})"}],[13330,{"text":"if $$rule{'deleted'}"}],[13331,{"text":"if $$rule{'no_check_supernet_rules'}"}],[13332,{"text":"if ($$rule{'src'}{'has_other_subnet'})"}],[13335,{"text":"if ($$rule{'dst'}{'has_other_subnet'})"}],[13320,{"text":"if ($$Netspoc::Compiler::Pass1::config{'check_supernet_rules'})"}],[13342,{"text":"if ($$Netspoc::Compiler::Pass1::config{'check_transient_supernet_rules'})"}],[13364,{"text":"if $$rule{'deleted'}"}],[13367,{"text":"unless $proto eq 'tcp' or $proto eq 'udp' or $proto eq 'ip'"}],[13368,{"text":"if $$rule{'oneway'}"}],[13374,{"text":"if $proto eq 'tcp' and $$rule{'deny'}"}],[13393,{"text":"unless $out_intf"}],[13398,{"text":"unless $$router{'managed'}"}],[13412,{"text":"if $use_nonlocal_exit"}],[13401,{"text":"if ($$model{'stateless'} or not $in_intf and $$model{'stateless_self'})"}],[13381,{"text":"unless (defined $has_stateless_router)"}],[13430,{"text":"if ($$new_src_range{'range'} eq $aref_tcp_any)"}],[13434,{"text":"unless ($new_prt)"}],[13423,{"text":"if ($proto eq 'tcp') { }"}],[13423,{"text":"elsif ($proto eq 'udp') { }"}],[13423,{"text":"elsif ($proto eq 'ip') { }"}],[13452,{"text":"if $new_src_range"}],[13453,{"text":"if $$rule{'deny'}"}],[13420,{"text":"if ($has_stateless_router)"}],[13470,{"text":"if (keys %reverse_rule_tree)"}],[13509,{"text":"if ($type eq 'Network') { }"}],[13509,{"text":"elsif ($type eq 'Subnet') { }"}],[13509,{"text":"elsif ($type eq 'Interface') { }"}],[13531,{"text":"if $$in_interface{'main_interface'}"}],[13534,{"text":"unless $managed =~ /^(?:secondary|local.*)$/"}],[13533,{"text":"if (my $managed = $$router{'managed'})"}],[13536,{"text":"if $$router{'active_path'}"}],[13539,{"text":"if $out_interface eq $in_interface"}],[13540,{"text":"if $$out_interface{'main_interface'}"}],[13542,{"text":"if $$next_zone{'secondary_mark'}"}],[13559,{"text":"if $$in_interface{'main_interface'}"}],[13562,{"text":"if $managed eq 'primary'"}],[13561,{"text":"if (my $managed = $$router{'managed'})"}],[13564,{"text":"if $$router{'active_path'}"}],[13567,{"text":"if $out_interface eq $in_interface"}],[13568,{"text":"if $$out_interface{'main_interface'}"}],[13570,{"text":"if $$next_zone{'primary_mark'}"}],[13589,{"text":"if $$in_interface{'main_interface'}"}],[13592,{"text":"if $$router{'strict_secondary'}"}],[13591,{"text":"if ($$router{'managed'})"}],[13594,{"text":"if $$router{'active_path'}"}],[13597,{"text":"if $out_interface eq $in_interface"}],[13598,{"text":"if $$out_interface{'main_interface'}"}],[13600,{"text":"if $$next_zone{'strict_secondary_mark'}"}],[13617,{"text":"if $$in_interface{'main_interface'}"}],[13620,{"text":"if $managed ne 'local_secondary'"}],[13619,{"text":"if (my $managed = $$router{'managed'})"}],[13622,{"text":"if $$router{'active_path'}"}],[13625,{"text":"if $out_interface eq $in_interface"}],[13626,{"text":"if $$out_interface{'main_interface'}"}],[13628,{"text":"if $$next_zone{'local_secondary_mark'}"}],[13643,{"text":"unless ($$zone{'secondary_mark'})"}],[13646,{"text":"unless ($$zone{'primary_mark'})"}],[13649,{"text":"unless ($$zone{'strict_secondary_mark'})"}],[13652,{"text":"unless ($$zone{'local_secondary_mark'})"}],[13662,{"text":"if $$rule{'deleted'}"}],[13665,{"text":"if $$src{'has_other_subnet'} or $$dst{'has_other_subnet'}"}],[13669,{"text":"if ($$src_zone{'secondary_mark'} != $$dst_zone{'secondary_mark'} or $$src_zone{'local_mark'} and $$dst_zone{'local_mark'} and $$src_zone{'local_mark'} == $$dst_zone{'local_mark'} and $$src_zone{'local_secondary_mark'} != $$dst_zone{'local_secondary_mark'})"}],[13683,{"text":"if ($$src_zone{'primary_mark'} != $$dst_zone{'primary_mark'})"}],[13710,{"text":"unless (is_network($what) or is_interface($what) and $$what{'loopback'} || $$what{'router'}{'managed'})"}],[13704,{"text":"if ($prt ne $prt_ip) { }"}],[13725,{"text":"if ($err)"}],[13700,{"text":"unless ($$rule{'some_non_secondary'})"}],[13697,{"text":"if ($$src_zone{'strict_secondary_mark'} != $$dst_zone{'strict_secondary_mark'})"}],[13752,{"text":"unless my $href = $$network{'nat'}"}],[13755,{"text":"unless $$nat_network{'dynamic'}"}],[13756,{"text":"if $$nat_network{'hidden'}"}],[13757,{"text":"if 4294967295 == $$nat_network{'mask'}"}],[13759,{"text":"if $$obj{'nat'} and $$obj{'nat'}{$nat_tag}"}],[13769,{"text":"unless my $href = $$network{'nat'}"}],[13772,{"text":"if $$nat_network{'dynamic'}"}],[13780,{"text":"unless my $nat_domain = $$network{'nat_domain'}"}],[13791,{"text":"if $$result{$key}"}],[13801,{"text":"$in_intf ? :"}],[13802,{"text":"$out_intf ? :"}],[13806,{"text":"unless $$no_nat_set1{$nat_tag}"}],[13804,{"text":"if ($no_nat_set1)"}],[13810,{"text":"unless $$no_nat_set2{$nat_tag}"}],[13808,{"text":"if ($no_nat_set2)"}],[13823,{"text":"if $$rule{'deleted'}"}],[13827,{"text":"unless my $nat_hash = $$network{'nat'}"}],[13828,{"text":"$where eq 'src' ? :"}],[13836,{"text":"$nat_domain ? :"}],[13840,{"text":"$$network{'has_dynamic_host'} ? :"}],[13841,{"text":"if $seen{$cache_obj}{$no_nat_set}++"}],[13847,{"text":"if $$no_nat_set{$nat_tag}"}],[13853,{"text":"unless $hidden_seen++"}],[13852,{"text":"if ($$nat_network{'hidden'})"}],[13858,{"text":"unless ($$nat_network{'dynamic'})"}],[13871,{"text":"if $obj eq $network"}],[13874,{"text":"if $$obj{'nat'}{$nat_tag}"}],[13886,{"text":"unless $nat_tag"}],[13887,{"text":"if $$obj{'nat'}{$nat_tag}"}],[13888,{"text":"$where eq 'src' ? :"}],[13894,{"text":"$reversed ? :"}],[13892,{"text":"if (not $intf or zone_eq($$network{'zone'}, $$intf{'zone'}))"}],[13911,{"text":"if ($proto eq 'udp' or $proto eq 'ip')"}],[13903,{"text":"if ($$router{'model'}{'stateless'})"}],[13918,{"text":"unless $nat_seen"}],[13920,{"text":"if $hidden_seen"}],[13932,{"text":"unless $$nat_network{'dynamic'}"}],[13935,{"text":"unless $dyn_nat_hash"}],[13942,{"text":"unless ($active_nat_at)"}],[13950,{"text":"unless my $interfaces = $$active_nat_at{$nat_tag}"}],[13952,{"text":"unless $is_hidden or $static_seen"}],[13955,{"text":"$is_hidden ? :"}],[13956,{"text":"$where eq 'dst' ? :"}],[14048,{"text":"if ($cmp_rule ne $chg_rule and $cmp_log eq $chg_log)"}],[14034,{"text":"if (my $cmp_rule = $$cmp_hash{$prt})"}],[14074,{"text":"unless $prt = $$prt{'up'}"}],[14010,{"text":"if (my $cmp_hash = $$cmp_hash{$dst})"}],[14081,{"text":"unless $dst = $$dst{'up'}"}],[14000,{"text":"if (my $cmp_hash = $$cmp_hash{$src})"}],[14086,{"text":"unless $src = $$src{'up'}"}],[13993,{"text":"if (my $cmp_hash = $$cmp_hash{$src_range})"}],[14090,{"text":"unless $src_range = $$src_range{'up'}"}],[13987,{"text":"if (my $cmp_hash = $$cmp_hash{$deny})"}],[14094,{"text":"if $deny"}],[13984,{"text":"if (my $cmp_hash = $$cmp_hash{$stateless})"}],[14099,{"text":"unless $stateless"}],[14125,{"text":"unless $out_intf"}],[14128,{"text":"unless $in_intf"}],[14131,{"text":"unless $$router{'managed'}"}],[14133,{"text":"unless $$model{'has_interface_level'}"}],[14159,{"text":"if ($$in_hw{'level'} > $$out_hw{'level'})"}],[14167,{"text":"unless my $nat_info = $$dst{'nat'}"}],[14168,{"text":"unless grep {$$nat_info{$_};} @$nat_tags"}],[14153,{"text":"if ($identity_nat) { }"}],[14153,{"text":"elsif (my $nat_tags = $$in_hw{'bind_nat'}) { }"}],[14178,{"text":"unless my $nat_tags = $$out_hw{'bind_nat'}"}],[14180,{"text":"unless my $nat_info = $$src{'nat'}"}],[14185,{"text":"unless $$nat_info{$_}"}],[14185,{"text":"unless my($nat_net) = map({() unless $$nat_info{$_};} @$nat_tags)"}],[14196,{"text":"if ($$nat_net{'dynamic'} and $$in_hw{'level'} < $$out_hw{'level'})"}],[14190,{"text":"if ($identity_nat)"}],[14216,{"text":"if ($$router{'managed'} or $$router{'semi_managed'}) { }"}],[14208,{"text":"if ($type eq 'Network') { }"}],[14208,{"text":"elsif ($type eq 'Subnet') { }"}],[14208,{"text":"elsif ($type eq 'Interface') { }"}],[14232,{"text":"if ($$obj{'is_aggregate'}) { }"}],[14231,{"text":"if ($type eq 'Network') { }"}],[14231,{"text":"elsif ($type eq 'Subnet' or $type eq 'Interface') { }"}],[14248,{"text":"if fast_mode()"}],[14259,{"text":"if $$rule{'deleted'}"}],[14264,{"text":"unless ($info)"}],[14271,{"text":"if ($$info{'nat_path'})"}],[14280,{"text":"unless my $nat_path = $$info{'nat_path'}"}],[14310,{"text":"if ($$obj{'is_aggregate'}) { }"}],[14310,{"text":"elsif (my $max = $$obj{'max_routing_net'}) { }"}],[14322,{"text":"if (my $max = $$net{'max_routing_net'}) { }"}],[14309,{"text":"if ($type eq 'Network') { }"}],[14309,{"text":"elsif ($type eq 'Subnet' or $type eq 'Interface') { }"}],[14354,{"text":"if $$in_interface{'main_interface'}"}],[14356,{"text":"if $border_networks{$network}"}],[14361,{"text":"if $$out_interface{'zone'}"}],[14362,{"text":"if $$out_interface{'main_interface'}"}],[14366,{"text":"unless keys %hop_interfaces"}],[14375,{"text":"if $$router{'active_path'}"}],[14380,{"text":"if $$interface{'main_interface'}"}],[14383,{"text":"if ($hop_interfaces{$interface})"}],[14389,{"text":"if $interface eq $in_intf"}],[14393,{"text":"if $$cluster{$network}"}],[14398,{"text":"if $out_intf eq $interface"}],[14399,{"text":"if $$out_intf{'main_interface'}"}],[14407,{"text":"if $hop2cluster{$interface}"}],[14420,{"text":"if $hop2networks{$hop}"}],[14429,{"text":"if $border eq $in_border"}],[14434,{"text":"unless $hop_interfaces{$out_hop}"}],[14435,{"text":"if $hop2cluster{$out_hop} eq $cluster"}],[14456,{"text":"if $$interface{'main_interface'}"}],[14457,{"text":"if ($$interface{'zone'}) { }"}],[14466,{"text":"if (1 == @hop_intf or is_redundany_group(\\@hop_intf))"}],[14487,{"text":"if $network eq $border"}],[14509,{"text":"if $$in_intf{'routing'}"}],[14516,{"text":"if ($in_net eq $out_net) { }"}],[14546,{"text":"if $$interface{'routing'}"}],[14552,{"text":"if $network eq $intf_net"}],[14553,{"text":"unless my $hops = $$route_in_zone{'default'} || $$route_in_zone{$network}"}],[14587,{"text":"if ($in_intf and $out_intf) { }"}],[14587,{"text":"elsif (not $in_intf) { }"}],[14619,{"text":"if $$rule{'deleted'}"}],[14633,{"text":"$from eq $src ? :"}],[14634,{"text":"unless is_interface($from)"}],[14635,{"text":"unless $$from{'zone'}"}],[14629,{"text":"if ($src_zone eq $dst_zone)"}],[14647,{"text":"if ($pseudo_rule = $routing_tree{$src_zone}{$dst_zone}) { }"}],[14647,{"text":"elsif ($pseudo_rule = $routing_tree{$dst_zone}{$src_zone}) { }"}],[14675,{"text":"if (is_interface($src) and $$src{'router'}{'managed'} || $$src{'router'}{'routing_only'})"}],[14687,{"text":"if (is_interface($dst) and $$dst{'router'}{'managed'} || $$dst{'router'}{'routing_only'})"}],[14741,{"text":"if $$src_intf{'router'} eq $$entry{'router'}"}],[14743,{"text":"if (grep {$$_{'router'} eq $$entry{'router'};} @$redun_intf)"}],[14742,{"text":"if (my $redun_intf = $$src_intf{'redundancy_interfaces'})"}],[14766,{"text":"if $$dst_intf{'router'} eq $$exit{'router'}"}],[14768,{"text":"if (grep {$$_{'router'} eq $$exit{'router'};} @$redun_intf)"}],[14767,{"text":"if (my $redun_intf = $$dst_intf{'redundancy_interfaces'})"}],[14825,{"text":"if $interface eq $hop"}],[14830,{"text":"if ($$hop2{'ip'} eq 'bridge') { }"}],[14829,{"text":"if ($network eq $network2)"}],[14850,{"text":"unless $$interface{'network'}{'bridged'}"}],[14852,{"text":"if $$hop{'ip'} ne 'bridged'"}],[14870,{"text":"unless $$interface{'ip'} eq 'tunnel'"}],[14874,{"text":"if $$real_intf{'routing'}"}],[14885,{"text":"if (not $$real_peer{'ip'} =~ /^(?:short|negotiated)$/) { }"}],[14903,{"text":"unless my $hops = $$route_in_zone{'default'} || $$route_in_zone{$peer_net}"}],[14921,{"text":"unless $in_intf"}],[14922,{"text":"unless $in_intf eq $real_intf"}],[14923,{"text":"unless $out_intf"}],[14924,{"text":"unless $$out_intf{'network'}"}],[14936,{"text":"unless my $hops = $$route_in_zone{'default'} || $$route_in_zone{$hop_net}"}],[14932,{"text":"if ($hop_net eq $real_net) { }"}],[14884,{"text":"if ($real_net eq $peer_net) { }"}],[14884,{"text":"elsif ($$real_net{'zone'} eq $$peer_net{'zone'}) { }"}],[14948,{"text":"unless $$_{'redundancy_interfaces'}"}],[14948,{"text":"if (@hops > 1 and equal(map({$_ unless $$_{'redundancy_interfaces'};} @hops)) or @hops == 1) { }"}],[14984,{"text":"if ($peer_net ne $real_net)"}],[15004,{"text":"if $$interface{'loop'} and $$interface{'routing'}"}],[15005,{"text":"if $$interface{'ip'} eq 'bridged'"}],[15016,{"text":"unless ($$interface{'routing'} or $$interface2{'routing'})"}],[15011,{"text":"if ($interface2 ne $interface)"}],[15010,{"text":"if (my $interface2 = $net2intf{$network}) { }"}],[15032,{"text":"if ($group)"}],[15041,{"text":"if ($group and $group2 and $group eq $group2) { }"}],[15035,{"text":"if (my $hop2 = $net2hop{$network}) { }"}],[15030,{"text":"unless ($$interface{'routing'})"}],[15065,{"text":"if @$hops == @{$$hop1{'redundancy_interfaces'};}"}],[15071,{"text":"if (@$hops == 1 and my $phys_hop = $$hop1{'orig_main'}) { }"}],[15106,{"text":"$$router{'vrf_members'} ? :"}],[15125,{"text":"if $$interface{'ip'} eq 'bridged'"}],[15126,{"text":"if ($$interface{'routing'})"}],[15134,{"text":"if ($$interface{'hub'} and $crypto_type eq 'ASA')"}],[15147,{"text":"if $$nat_network{'hidden'}"}],[15149,{"text":"if ($ip == 0 and $mask == 0)"}],[15159,{"text":"unless @interfaces"}],[15182,{"text":"unless my $ip2net = $mask2ip2net{$m}"}],[15183,{"text":"unless my $big = $mask2ip2net{$m}{$i}"}],[15187,{"text":"if ($net2hop_info{$big} eq $hop_info)"}],[15171,{"text":"unless ($$interface{'hub'} and $crypto_type eq 'ASA')"}],[15220,{"text":"unless $intf2hop2nets{$interface}{$hop}"}],[15222,{"text":"if ($count > $max)"}],[15229,{"text":"if ($max_intf and $max_hop)"}],[15209,{"text":"if ($do_auto_default_route)"}],[15244,{"text":"$vrf ? :"}],[15244,{"text":"if $type eq 'IOS'"}],[15252,{"text":"$$interface{'ip'} =~ /^(?:unnumbered|negotiated|tunnel)$/ ? :"}],[15263,{"text":"if ($vrf and not $nxos_prefix)"}],[15258,{"text":"if ($type eq 'IOS') { }"}],[15258,{"text":"elsif ($type eq 'NX-OS') { }"}],[15258,{"text":"elsif ($type eq 'PIX') { }"}],[15258,{"text":"elsif ($type eq 'iproute') { }"}],[15258,{"text":"elsif ($type eq 'none') { }"}],[15307,{"text":"unless my $src_nat = $$in_hw{'src_nat'}"}],[15312,{"text":"unless my $net_hash = $$src_nat{$out_hw}"}],[15317,{"text":"unless $$a{'ip'} <=> $$b{'ip'} or $$a{'mask'} <=> $$b{'mask'}"}],[15340,{"text":"if $in_hidden or $out_hidden"}],[15344,{"text":"if ($out_dynamic and $in_dynamic and $out_dynamic eq $in_dynamic)"}],[15358,{"text":"if (my $out_host_ip = $$host{'nat'}{$out_dynamic})"}],[15352,{"text":"if ($out_dynamic) { }"}],[15406,{"text":"if $global_index and $nat_index"}],[15424,{"text":"$out_ip == $max ? :"}],[15415,{"text":"if ($out_ip == $out_intf_ip and $out_mask == 4294967295) { }"}],[15409,{"text":"unless ($global_index)"}],[15438,{"text":"if $$in_hw{'level'} < $$out_hw{'level'}"}],[15433,{"text":"if (not $nat_index)"}],[15453,{"text":"if ($$in_hw{'level'} > $$out_hw{'level'} or $$in_hw{'need_identity_nat'} or $in_ip != $out_ip)"}],[15470,{"text":"unless $$in_hw{'need_nat_0'}"}],[15480,{"text":"unless my $src_nat = $$in_hw{'src_nat'}"}],[15485,{"text":"unless my $net_hash = $$src_nat{$out_hw}"}],[15492,{"text":"unless my $identical = $$network{'is_identical'}"}],[15495,{"text":"if ($in and $out and $in eq $out)"}],[15512,{"text":"if ($$net_hash{$net} and $net2 = $$network{'is_in'}{$in_nat} and $$net_hash{$net2}) { }"}],[15534,{"text":"unless $$model{'has_interface_level'}"}],[15553,{"text":"unless $in_intf"}],[15555,{"text":"unless my $managed = $$router{'managed'}"}],[15564,{"text":"unless ($$model{'stateless'} or not $out_intf and $$model{'stateless_self'})"}],[15563,{"text":"if ($$rule{'stateless'})"}],[15575,{"text":"if $$rule{'stateless_icmp'} and not $$model{'stateless_icmp'}"}],[15578,{"text":"if $$in_intf{'loopback'}"}],[15588,{"text":"unless my $src_filter_at = $$src_net{'filter_at'}"}],[15589,{"text":"unless my $dst_filter_at = $$dst_net{'filter_at'}"}],[15590,{"text":"unless $$src_filter_at{$mark} and $$dst_filter_at{$mark}"}],[15584,{"text":"if (my $mark = $$router{'local_mark'})"}],[15609,{"text":"if $$in_intf{'ip'} eq 'tunnel'"}],[15603,{"text":"if ($dst eq $in_intf) { }"}],[15603,{"text":"elsif ($dst eq $network_00 or $dst eq $$in_intf{'network'}) { }"}],[15603,{"text":"elsif ($$in_intf{'ip'} =~ /^(?:tunnel|bridged)/) { }"}],[15602,{"text":"if ($$model{'filter'} eq 'PIX')"}],[15633,{"text":"unless ($$in_intf{'hardware'}{'no_in_acl'})"}],[15598,{"text":"if (not $out_intf or $intf_hash and $$intf_hash{$dst}) { }"}],[15598,{"text":"elsif ($$out_intf{'hardware'}{'need_out_acl'}) { }"}],[15650,{"text":"unless my $id = $$src{'id'}"}],[15652,{"text":"unless my $id_intf = $$id2rules{$id}"}],[15657,{"text":"unless $$src{'has_id_hosts'}"}],[15649,{"text":"if (is_subnet($src)) { }"}],[15649,{"text":"elsif (is_network($src)) { }"}],[15647,{"text":"if (my $id2rules = $$in_intf{'id_rules'})"}],[15671,{"text":"if ($$router{'no_crypto_filter'})"}],[15676,{"text":"unless ($$in_intf{'id_rules'})"}],[15641,{"text":"if ($$in_intf{'ip'} eq 'tunnel') { }"}],[15641,{"text":"elsif ($key eq 'out_rules') { }"}],[15641,{"text":"elsif ($key eq 'rules' and $$model{'has_io_acl'}) { }"}],[15719,{"text":"if ($$hardware{'need_out_acl'})"}],[15712,{"text":"if ($has_io_acl) { }"}],[15705,{"text":"if ($$hardware{'crosslink'})"}],[15735,{"text":"$has_io_acl ? :"}],[15731,{"text":"if ($$interface{'reroute_permit'})"}],[15756,{"text":"if (my $dst_range = $$prt{'dst_range'})"}],[15754,{"text":"unless ($$routing{'name'} =~ /^(?:manual|dynamic)$/)"}],[15753,{"text":"if (my $routing = $$interface{'routing'})"}],[15791,{"text":"if (my $dst_range = $$prt{'dst_range'})"}],[15787,{"text":"if (my $type = $$interface{'redundancy_type'})"}],[15804,{"text":"if ($$interface{'dhcp_server'})"}],[15833,{"text":"if (ref $prt eq 'ARRAY') { }"}],[15833,{"text":"elsif (my $main_prt = $$prt{'main'}) { }"}],[15851,{"text":"unless my $general_permit = $$router{'general_permit'}"}],[15857,{"text":"if $$in_intf{'main_interface'}"}],[15863,{"text":"$id_rules ? :"}],[15873,{"text":"if $out_intf eq $in_intf"}],[15874,{"text":"if $$out_intf{'ip'} eq 'tunnel'"}],[15886,{"text":"if $out_intf eq $in_intf"}],[15898,{"text":"if ($$out_hw{'need_out_acl'})"}],[15891,{"text":"if ($need_protect)"}],[15903,{"text":"if $$out_intf{'main_interface'}"}],[15910,{"text":"if $$in_intf{'ip'} eq 'bridged'"}],[15861,{"text":"if ($$in_intf{'is_hub'}) { }"}],[15919,{"text":"if fast_mode()"}],[15924,{"text":"if $$rule{'deleted'}"}],[15933,{"text":"if $$rule{'deleted'}"}],[15958,{"text":"if ($$obj{'ip'} eq 'unnumbered') { }"}],[15968,{"text":"if (my $ip = $$obj{'nat'}{$nat_tag}) { }"}],[15967,{"text":"if (my $nat_tag = $$network{'dynamic'}) { }"}],[15987,{"text":"if ($$obj{'ip'} =~ /^(unnumbered|short)$/)"}],[15998,{"text":"if (my $ip = $$obj{'nat'}{$nat_tag}) { }"}],[15993,{"text":"if ($$obj{'ip'} eq 'negotiated') { }"}],[15993,{"text":"elsif (my $nat_tag = $$network{'dynamic'}) { }"}],[15954,{"text":"if ($type eq 'Network') { }"}],[15954,{"text":"elsif ($type eq 'Subnet') { }"}],[15954,{"text":"elsif ($type eq 'Interface') { }"}],[15954,{"text":"elsif ($type eq 'Objectgroup') { }"}],[16040,{"text":"$prefix_code == 32 ? :"}],[16068,{"text":"if $$rule{'deny'}"}],[16070,{"text":"is_network($dst) ? :"}],[16074,{"text":"if $$dst_network{'mask'} == 0"}],[16077,{"text":"unless $$a{'ip'} <=> $$b{'ip'}"}],[16114,{"text":"if ($$model{'v8_4'}) { }"}],[16141,{"text":"if $asa_vpn_attr_need_value{$key}"}],[16140,{"text":"if (defined $value)"}],[16152,{"text":"unless $$interface{'ip'} eq 'tunnel'"}],[16188,{"text":"if ($$split_tunnel_nets[$i] ne $$cached_nets[$i])"}],[16183,{"text":"if (my $href = $split_t_cache{@$split_tunnel_nets})"}],[16201,{"text":"if (@$split_tunnel_nets) { }"}],[16198,{"text":"unless ($acl_name)"}],[16170,{"text":"if (not defined $split_tunnel_policy) { }"}],[16170,{"text":"elsif ($split_tunnel_policy eq 'tunnelall') { }"}],[16170,{"text":"elsif ($split_tunnel_policy eq 'tunnelspecified') { }"}],[16252,{"text":"if ($$model{'v8_4'})"}],[16259,{"text":"if (%$attributes)"}],[16268,{"text":"if $group_policy_name"}],[16279,{"text":"if ($id =~ /^@/)"}],[16297,{"text":"defined $value ? :"}],[16295,{"text":"if ($spec and $$spec{'tg_general'})"}],[16304,{"text":"$$model{'v8_4'} ? :"}],[16335,{"text":"if ($$model{'v8_4'})"}],[16249,{"text":"if ($$src{'mask'} == 4294967295) { }"}],[16372,{"text":"unless my $id = $$interface{'peers'}[0]{'id'}"}],[16377,{"text":"if (keys %$attributes)"}],[16385,{"text":"if $group_policy_name"}],[16155,{"text":"if (my $hash = $$interface{'id_rules'}) { }"}],[16392,{"text":"if (keys %cert_group_map or keys %single_cert_map)"}],[16413,{"text":"if $$model{'filter'} ne 'iptables'"}],[16446,{"text":"if $$model{'filter'} ne 'iptables'"}],[16461,{"text":"if $$hardware{'loopback'}"}],[16511,{"text":"if $$hardware{'loopback'}"}],[16514,{"text":"if $$hardware{'name'} eq 'device' and $$model{'class'} eq 'ASA'"}],[16524,{"text":"if $suffix eq 'out' and not $$hardware{'need_out_acl'}"}],[16531,{"text":"unless @$rules != 1"}],[16528,{"text":"unless (grep {my $rules = $$hardware{$_} || [];\n$$rules[0] ne $permit_any_rule unless @$rules != 1;} 'rules', 'intf_rules')"}],[16527,{"text":"unless ($$model{'need_acl'})"}],[16554,{"text":"if ($$router{'need_protect'})"}],[16557,{"text":"if ($$hardware{'no_in_acl'}) { }"}],[16573,{"text":"if $$zone{'zone_cluster'}"}],[16586,{"text":"unless @redundant == @interfaces and equal(@redundant)"}],[16579,{"text":"if (@interfaces > 1)"}],[16591,{"text":"if ($intf_ok == @{$$hardware{'interfaces'};})"}],[16564,{"text":"if ($managed_local)"}],[16548,{"text":"if ($suffix eq 'in') { }"}],[16608,{"text":"if ($filter eq 'IOS' or $filter eq 'NX-OS') { }"}],[16608,{"text":"elsif ($filter eq 'ACE') { }"}],[16608,{"text":"elsif ($filter eq 'PIX') { }"}],[16638,{"text":"if ($filter eq 'iptables') { }"}],[16670,{"text":"unless @tunnel_intf == 1"}],[16675,{"text":"if $_ ne $wan_intf"}],[16716,{"text":"if $$tunnel_intf{'crypto'}{'detailed_crypto_acl'}"}],[16759,{"text":"$is_hub ? :"}],[16761,{"text":"$detailed ? :"}],[16763,{"text":"unless $is_hub"}],[16785,{"text":"if $$router{'no_crypto_filter'}"}],[16813,{"text":"if ($crypto_filter_name)"}],[16819,{"text":"if ($$isakmp{'ike_version'} == 2) { }"}],[16819,{"text":"elsif ($$model{'v8_4'}) { }"}],[16818,{"text":"if ($crypto_type eq 'ASA') { }"}],[16833,{"text":"if (my $pfs_group = $$ipsec{'pfs_group'})"}],[16840,{"text":"unless ($lifetime == 3600 and $crypto_type eq 'IOS')"}],[16837,{"text":"if (my $lifetime = $$ipsec{'lifetime'})"}],[16859,{"text":"if ($$isakmp{'ike_version'} == 2) { }"}],[16859,{"text":"elsif ($$model{'v8_4'}) { }"}],[16857,{"text":"if ($authentication eq 'rsasig') { }"}],[16924,{"text":"if ($crypto_type eq 'IOS') { }"}],[16924,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[16933,{"text":"if ($crypto_type eq 'IOS') { }"}],[16933,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[16960,{"text":"if (my $id = $$peer{'id'})"}],[16952,{"text":"if ($crypto_type eq 'ASA')"}],[16973,{"text":"unless $crypto_type eq 'ASA'"}],[17032,{"text":"unless @ipsec"}],[17040,{"text":"if ($crypto_type eq 'EZVPN')"}],[17048,{"text":"if ($crypto_type =~ /^ASA/)"}],[17053,{"text":"if ($crypto_type eq 'ASA_VPN')"}],[17060,{"text":"if ($crypto_type eq 'ASA_EZVPN')"}],[17064,{"text":"unless $crypto_type =~ /^(:?IOS|ASA)$/"}],[17071,{"text":"unless $crypto_type eq 'IOS'"}],[17081,{"text":"unless ($authentication eq 'rsa-sig')"}],[17087,{"text":"$crypto_type eq 'ASA' ? :"}],[17086,{"text":"if ($encryption =~ /^aes(\\d+)$/)"}],[17099,{"text":"unless ($lifetime == 86400)"}],[17116,{"text":"if (my $ah = $$ipsec{'ah'})"}],[17120,{"text":"if (not my $esp = $$ipsec{'esp_encryption'}) { }"}],[17120,{"text":"elsif ($esp =~ /^(aes|des|3des)$/) { }"}],[17120,{"text":"elsif ($esp =~ /^aes(192|256)$/) { }"}],[17130,{"text":"if (my $esp_ah = $$ipsec{'esp_authentication'})"}],[17139,{"text":"if (my $ah = $$ipsec{'ah'})"}],[17149,{"text":"$crypto_type eq 'ASA' ? :"}],[17142,{"text":"if (not my $esp = $$ipsec{'esp_encryption'}) { }"}],[17142,{"text":"elsif ($esp =~ /^(aes|des|3des)$/) { }"}],[17142,{"text":"elsif ($esp =~ /^aes(192|256)$/) { }"}],[17152,{"text":"if (my $esp_ah = $$ipsec{'esp_authentication'})"}],[17155,{"text":"$crypto_type eq 'ASA' && $$model{'v8_4'} ? :"}],[17114,{"text":"if ($crypto_type eq 'ASA' and $$isakmp{'ike_version'} == 2) { }"}],[17168,{"text":"unless $$interface{'ip'} eq 'tunnel'"}],[17170,{"text":"if ($ip =~ /^(?:negotiated|short|unnumbered)$/) { }"}],[17186,{"text":"if (my $interfaces = $hardware2crypto{$hardware})"}],[17191,{"text":"if (my $interfaces = $hardware2dyn_crypto{$hardware})"}],[17198,{"text":"unless $have_crypto_map"}],[17199,{"text":"if ($crypto_type eq 'IOS') { }"}],[17199,{"text":"elsif ($crypto_type eq 'ASA') { }"}],[17212,{"text":"unless $$model{'print_interface'}"}],[17217,{"text":"if $name eq 'VIP' and $$model{'has_vip'}"}],[17236,{"text":"if $secondary"}],[17242,{"text":"if $secondary"}],[17223,{"text":"if ($ip eq 'tunnel') { }"}],[17223,{"text":"elsif ($ip eq 'unnumbered') { }"}],[17223,{"text":"elsif ($ip eq 'negotiated') { }"}],[17223,{"text":"elsif ($$model{'use_prefix'}) { }"}],[17248,{"text":"if ($class eq 'NX-OS') { }"}],[17247,{"text":"if (my $vrf = $$router{'vrf'})"}],[17259,{"text":"if ($class eq 'IOS' and $stateful and not $$hardware{'loopback'})"}],[17262,{"text":"if (my $other = $$hardware{'subcmd'})"}],[17267,{"text":"if $class eq 'ACE'"}],[17288,{"text":"if (my $result = $prt2code{$prt})"}],[17296,{"text":"if $$prt{'established'}"}],[17299,{"text":"if (defined(my $type = $$prt{'type'}))"}],[17302,{"text":"if (defined(my $code = $$prt{'code'}))"}],[17294,{"text":"if ($proto eq 'tcp' or $proto eq 'udp') { }"}],[17294,{"text":"elsif ($proto eq 'icmp') { }"}],[17343,{"text":"if ($$model{'has_vip'})"}],[17338,{"text":"unless ($need_protect)"}],[17325,{"text":"if ($$router{'need_protect'} or $$router{'crosslink_interfaces'})"}],[17349,{"text":"unless my $aref = delete $$router{'acl_list'}"}],[17360,{"text":"if ($need_protect and delete $$acl{'protect_self'})"}],[17370,{"text":"unless my $rules = $$acl{$what}"}],[17375,{"text":"if $deny"}],[17386,{"text":"if ($normalized eq ':subst') { }"}],[17383,{"text":"if (my $modifier = $$active_log{$tag}) { }"}],[17382,{"text":"if (exists $$active_log{$tag})"}],[17380,{"text":"if ($active_log and my $log = $$rule{'log'})"}],[17402,{"text":"if ($log_code) { }"}],[17402,{"text":"elsif ($$router{'log_deny'} and $deny) { }"}],[17430,{"text":"if $$obj{'id'}"}],[17429,{"text":"if ($type eq 'Subnet')"}],[17435,{"text":"if ($$obj{'has_id_hosts'})"}],[17425,{"text":"if ($do_auth)"}],[17443,{"text":"if $$net{'has_other_subnet'}"}],[17444,{"text":"if ($$net{'has_dynamic_host'})"}],[17449,{"text":"if (my $max = $$obj{'max_secondary_net'})"}],[17454,{"text":"if $$obj{'mask'} == 4294967295"}],[17459,{"text":"unless my $max = $$obj{'max_secondary_net'}"}],[17441,{"text":"if ($type eq 'Subnet' or $type eq 'Interface') { }"}],[17466,{"text":"if $opt_secondary"}],[17410,{"text":"if ($secondary_filter and $$rule{'some_non_secondary'} or $standard_filter and $$rule{'some_primary'})"}],[17471,{"text":"if (my $src_range = $$rule{'src_range'})"}],[17478,{"text":"if (keys %opt_addr)"}],[17489,{"text":"if (my $filter_only = $$router{'filter_only'})"}],[17495,{"text":"unless ($$router{'no_group_code'})"}],[17494,{"text":"if ($$model{'can_objectgroup'})"}],[17500,{"text":"if ($$router{'log_deny'})"}],[17512,{"text":"unless mkdir $dir"}],[17516,{"text":"unless -d $dir"}],[17527,{"text":"unless mkdir $prev"}],[17529,{"text":"unless system('mv', @old_files, $prev) == 0"}],[17521,{"text":"if (my $count = @old_files)"}],[17519,{"text":"unless (-d $prev)"}],[17511,{"text":"if (not -e $dir) { }"}],[17549,{"text":"if $seen{$router}"}],[17552,{"text":"if $$router{'orig_router'}"}],[17565,{"text":"unless open my $code_fd, '>', $config_file"}],[17573,{"text":"if (my $orig_interfaces = $$router{'orig_interfaces'})"}],[17580,{"text":"if (my $members = $$router{'vrf_members'}) { }"}],[17593,{"text":"$ips ? :"}],[17595,{"text":"if (@ips)"}],[17590,{"text":"if ($$router{'policy_distribution_point'})"}],[17605,{"text":"if ($$router{'managed'}) { }"}],[17620,{"text":"unless close $code_fd"}],[17626,{"text":"unless open my $acl_fd, '>', $acl_file"}],[17629,{"text":"unless close $acl_fd"}],[17637,{"text":"unless defined $in_path and -d $in_path"}],[17638,{"text":"unless defined $out_dir"}],[17648,{"text":"unless -d $raw_dir"}],[17658,{"text":"unless opendir my $dh, $raw_dir"}],[17660,{"text":"if $file =~ /^\\./"}],[17661,{"text":"if $file =~ /$$Netspoc::Compiler::Pass1::config{'ignore_files'}/o"}],[17666,{"text":"unless (-f $raw_path)"}],[17670,{"text":"unless ($device_names{$file})"}],[17675,{"text":"unless system(\"cp -f $raw_path $copy\") == 0"}],[17902,{"text":"if ($out_dir)"}]],"file":"lib/Netspoc/Compiler/Pass1.pm","subroutine":[[29,"BEGIN"],[30,"BEGIN"],[31,"BEGIN"],[32,"BEGIN"],[33,"BEGIN"],[34,"BEGIN"],[35,"BEGIN"],[42,"BEGIN"],[3876,"BEGIN"],[13411,"BEGIN"],[145,"store_description"],[157,"fast_mode"],[311,"equal"],[319,"unique"],[324,"find_duplicates"],[330,"intersect"],[336,"max"],[346,"aref_delete"],[360,"aref_eq"],[369,"keys_eq"],[378,"warn_msg"],[400,"context"],[413,"at_line"],[420,"check_abort"],[430,"abort_on_error"],[435,"set_abort_immediately"],[440,"error_atline"],[447,"err_msg"],[454,"syntax_err"],[459,"internal_err"],[483,"skip_space_and_comment"],[497,"check"],[505,"skip"],[511,"check_int"],[521,"read_int"],[528,"check_ip"],[541,"read_ip"],[549,"read_ip_prefix"],[561,"read_ip_prefix_pair"],[566,"gen_ip"],[573,"print_ip"],[578,"read_identifier"],[589,"read_owner_pattern"],[600,"read_name"],[611,"read_string"],[625,"read_union"],[654,"check_typed_name"],[681,"read_typed_name"],[710,"read_extended_name"],[779,"read_user_id"],[790,"check_hostname"],[806,"read_complement"],[815,"read_intersection"],[837,"read_time_val"],[844,"add_description"],[860,"check_permit_deny"],[870,"check_nat_name"],[880,"split_typed_name"],[887,"check_flag"],[898,"check_assign"],[916,"read_list"],[932,"read_list_or_null"],[938,"read_assign_list"],[945,"check_assign_list"],[954,"check_assign_pair"],[975,"new"],[981,"add_attribute"],[990,"check_radius_attributes"],[1005,"check_routing"],[1012,"check_managed"],[1042,"check_model"],[1073,"host_as_interface"],[1114,"read_host"],[1226,"read_nat"],[1283,"read_network"],[1501,"read_interface"],[1803,"set_pix_interface_level"],[1847,"check_no_in_acl"],[1903,"read_router"],[2464,"move_locked_interfaces"],[2510,"read_aggregate"],[2560,"check_router_attributes"],[2595,"read_area"],[2659,"read_group"],[2672,"read_protocolgroup"],[2679,"read_port_range"],[2709,"read_port_ranges"],[2724,"read_icmp_type_code"],[2752,"read_proto_nr"],[2780,"gen_protocol_name"],[2788,"__ANON__"],[2826,"cache_anonymous_protocol"],[2840,"read_simple_protocol"],[2877,"check_protocol_flags"],[2896,"read_typed_name_or_simple_protocol"],[2900,"read_protocol"],[2911,"assign_union_allow_user"],[2921,"read_service"],[3005,"read_pathrestriction"],[3016,"read_attributed_object"],[3094,"read_isakmp"],[3132,"read_ipsec"],[3139,"read_crypto"],[3166,"read_owner"],[3231,"read_netspoc"],[3252,"read_file"],[3281,"read_file_or_dir"],[3293,"__ANON__"],[3311,"__ANON__"],[3347,"show_read_statistics"],[3362,"is_network"],[3363,"is_router"],[3364,"is_interface"],[3365,"is_host"],[3366,"is_subnet"],[3367,"is_area"],[3368,"is_zone"],[3369,"is_group"],[3370,"is_protocolgroup"],[3371,"is_objectgroup"],[3372,"is_chain"],[3373,"is_autointerface"],[3378,"print_rule"],[3408,"prepare_prt_ordering"],[3470,"order_icmp"],[3496,"order_proto"],[3513,"order_ranges"],[3530,"__ANON__"],[3662,"expand_splitted_protocol"],[3717,"order_protocols"],[3766,"link_to_owner"],[3782,"link_to_real_owner"],[3801,"expand_watchers"],[3845,"link_owners"],[3937,"link_policy_distribution_point"],[3962,"link_general_permit"],[4008,"link_areas"],[4068,"link_interfaces"],[4123,"check_interface_ip"],[4185,"link_routers"],[4194,"link_subnet"],[4197,"__ANON__"],[4248,"link_subnets"],[4263,"add_pathrestriction"],[4277,"link_pathrestrictions"],[4376,"link_virtual_interfaces"],[4495,"is_redundany_group"],[4503,"check_ip_addresses"],[4603,"link_topology"],[4632,"disable_behind"],[4685,"check_bridged_networks"],[4748,"mark_disabled"],[4894,"split_ip_range"],[4910,"convert_hosts"],[5120,"combine_subnets"],[5173,"get_intf"],[5188,"get_auto_intf"],[5228,"check_auto_intf"],[5293,"expand_group1"],[5534,"__ANON__"],[5551,"__ANON__"],[5791,"remove_duplicates"],[5810,"expand_group"],[5829,"expand_group_in_rule"],[5924,"__ANON__"],[5931,"check_unused_groups"],[5955,"expand_protocols"],[6016,"split_protocols"],[6073,"add_rules"],[6103,"get_zone"],[6149,"expand_special"],[6229,"add_managed_hosts"],[6251,"collect_unenforceable"],[6316,"show_unenforceable"],[6357,"warn_useless_unenforceable"],[6368,"show_deleted_rules1"],[6423,"collect_redundant_rules"],[6462,"show_deleted_rules2"],[6503,"warn_unused_overlaps"],[6523,"collect_log"],[6533,"check_log"],[6547,"normalize_log"],[6558,"expand_rules"],[6699,"print_rulecount"],[6708,"expand_services"],[6776,"set_policy_distribution_ip"],[6790,"__ANON__"],[6916,"propagate_owners"],[6989,"__ANON__"],[7014,"__ANON__"],[7029,"__ANON__"],[7059,"__ANON__"],[7234,"expand_auto_intf"],[7254,"show_unknown_owners"],[7278,"set_service_owner"],[7368,"__ANON__"],[7414,"set_natdomain"],[7420,"__ANON__"],[7490,"distribute_nat1"],[7636,"distribute_nat"],[7648,"distribute_nat_info"],[7698,"__ANON__"],[7942,"invert_nat_set"],[7945,"__ANON__"],[8015,"adjust_crypto_nat"],[8043,"get_nat_network"],[8061,"check_subnets"],[8065,"__ANON__"],[8107,"nat_to_loopback_ok"],[8134,"by_name"],[8141,"find_subnets_in_zone"],[8303,"__ANON__"],[8333,"__ANON__"],[8408,"find_subnets_in_nat_domain"],[8632,"cluster_crosslink_routers"],[8639,"__ANON__"],[8691,"check_crosslink"],[8794,"get_managed_local_clusters"],[8809,"__ANON__"],[8827,"__ANON__"],[8916,"mark_managed_local"],[8923,"__ANON__"],[8970,"link_reroute_permit"],[9006,"add_managed_hosts_to_aggregate"],[9051,"link_aggregate_to_zone"],[9084,"link_implicit_aggregate_to_zone"],[9093,"__ANON__"],[9160,"link_aggregates"],[9254,"duplicate_aggregate_to_cluster"],[9291,"get_any"],[9347,"get_cluster_aggregates"],[9360,"set_zone1"],[9433,"set_zone_cluster"],[9478,"zone_eq"],[9492,"set_area1"],[9560,"inherit_router_attributes"],[9601,"nat_equal"],[9619,"check_useless_nat"],[9636,"inherit_area_nat"],[9669,"inherit_attributes_from_area"],[9682,"inherit_nat_to_subnets_in_zone"],[9744,"inherit_nat_in_zone"],[9771,"cleanup_after_inheritance"],[9789,"inherit_attributes"],[9800,"set_zones"],[9842,"cluster_zones"],[9863,"prepare_area_borders"],[9891,"set_area"],[9916,"set_areas"],[9974,"find_area_subset_relations"],[10036,"check_routers_in_nested_areas"],[10087,"clean_areas"],[10100,"set_zone"],[10121,"check_virtual_interfaces"],[10166,"check_pathrestrictions"],[10295,"traverse_loop_part"],[10338,"apply_pathrestriction_optimization"],[10402,"optimize_pathrestrictions"],[10469,"setpath_obj"],[10566,"set_loop_cluster"],[10599,"find_dists_and_loops"],[10626,"process_loops"],[10664,"setpath"],[10687,"get_path"],[10766,"cluster_path_mark1"],[10939,"cluster_navigation"],[11016,"cluster_path_mark"],[11377,"path_mark"],[11505,"loop_path_walk"],[11571,"path_walk"],[11707,"set_auto_intf_from_border"],[11711,"__ANON__"],[11750,"path_auto_interfaces"],[11835,"link_ipsec"],[11853,"link_crypto"],[11874,"gen_tunnel_rules"],[11907,"link_tunnels"],[12088,"crypto_behind"],[12132,"verify_asa_vpn_attributes"],[12164,"verify_subject_name"],[12168,"__ANON__"],[12187,"verify_asa_trustpoint"],[12200,"expand_crypto"],[12448,"setup_ref2obj"],[12502,"collect_supernet_dst_rules"],[12533,"find_supernet"],[12559,"find_zone_network"],[12612,"find_matching_supernet"],[12653,"check_supernet_in_zone"],[12737,"check_supernet_src_rule"],[12892,"check_supernet_dst_rule"],[12968,"check_supernet_dst_collections"],[13006,"find_smaller_prt"],[13060,"check_for_transient_supernet_rule"],[13289,"mark_stateful"],[13311,"check_supernet_rules"],[13360,"gen_reverse_rules1"],[13388,"__ANON__"],[13465,"gen_reverse_rules"],[13507,"get_zone2"],[13526,"mark_secondary"],[13556,"mark_primary"],[13584,"mark_strict_secondary"],[13612,"mark_local_secondary"],[13636,"mark_secondary_rules"],[13743,"check_dynamic_nat_rules"],[13800,"__ANON__"],[13877,"__ANON__"],[13981,"optimize_rules"],[14107,"optimize_and_warn_deleted"],[14122,"collect_nat_path"],[14141,"distribute_nat_to_device"],[14206,"get_zone3"],[14229,"get_networks"],[14248,"prepare_nat_commands"],[14307,"get_route_networks"],[14346,"set_routes_in_zone"],[14374,"__ANON__"],[14419,"__ANON__"],[14508,"add_path_routes"],[14545,"add_end_routes"],[14577,"get_route_path"],[14614,"generate_routing_tree"],[14712,"generate_routing_info"],[14792,"find_active_routes"],[14821,"fix_bridged_hops"],[14845,"check_and_convert_routes"],[14920,"__ANON__"],[15104,"print_header"],[15112,"print_routes"],[15300,"print_nat1"],[15382,"print_pix_static"],[15395,"__ANON__"],[15443,"__ANON__"],[15452,"__ANON__"],[15477,"optimize_nat_networks"],[15530,"print_nat"],[15546,"distribute_rule"],[15699,"add_router_acls"],[15819,"distribute_rules"],[15827,"create_general_permit_rules"],[15850,"distribute_general_permit"],[15919,"rules_distribution"],[15952,"address"],[16026,"ios_route_code"],[16036,"prefix_code"],[16044,"full_prefix_code"],[16054,"print_acl_placeholder"],[16064,"get_split_tunnel_nets"],[16087,"print_asavpn"],[16134,"__ANON__"],[16411,"print_acl_prefix"],[16444,"print_acl_suffix"],[16457,"print_iptables_acls"],[16503,"print_cisco_acls"],[16633,"generate_acls"],[16648,"gen_crypto_rules"],[16666,"print_ezvpn"],[16752,"print_crypto_acl"],[16782,"print_crypto_filter_acl"],[16805,"print_crypto_map_attributes"],[16851,"print_tunnel_group"],[16881,"print_ca_and_tunnel_group_map"],[16892,"print_static_crypto_map"],[16970,"print_dynamic_crypto_map"],[17020,"print_crypto"],[17210,"print_interface"],[17280,"print_address"],[17287,"print_prt"],[17310,"print_acls"],[17510,"check_output_dir"],[17539,"print_code"],[17600,"__ANON__"],[17636,"copy_raw"],[17682,"show_version"],[17690,"init_protocols"],[17813,"init_global_vars"],[17845,"compile"]],"condition":[[499,{"op":"||=","left":"$token2regex{$token}","right":"qr/\\G$token/","type":"or_3"}],[506,{"right":"syntax_err(\"Expected '${token}'\")","type":"or_2","op":"||","left":"check($token)"}],[530,{"left":"$1 > 255","op":"or","type":"or_3","right":"$2 > 255"}],[530,{"type":"or_3","right":"$3 > 255","op":"or","left":"$1 > 255 or $2 > 255"}],[530,{"left":"$1 > 255 or $2 > 255 or $3 > 255","op":"or","type":"or_3","right":"$4 > 255"}],[641,{"type":"or_3","right":"$has_user_ref != $$user_object{'refcount'} > $count","left":"$user_ref_error","op":"||="}],[667,{"type":"or_3","right":"$type eq 'interface'","op":"or","left":"$type eq 'network'"}],[681,{"left":"check_typed_name()","op":"||","type":"or_3","right":"syntax_err('Typed name expected')"}],[724,{"right":"$type eq 'host'","type":"or_3","op":"||","left":"$interface"}],[724,{"type":"and_3","right":"check('managed')","left":"$interface || $type eq 'host'","op":"and"}],[724,{"right":"check('ip')","type":"and_3","op":"and","left":"$type eq 'any'"}],[723,{"right":"$input =~ / \\G ( [\\w-]+ (?: \\@ [\\w-]+ ) ) /cgx","type":"and_3","op":"and","left":"$interface"}],[723,{"left":"$interface and $input =~ / \\G ( [\\w-]+ (?: \\@ [\\w-]+ ) ) /cgx","op":"or","right":"$input =~ / \\G ( [\\w-]+ ) /cgx","type":"or_3"}],[1051,{"op":"||","left":"$$info{'extension'}","type":"or_2","right":"{}"}],[1182,{"type":"xor_4","right":"$$host{'range'}","op":"xor","left":"$$host{'ip'}"}],[1202,{"op":"||=","left":"$$host{'ip'}","right":"'short'","type":"or_2"}],[1206,{"right":"{}","type":"or_2","left":"$$host{'radius_attributes'}","op":"||="}],[1356,{"type":"and_3","right":"$$network{'nat'}{$nat_tag}","left":"$$network{'nat'}","op":"and"}],[1432,{"left":"match_ip($ip1, $ip, $mask)","op":"and","type":"and_3","right":"match_ip($ip2, $ip, $mask)"}],[1448,{"op":"and","left":"@{$$network{'hosts'};}","type":"and_3","right":"$$network{'crosslink'}"}],[1473,{"right":"{}","type":"or_2","left":"$$network{'radius_attributes'}","op":"||="}],[1645,{"left":"$$virtual{'redundancy_id'}","op":"and","right":"not $$virtual{'redundancy_type'}","type":"and_3"}],[1684,{"left":"$$interface{'ip'}","op":"||=","type":"or_2","right":"'bridged'"}],[1710,{"type":"or_2","right":"'short'","op":"||=","left":"$$interface{'ip'}"}],[1724,{"type":"and_3","right":"not $$interface{'vip'}","left":"$$interface{'owner'}","op":"and"}],[1812,{"left":"@levels >= 2","op":"and","type":"and_3","right":"not equal(@levels)"}],[1807,{"type":"and_3","right":"$level <= 100","left":"($level) = $hwname =~ /(\\d+)$/","op":"and"}],[2018,{"type":"and_3","right":"$$model{'has_vip'}","op":"&&","left":"$model"}],[2018,{"right":"not $model && $$model{'has_vip'}","type":"and_3","op":"and","left":"$$interface{'vip'}"}],[2056,{"left":"$$router{'vrf'}","op":"and","right":"not $$model{'can_vrf'}","type":"and_3"}],[2092,{"left":"$$interface{'bind_nat'}","op":"||","type":"or_3","right":"$bind_nat0"}],[2092,{"op":"||","left":"$$hardware{'bind_nat'}","right":"$bind_nat0","type":"or_3"}],[2108,{"op":"and","left":"$hw_name eq 'VIP'","type":"and_3","right":"$$model{'has_vip'}"}],[2108,{"op":"and","left":"$hw_name eq 'VIP' and $$model{'has_vip'}","right":"not $$interface{'vip'}","type":"and_3"}],[2140,{"op":"||=","left":"$$interface{'routing'}","type":"or_3","right":"$all_routing"}],[2142,{"right":"$$interface{'ip'} eq 'unnumbered'","type":"and_3","op":"and","left":"my $routing = $$interface{'routing'}"}],[2162,{"op":"and","left":"$$router{'log_deny'}","right":"not $$model{'can_log_deny'}","type":"and_3"}],[2194,{"right":"not $$model{'need_protect'}","type":"and_3","op":"and","left":"$$router{'no_protect_self'}"}],[2202,{"left":"$$router{'strict_secondary'}","op":"and","right":"not $managed =~ /secondary$/","type":"and_3"}],[2211,{"op":"and","left":"defined $$interface{'security_level'}","right":"not $$model{'has_interface_level'}","type":"and_3"}],[2217,{"op":"or","left":"$$interface{'hub'}","type":"or_3","right":"$$interface{'spoke'}"}],[2222,{"type":"and_3","right":"$$model{'do_auth'}","left":"$$interface{'hub'}","op":"&&"}],[2222,{"op":"and","left":"$$interface{'no_check'}","type":"and_3","right":"not $$interface{'hub'} && $$model{'do_auth'}"}],[2320,{"type":"or_2","right":"{}","op":"||=","left":"$$router{'radius_attributes'}"}],[2447,{"op":"||","left":"$$interface{'spoke'}","right":"$$interface{'hub'}","type":"or_3"}],[2447,{"op":"and","left":"$$interface{'spoke'} || $$interface{'hub'}","right":"not $$interface{'no_check'}","type":"and_3"}],[2483,{"left":"$$orig_router{'orig_interfaces'}","op":"||=","right":"[@$interfaces]","type":"or_2"}],[2622,{"op":"or","left":"$$pair[0] ne 'network'","right":"ref $$pair[1]","type":"or_3"}],[2645,{"right":"$$area{'inclusive_border'}","type":"or_3","op":"||","left":"$$area{'border'}"}],[2645,{"type":"and_3","right":"$$area{'anchor'}","op":"and","left":"$$area{'border'} || $$area{'inclusive_border'}"}],[2650,{"type":"or_3","right":"$$area{'border'}","op":"or","left":"$$area{'anchor'}"}],[2650,{"op":"or","left":"$$area{'anchor'} or $$area{'border'}","right":"$$area{'inclusive_border'}","type":"or_3"}],[2688,{"right":"$port2 == 65535","type":"and_3","left":"$port1 == 1","op":"and"}],[2739,{"left":"$type == 0","op":"or","right":"$type == 3","type":"or_3"}],[2739,{"type":"or_3","right":"$type == 11","left":"$type == 0 or $type == 3","op":"or"}],[2784,{"left":"$proto eq 'tcp'","op":"or","type":"or_3","right":"$proto eq 'udp'"}],[2789,{"left":"$v1 == 1","op":"and","type":"and_3","right":"$v2 == 65535"}],[2800,{"op":"&&","left":"$src_range","type":"and_3","right":"&$port_name(@$src_range)"}],[2896,{"type":"or_3","right":"read_simple_protocol()","op":"||","left":"check_typed_name()"}],[2975,{"type":"or_3","right":"$dst_user","left":"$src_user","op":"or"}],[2977,{"left":"$src_user","op":"&&","type":"and_3","right":"$dst_user"}],[2977,{"right":"not $src_user && $dst_user","type":"and_3","op":"and","left":"$$service{'foreach'}"}],[3205,{"left":"$$owner{'extend_only'}","op":"and","type":"and_3","right":"$$owner{'watchers'}"}],[3282,{"left":"$read_syntax","op":"||=","right":"\\&read_netspoc","type":"or_2"}],[3285,{"op":"and","left":"defined $path","type":"and_3","right":"-d $path"}],[3380,{"type":"and_3","right":"$$rule{'rule'}{'service'}","left":"$$rule{'rule'}","op":"&&"}],[3385,{"right":"$$rule{'prt'}","type":"or_3","left":"$$rule{'orig_prt'}","op":"||"}],[3411,{"right":"$proto eq 'udp'","type":"or_3","left":"$proto eq 'tcp'","op":"or"}],[3483,{"left":"$$hash{$$prt{'type'}}","op":"||","right":"$up","type":"or_3"}],[3652,{"right":"$a2 == 65535","type":"and_3","op":"and","left":"$a1 == 1"}],[3767,{"op":"||=","left":"$key","type":"or_2","right":"'owner'"}],[3852,{"type":"or_3","right":"$name","op":"||","left":"$$owner{'alias'}"}],[3994,{"right":"$range ne $aref_tcp_any","type":"and_3","op":"and","left":"$range"}],[3994,{"right":"$range and $range ne $aref_tcp_any","type":"or_3","left":"$src_range","op":"or"}],[4344,{"left":"$$interface{'spoke'}","op":"or","type":"or_3","right":"$$interface{'hub'}"}],[4385,{"type":"or_2","right":"''","op":"||","left":"$$virtual1{'redundancy_type'}"}],[4386,{"type":"or_2","right":"''","left":"$$virtual1{'redundancy_id'}","op":"||"}],[4389,{"type":"or_2","right":"''","left":"$$virtual2{'redundancy_type'}","op":"||"}],[4395,{"type":"or_2","right":"''","op":"||","left":"$$virtual2{'redundancy_id'}"}],[4478,{"right":"$$router{'routing_only'}","type":"or_3","op":"or","left":"$$router{'managed'}"}],[4504,{"type":"and_3","right":"$$network{'interfaces'}","left":"$$network{'ip'} eq 'unnumbered'","op":"and"}],[4504,{"right":"@{$$network{'interfaces'};} > 2","type":"and_3","left":"$$network{'ip'} eq 'unnumbered' and $$network{'interfaces'}","op":"and"}],[4534,{"right":"$$router{'routing_only'}","type":"or_3","left":"$$router{'managed'}","op":"||"}],[4534,{"left":"$$router{'managed'} || $$router{'routing_only'}","op":"and","type":"and_3","right":"not $$interface{'routing'}"}],[4540,{"left":"$$old_intf{'redundant'}","op":"and","right":"$$interface{'redundant'}","type":"and_3"}],[4552,{"op":"and","left":"$short_intf","type":"and_3","right":"$route_intf"}],[4637,{"right":"$$network{'disabled'}","type":"or_3","op":"or","left":"not $network"}],[4709,{"type":"and_3","right":"$mask == $mask1","op":"and","left":"$ip == $ip1"}],[4768,{"op":"or","left":"$$router{'managed'}","type":"or_3","right":"$$router{'routing_only'}"}],[4817,{"left":"$$_{'managed'}","op":"||","right":"$$_{'routing_only'}","type":"or_3"}],[4899,{"right":"$low + $mask <= $high","type":"and_3","left":"($low & $mask) == 0","op":"and"}],[4962,{"right":"$nat2","type":"xor_4","left":"$nat","op":"xor"}],[4962,{"left":"$nat","op":"and","right":"$nat2","type":"and_3"}],[4972,{"right":"$$nat{$name} eq $$nat2{$name}","type":"and_3","left":"$$nat2{$name}","op":"and"}],[4989,{"type":"xor_4","right":"$owner2","op":"xor","left":"$owner"}],[4989,{"type":"and_3","right":"$owner2","op":"and","left":"$owner"}],[4989,{"right":"$owner ne $owner2","type":"and_3","left":"$owner and $owner2","op":"and"}],[4989,{"right":"$owner and $owner2 and $owner ne $owner2","type":"or_3","op":"or","left":"$owner xor $owner2"}],[5029,{"type":"or_3","right":"$$subnet{'id'}","op":"||","left":"$$subnet{'nat'}"}],[5029,{"left":"not $$subnet{'nat'} || $$subnet{'id'}","op":"and","type":"and_3","right":"$ip % $modulo == 0"}],[5053,{"left":"$up_inv_prefix < @inv_prefix_aref","op":"and","right":"$up = $inv_prefix_aref[$up_inv_prefix]{$ip}","type":"and_3"}],[5102,{"op":"||=","left":"$$subnet{'up'}","type":"or_3","right":"$network"}],[5111,{"left":"$$router{'managed'}","op":"or","type":"or_3","right":"$$router{'routing_only'}"}],[5126,{"op":"and","left":"$neighbor = $$subnet{'neighbor'}","type":"and_3","right":"$hash{$neighbor}"}],[5189,{"left":"$managed","op":"||=","right":"0","type":"or_2"}],[5238,{"right":"$$info{'n'}{$router}{$network}","type":"or_3","op":"||","left":"$$info{'r'}{$router}"}],[5257,{"type":"and_3","right":"$other = $$info{'i'}{$router}","left":"not $other","op":"and"}],[5407,{"right":"$$router{'routing_only'}","type":"or_3","op":"||","left":"$$router{'managed'}"}],[5407,{"op":"and","left":"$managed","right":"not $$router{'managed'} || $$router{'routing_only'}","type":"and_3"}],[5466,{"op":"||","left":"$$obj{'managed'}","type":"or_3","right":"$$obj{'routing_only'}"}],[5466,{"type":"and_3","right":"not $$obj{'managed'} || $$obj{'routing_only'}","op":"and","left":"$managed"}],[5537,{"op":"and","left":"$type eq 'Network'","right":"$$object{'is_aggregate'}","type":"and_3"}],[5554,{"right":"$type eq 'Interface'","type":"or_3","op":"or","left":"$type eq 'Host'"}],[5736,{"left":"$$object{'private'}","op":"||","type":"or_2","right":"'public'"}],[5704,{"right":"$$object{'zone'}{'zone_cluster'}","type":"and_3","op":"and","left":"$$object{'is_aggregate'}"}],[5886,{"right":"$subnet_warning_seen{$subnet}++","type":"or_3","op":"or","left":"$$network{'has_id_hosts'}"}],[6020,{"right":"$proto eq 'udp'","type":"or_3","left":"$proto eq 'tcp'","op":"or"}],[6034,{"op":"or","left":"$src_range","right":"$$prt{'flags'}","type":"or_3"}],[6034,{"right":"$$dst_range{'name'} ne $$prt{'name'}","type":"or_3","left":"$src_range or $$prt{'flags'}","op":"or"}],[6074,{"right":"\\%rule_tree","type":"or_2","op":"||=","left":"$rule_tree"}],[6079,{"left":"$stateless","op":"||=","type":"or_2","right":"''"}],[6080,{"right":"''","type":"or_2","left":"$deny","op":"||="}],[6081,{"left":"$src_range","op":"||=","right":"$prt_ip","type":"or_3"}],[6175,{"left":"$type eq 'Subnet'","op":"or","type":"or_3","right":"$type eq 'Host'"}],[6188,{"type":"or_3","right":"$$obj{'loopback'}","left":"$$obj{'router'}{'managed'}","op":"or"}],[6210,{"op":"or","left":"$type eq 'Subnet'","right":"$type eq 'Interface'","type":"or_3"}],[6210,{"left":"$type eq 'Subnet' or $type eq 'Interface'","op":"or","type":"or_3","right":"$type eq 'Host'"}],[6270,{"right":"is_autointerface($dst)","type":"or_3","left":"is_autointerface($src)","op":"or"}],[6266,{"left":"is_subnet($src)","op":"and","type":"and_3","right":"is_subnet($dst)"}],[6266,{"op":"and","left":"$$src{'is_aggregate'}","type":"and_3","right":"$$dst{'is_aggregate'}"}],[6292,{"type":"and_3","right":"$$src{'ip'} == $$dst{'ip'}","left":"zone_eq($$src{'zone'}, $$dst{'zone'})","op":"and"}],[6292,{"left":"zone_eq($$src{'zone'}, $$dst{'zone'}) and $$src{'ip'} == $$dst{'ip'}","op":"and","right":"$$src{'mask'} == $$dst{'mask'}","type":"and_3"}],[6266,{"op":"and","left":"$$src{'is_aggregate'}","right":"$$src{'mask'} == 0","type":"and_3"}],[6266,{"op":"and","left":"$$dst{'is_aggregate'}","right":"$$dst{'mask'} == 0","type":"and_3"}],[6311,{"op":"||=","left":"$$service{'seen_unenforceable'}{$src}{$dst}","right":"[$src, $dst]","type":"or_2"}],[6319,{"left":"$$service{'seen_unenforceable'}","op":"&&","right":"$$service{'seen_enforceable'}","type":"and_3"}],[6319,{"right":"not $$service{'seen_unenforceable'} && $$service{'seen_enforceable'}","type":"and_3","op":"and","left":"$$service{'has_unenforceable'}"}],[6334,{"right":"$$service{'silent_unenforceable'}","type":"or_3","left":"$$service{'seen_unenforceable'}","op":"or"}],[6374,{"right":"$$rule{'prt'}","type":"or_3","left":"$$rule{'orig_prt'}","op":"||"}],[6375,{"left":"$$other{'orig_prt'}","op":"||","type":"or_3","right":"$$other{'prt'}"}],[6376,{"left":"$$prt1{'flags'}{'overlaps'}","op":"and","right":"$$prt2{'flags'}{'overlaps'}","type":"and_3"}],[6429,{"op":"||","left":"$$rule{'orig_prt'}","right":"$$rule{'prt'}","type":"or_3"}],[6430,{"type":"or_3","right":"$$other{'prt'}","left":"$$other{'orig_prt'}","op":"||"}],[6431,{"right":"$$prt2{'flags'}{'overlaps'}","type":"and_3","left":"$$prt1{'flags'}{'overlaps'}","op":"and"}],[6438,{"op":"or","left":"$$router{'managed'}","right":"$$router{'routing_only'}","type":"or_3"}],[6550,{"type":"or_2","right":"\\@tags","op":"||=","left":"$key2log{$key}"}],[6616,{"left":"$obj2zone{$src}","op":"||","right":"get_zone($src)","type":"or_3"}],[6619,{"right":"get_zone($dst)","type":"or_3","left":"$obj2zone{$dst}","op":"||"}],[6621,{"op":"and","left":"$src_zone_cluster","right":"$dst_zone_cluster","type":"and_3"}],[6621,{"type":"and_3","right":"$src_zone_cluster eq $dst_zone_cluster","op":"and","left":"$src_zone_cluster and $dst_zone_cluster"}],[6621,{"right":"$src_zone_cluster and $dst_zone_cluster and $src_zone_cluster eq $dst_zone_cluster","type":"or_3","left":"$src_zone eq $dst_zone","op":"or"}],[6646,{"right":"$src_p eq $private","type":"and_3","op":"and","left":"$src_p"}],[6646,{"type":"and_3","right":"$dst_p eq $private","op":"and","left":"$dst_p"}],[6646,{"op":"or","left":"$src_p and $src_p eq $private","type":"or_3","right":"$dst_p and $dst_p eq $private"}],[6781,{"left":"$p1 <= 23","op":"and","type":"and_3","right":"23 <= $p2"}],[6781,{"right":"22 <= $p2","type":"and_3","op":"and","left":"$p1 <= 22"}],[6863,{"op":"||","left":"$$b{'loopback'}","type":"or_2","right":"''"}],[6863,{"op":"||","left":"$$a{'loopback'}","type":"or_2","right":"''"}],[6957,{"type":"and_3","right":"equal(map({$$_{'owner'};} @implicit_owner_zones))","left":"@implicit_owner_zones == @$cluster","op":"and"}],[7020,{"op":"or","left":"$$router{'managed'}","right":"$$router{'routing_only'}","type":"or_3"}],[7087,{"op":"and","left":"$owner","right":"$$owner{'extend_only'}","type":"and_3"}],[7093,{"op":"and","left":"$owner","right":"$$owner{'extend_only'}","type":"and_3"}],[7115,{"op":"||","left":"$extended{$owner}","type":"or_2","right":"[]"}],[7147,{"type":"and_3","right":"@$combined","op":"and","left":"$combined"}],[7153,{"left":"$$node{'owner'}","op":"||","right":"''","type":"or_2"}],[7198,{"right":"$owner","type":"or_3","op":"||=","left":"$$interface{'owner'}"}],[7205,{"type":"or_3","right":"$$router{'routing_only'}","left":"$$router{'managed'}","op":"||"}],[7265,{"right":"$unknown2services{$obj} eq $unknown2services{$up}","type":"and_3","left":"$unknown2services{$up}","op":"and"}],[7349,{"type":"and_3","right":"$$service_owners{$sub_owner}","op":"and","left":"keys %$service_owners == 1"}],[7358,{"right":"$$service{'multi_owner'}","type":"xor_4","op":"xor","left":"$multi_count > 1"}],[7377,{"op":"and","left":"$unknown_owners","right":"keys %$unknown_owners","type":"and_3"}],[7377,{"op":"xor","left":"$unknown_owners and keys %$unknown_owners","type":"xor_4","right":"$$service{'unknown_owner'}"}],[7433,{"op":"||","left":"$$interface{'bind_nat'}","type":"or_3","right":"$bind_nat0"}],[7442,{"right":"'(none)'","type":"or_2","op":"||","left":"join(',', @$nat_tags)"}],[7443,{"right":"'(none)'","type":"or_2","left":"join(',', @$entry_nat_tags)","op":"||"}],[7464,{"op":"||","left":"$$out_interface{'bind_nat'}","right":"$bind_nat0","type":"or_3"}],[7880,{"op":"and","left":"$nat_network = $$network{'nat'}{$nat_tag}","type":"and_3","right":"$$nat_network{'dynamic'}"}],[7916,{"op":"and","left":"$intf_nat","type":"and_3","right":"$$intf_nat{$nat_tag}"}],[7979,{"left":"$partition2tags{$mark}","op":"||=","type":"or_2","right":"{}"}],[7998,{"right":"$$router{'semi_managed'}","type":"or_3","left":"$$router{'managed'}","op":"or"}],[8002,{"left":"$$router{'managed'}","op":"or","right":"$$router{'routing_only'}","type":"or_3"}],[8044,{"type":"and_3","right":"$no_nat_set","left":"my $href = $$network{'nat'}","op":"and"}],[8062,{"left":"$$network{'is_aggregate'}","op":"or","right":"$$subnet{'is_aggregate'}","type":"or_3"}],[8066,{"op":"||","left":"match_ip($ip2, $sub_ip, $sub_mask)","type":"or_3","right":"$ip1 <= $sub_ip && $sub_ip <= $ip2"}],[8066,{"left":"$ip2","op":"and","type":"and_3","right":"match_ip($ip2, $sub_ip, $sub_mask) || $ip1 <= $sub_ip && $sub_ip <= $ip2"}],[8066,{"right":"$ip2 and match_ip($ip2, $sub_ip, $sub_mask) || $ip1 <= $sub_ip && $sub_ip <= $ip2","type":"or_3","op":"or","left":"match_ip($ip1, $sub_ip, $sub_mask)"}],[8074,{"left":"my $nat_tags = $$object{'bind_nat'}","op":"and","type":"and_3","right":"my($nat_tag2) = $$subnet{'name'} =~ /^nat:(.*)\\(/"}],[8077,{"type":"and_3","right":"$$object{'ip'} == $$subnet{'ip'}","op":"and","left":"grep {$_ eq $nat_tag2;} @$nat_tags"}],[8077,{"op":"and","left":"grep {$_ eq $nat_tag2;} @$nat_tags and $$object{'ip'} == $$subnet{'ip'}","right":"$$subnet{'mask'} == 4294967295","type":"and_3"}],[8334,{"op":"||","left":"$$network{'nat'}","right":"{}","type":"or_2"}],[8429,{"right":"$$network{'is_aggregate'}","type":"or_3","left":"$$old_net{'is_aggregate'}","op":"or"}],[8429,{"type":"and_3","right":"$$nat_network{'dynamic'}","left":"$$nat_old_net{'dynamic'}","op":"and"}],[8429,{"op":"and","left":"$$old_net{'loopback'}","right":"$$nat_network{'dynamic'}","type":"and_3"}],[8429,{"type":"and_3","right":"$$network{'loopback'}","op":"and","left":"$$nat_old_net{'dynamic'}"}],[8429,{"op":"||","left":"$$network{'bridged'}","right":"0","type":"or_2"}],[8429,{"left":"$$old_net{'bridged'}","op":"||","right":"1","type":"or_2"}],[8470,{"op":"||=","left":"$identical{$old_net}","type":"or_2","right":"[$old_net]"}],[8545,{"right":"$$subnet{'is_aggregate'}","type":"or_3","left":"$$bignet{'is_aggregate'}","op":"or"}],[8545,{"type":"or_3","right":"$$bignet{'has_subnets'}","left":"$$bignet{'is_aggregate'} or $$subnet{'is_aggregate'}","op":"or"}],[8545,{"right":"$$nat_subnet{'subnet_of'} eq $bignet","type":"and_3","op":"and","left":"$$nat_subnet{'subnet_of'}"}],[8545,{"left":"$$bignet{'is_aggregate'} or $$subnet{'is_aggregate'} or $$bignet{'has_subnets'}","op":"or","right":"$$nat_subnet{'subnet_of'} and $$nat_subnet{'subnet_of'} eq $bignet","type":"or_3"}],[8545,{"type":"or_3","right":"$$nat_subnet{'is_layer3'}","left":"$$bignet{'is_aggregate'} or $$subnet{'is_aggregate'} or $$bignet{'has_subnets'} or $$nat_subnet{'subnet_of'} and $$nat_subnet{'subnet_of'} eq $bignet","op":"or"}],[8557,{"op":"||=","left":"$$nat_subnet{'subnet_of'}","type":"or_3","right":"$bignet"}],[8747,{"type":"and_3","right":"$strength2intf{$crosslink_strength{'secondary'}}","left":"$weakest == $crosslink_strength{'local'}","op":"and"}],[8759,{"type":"or_3","right":"$out_acl_count == @{$$network{'interfaces'};}","op":"or","left":"not $out_acl_count"}],[8834,{"left":"$k0","op":"||=","right":"join(',', map({join '/', @$_;} @{$$router0{'filter_only'};}))","type":"or_3"}],[8850,{"type":"or_3","right":"$$in_intf{'no_nat_set'}","left":"$no_nat_set","op":"||="}],[8851,{"op":"||=","left":"$$info{'no_nat_set'}","right":"$no_nat_set","type":"or_3"}],[8867,{"right":"match_ip($ip, $i, $m)","type":"and_3","op":"and","left":"$mask >= $m"}],[8936,{"left":"$mask > $m","op":"and","right":"match_ip($ip, $i, $m)","type":"and_3"}],[9059,{"left":"$$aggregate{'networks'}","op":"||=","right":"[]","type":"or_2"}],[9142,{"type":"or_3","right":"$$zone{'owner'}","op":"||=","left":"$owner"}],[9193,{"type":"or_2","right":"'public'","left":"$$aggregate{'private'}","op":"||"}],[9195,{"right":"'public'","type":"or_2","left":"$private2","op":"||="}],[9380,{"right":"'public'","type":"or_2","op":"||","left":"$$network{'private'}"}],[9404,{"left":"$$router{'managed'}","op":"or","right":"$$router{'semi_managed'}","type":"or_3"}],[9439,{"left":"$$zone{'private'}","op":"||","type":"or_2","right":"'public'"}],[9458,{"right":"'public'","type":"or_2","left":"$$next{'private'}","op":"||"}],[9479,{"type":"or_3","right":"$zone1","left":"$$zone1{'zone_cluster'}","op":"||"}],[9479,{"right":"$zone2","type":"or_3","left":"$$zone2{'zone_cluster'}","op":"||"}],[9501,{"op":"or","left":"$$obj{'managed'}","type":"or_3","right":"$$obj{'routing_only'}"}],[9526,{"right":"not $is_zone","type":"xor_4","op":"xor","left":"$$is_inclusive{$area}"}],[9564,{"op":"and","left":"$$attributes{'owner'}","type":"and_3","right":"keys %$attributes == 1"}],[9575,{"right":"ref $val eq 'ARRAY'","type":"and_3","left":"ref $r_val eq 'ARRAY'","op":"and"}],[9575,{"type":"and_3","right":"aref_eq($r_val, $val)","op":"and","left":"ref $r_val eq 'ARRAY' and ref $val eq 'ARRAY'"}],[9575,{"right":"ref $r_val eq 'ARRAY' and ref $val eq 'ARRAY' and aref_eq($r_val, $val)","type":"or_3","left":"$r_val eq $val","op":"or"}],[9605,{"op":"xor","left":"defined $$nat1{$attr}","type":"xor_4","right":"defined $$nat2{$attr}"}],[9702,{"type":"and_3","right":"not $$nat{'identity'}","left":"$$network{'ip'} eq 'bridged'","op":"and"}],[9813,{"op":"and","left":"$$network{'loopback'}","right":"@{$$zone{'networks'};} == 1","type":"and_3"}],[9826,{"type":"and_3","right":"$$zone{'private'} eq 'public'","left":"$$zone{'private'}","op":"and"}],[10056,{"op":"||","left":"$$small{'subset_of'}","right":"''","type":"or_2"}],[10127,{"type":"or_3","right":"$$router{'semi_managed'}","left":"$$router{'managed'}","op":"or"}],[10176,{"left":"$$interface{'loop'} || $$interface{'router'}{'loop'}","op":"||","right":"$$interface{'zone'}{'loop'}","type":"or_3"}],[10238,{"left":"$$zone{'zone_cluster'}","op":"||","type":"or_2","right":"[$zone]"}],[10356,{"left":"$$reached{'zone'} eq $$reached{'router'}","op":"and","right":"$$reached{'zone'} ne 'none'","type":"and_3"}],[10517,{"left":"$$obj{'loop'}","op":"||=","type":"or_2","right":"{'exit', $obj, 'distance', $distance}"}],[10548,{"type":"and_3","right":"$$obj{'loop'}{'exit'} ne $obj","op":"and","left":"$$obj{'loop'}"}],[10605,{"op":"or","left":"$$obj{'to_zone1'}","type":"or_3","right":"$$obj{'loop'}"}],[10700,{"type":"or_3","right":"$$router{'semi_managed'}","left":"$$router{'managed'}","op":"or"}],[10705,{"type":"or_3","right":"$obj","op":"||","left":"$$obj{'main_interface'}"}],[10709,{"op":"or","left":"$$obj{'path_restrict'}","type":"or_3","right":"$$obj{'reachable_at'}"}],[10723,{"right":"$$obj{'semi_managed'}","type":"or_3","op":"or","left":"$$obj{'managed'}"}],[10791,{"type":"and_3","right":"$end_intf","op":"and","left":"$reachable_at"}],[10791,{"type":"and_3","right":"$end_intf ne $in_intf","op":"and","left":"$reachable_at and $end_intf"}],[10944,{"type":"and_2","right":"scalar keys %$navi","left":"$navi = $$from{'navi'}{$to}","op":"and"}],[11031,{"op":"||","left":"$$from_store{'router'} eq $from","type":"or_3","right":"$$from_store{'zone'} eq $from"}],[11031,{"op":"and","left":"is_interface($from_store)","right":"$$from_store{'router'} eq $from || $$from_store{'zone'} eq $from","type":"and_3"}],[11031,{"op":"||","left":"$$from_in{'path_restrict'}","right":"$$from_in{'reachable_at'}","type":"or_3"}],[11031,{"left":"$from_in","op":"and","right":"$$from_in{'path_restrict'} || $$from_in{'reachable_at'}","type":"and_3"}],[11046,{"right":"$$to_store{'zone'} eq $to","type":"or_3","op":"||","left":"$$to_store{'router'} eq $to"}],[11046,{"left":"is_interface($to_store)","op":"and","right":"$$to_store{'router'} eq $to || $$to_store{'zone'} eq $to","type":"and_3"}],[11046,{"op":"||","left":"$$to_out{'path_restrict'}","right":"$$to_out{'reachable_at'}","type":"or_3"}],[11046,{"op":"and","left":"$to_out","type":"and_3","right":"$$to_out{'path_restrict'} || $$to_out{'reachable_at'}"}],[11065,{"op":"and","left":"$from_in","type":"and_3","right":"not $$from_in{'loop'}"}],[11065,{"left":"$from_in and not $$from_in{'loop'}","op":"and","type":"and_3","right":"my $restrictions = $$from_in{'path_restrict'}"}],[11065,{"op":"and","left":"$from_in and not $$from_in{'loop'} and my $restrictions = $$from_in{'path_restrict'}","right":"not $start_intf","type":"and_3"}],[11076,{"left":"$to_out","op":"and","type":"and_3","right":"not $$to_out{'loop'}"}],[11076,{"op":"and","left":"$to_out and not $$to_out{'loop'}","right":"my $restrictions = $$to_out{'path_restrict'}","type":"and_3"}],[11076,{"type":"and_3","right":"not $end_intf","op":"and","left":"$to_out and not $$to_out{'loop'} and my $restrictions = $$to_out{'path_restrict'}"}],[11100,{"op":"and","left":"$start_intf","type":"and_3","right":"$$start_intf{'zone'} eq $end_node"}],[11106,{"left":"$start_intf","op":"||","type":"or_3","right":"$from_in"}],[11136,{"right":"$start_intf","type":"and_3","left":"$success","op":"and"}],[11171,{"op":"or","left":"$router eq $from","type":"or_3","right":"$router eq $to"}],[11253,{"right":"$get_next eq 'zone'","type":"and_3","op":"and","left":"$$interface{'loopback'}"}],[11345,{"right":"not $$intf{'loop'}","type":"and_3","left":"$intf","op":"and"}],[11345,{"left":"$intf and not $$intf{'loop'}","op":"and","right":"my $restrictions = $$intf{'path_restrict'}","type":"and_3"}],[11408,{"right":"$to_loop","type":"and_3","op":"and","left":"$from_loop"}],[11408,{"op":"and","left":"$from_loop and $to_loop","type":"and_3","right":"$$from_loop{'cluster_exit'} eq $$to_loop{'cluster_exit'}"}],[11514,{"left":"is_interface($loop_entry)","op":"and","type":"and_3","right":"$$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'}"}],[11514,{"left":"is_router($loop_entry)","op":"or","right":"is_interface($loop_entry) and $$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'}","type":"or_3"}],[11514,{"left":"is_router($loop_entry) or is_interface($loop_entry) and $$loop_entry{'router'} eq $$loop_entry{'loop_enter'}{$loop_exit}[0]{'router'}","op":"xor","type":"xor_4","right":"$call_at_zone"}],[11543,{"left":"$at_router","op":"xor","right":"$call_at_zone","type":"xor_4"}],[11548,{"op":"||","left":"is_router($loop_exit)","type":"or_3","right":"is_interface($loop_exit) && $$loop_exit{'router'} eq $$loop_entry{'loop_leave'}{$loop_exit}[0]{'router'}"}],[11552,{"right":"$call_at_zone","type":"xor_4","left":"$exit_at_router","op":"xor"}],[11577,{"right":"get_path($src)","type":"or_3","left":"$obj2path{$src}","op":"||"}],[11578,{"op":"||","left":"$obj2path{$dst}","right":"get_path($dst)","type":"or_3"}],[11581,{"left":"$$from_store{'router'}","op":"||","type":"or_3","right":"$from_store"}],[11582,{"type":"or_3","right":"$to_store","left":"$$to_store{'router'}","op":"||"}],[11600,{"left":"$from","op":"and","right":"$to","type":"and_3"}],[11623,{"right":"$where eq 'Zone'","type":"and_3","left":"$where","op":"&&"}],[11624,{"type":"xor_4","right":"$at_zone","op":"xor","left":"is_router($from)"}],[11630,{"type":"and_3","right":"$$from_store{'loop_exit'}","left":"$$from{'loop'}","op":"and"}],[11630,{"left":"$$from{'loop'} and $$from_store{'loop_exit'}","op":"and","type":"and_3","right":"my $loop_exit = $$from_store{'loop_exit'}{$to_store}"}],[11647,{"left":"$exit_at_router","op":"xor","right":"$at_zone","type":"xor_4"}],[11659,{"op":"and","left":"$in","right":"$$in{'loop_entry'}","type":"and_3"}],[11659,{"left":"$in and $$in{'loop_entry'}","op":"and","type":"and_3","right":"my $loop_entry = $$in{'loop_entry'}{$to_store}"}],[11678,{"op":"xor","left":"$exit_at_router","right":"$at_zone","type":"xor_4"}],[11758,{"right":"get_path($src2)","type":"or_3","left":"$obj2path{$src2}","op":"||"}],[11759,{"right":"get_path($dst2)","type":"or_3","left":"$obj2path{$dst2}","op":"||"}],[11760,{"left":"$$from_store{'router'}","op":"||","type":"or_3","right":"$from_store"}],[11761,{"op":"||","left":"$$to_store{'router'}","right":"$to_store","type":"or_3"}],[11778,{"right":"my $exit = $$from_store{'loop_exit'}{$to_store}","type":"and_3","op":"and","left":"$$from_store{'loop_exit'}"}],[11876,{"op":"||","left":"$$ipsec{'esp_authentication'}","type":"or_3","right":"$$ipsec{'esp_encryption'}"}],[11880,{"type":"or_3","right":"$nat_traversal ne 'on'","op":"or","left":"not $nat_traversal"}],[11919,{"type":"and_3","right":"@$real_hubs","op":"and","left":"$real_hubs"}],[11922,{"left":"$real_spokes","op":"and","type":"and_3","right":"@$real_spokes"}],[11943,{"left":"$$router{'model'}{'do_auth'}","op":"and","type":"and_3","right":"not $need_id"}],[12008,{"left":"$$model{'do_auth'}","op":"or","type":"or_3","right":"$$model{'can_dyn_crypto'}"}],[12017,{"right":"$s_p eq $private","type":"and_3","op":"and","left":"$s_p"}],[12017,{"op":"and","left":"$h_p","type":"and_3","right":"$h_p eq $private"}],[12017,{"op":"or","left":"$s_p and $s_p eq $private","right":"$h_p and $h_p eq $private","type":"or_3"}],[12049,{"left":"$has_id_hosts","op":"and","right":"@other","type":"and_3"}],[12056,{"left":"$$router{'managed'}","op":"and","type":"and_3","right":"$$crypto{'detailed_crypto_acl'}"}],[12170,{"type":"and_3","right":"$$attributes{'check-subject-name'}","left":"$attributes","op":"&&"}],[12226,{"type":"and_3","right":"$$router{'model'}{'crypto'} eq 'EZVPN'","op":"and","left":"$managed"}],[12299,{"op":"and","left":"$has_id_hosts","type":"and_3","right":"$has_other_network"}],[12306,{"right":"$has_other_network","type":"or_3","op":"or","left":"$has_id_hosts"}],[12354,{"type":"and_3","right":"$$router{'model'}{'crypto'} eq 'ASA'","left":"$managed","op":"and"}],[12362,{"op":"and","left":"$real_spoke","type":"and_3","right":"not $$real_spoke{'ip'} =~ /^(?:short|unnumbered)$/"}],[12525,{"right":"''","type":"or_2","op":"||=","left":"$stateless"}],[12526,{"right":"$prt_ip","type":"or_3","left":"$src_range","op":"||="}],[12581,{"op":"and","left":"$m >= $mask","type":"and_3","right":"match_ip($i, $ip, $mask)"}],[12581,{"type":"and_3","right":"match_ip($ip, $i, $m)","op":"and","left":"$m < $mask"}],[12581,{"op":"or","left":"$m >= $mask and match_ip($i, $ip, $mask)","right":"$m < $mask and match_ip($ip, $i, $m)","type":"or_3"}],[12657,{"left":"$stateless","op":"||=","type":"or_2","right":"''"}],[12658,{"left":"$src_range","op":"||=","right":"$prt_ip","type":"or_3"}],[12687,{"type":"or_2","right":"''","left":"$deny","op":"||="}],[12751,{"left":"$$dst{'has_other_subnet'}","op":"and","type":"and_3","right":"$out_zone eq $dst_zone"}],[12764,{"right":"$dst","type":"or_3","left":"$$dst{'network'}","op":"||"}],[12767,{"left":"$$src_filter_at{$mark}","op":"and","type":"and_3","right":"$$dst_filter_at{$mark}"}],[12796,{"left":"$$router{'model'}{'stateless'}","op":"and","type":"and_3","right":"not $$rule{'oneway'}"}],[12819,{"left":"$proto eq 'tcp' || $proto eq 'udp'","op":"||","type":"or_3","right":"$proto eq 'ip'"}],[12819,{"op":"and","left":"$proto eq 'tcp' || $proto eq 'udp' || $proto eq 'ip'","right":"$m1 == $m2","type":"and_3"}],[12852,{"right":"not $$intf{'vip'}","type":"and_3","op":"and","left":"$$intf{'loopback'}"}],[12907,{"type":"or_3","right":"$src","left":"$$src{'network'}","op":"||"}],[12911,{"type":"and_3","right":"$$dst_filter_at{$mark}","left":"$$src_filter_at{$mark}","op":"and"}],[12952,{"type":"and_3","right":"not $$intf{'vip'}","op":"and","left":"$$intf{'loopback'}"}],[13080,{"left":"$stateless1","op":"||=","type":"or_2","right":"''"}],[13082,{"left":"$src_range1","op":"||=","type":"or_3","right":"$prt_ip"}],[13105,{"right":"get_zone($src1)","type":"or_3","left":"$obj2zone{$src1}","op":"||"}],[13105,{"left":"$obj2zone{$dst2}","op":"||","type":"or_3","right":"get_zone($dst2)"}],[13113,{"type":"or_3","right":"$prt_ip","op":"||","left":"$$rule2{'src_range'}"}],[13123,{"left":"$stateless1","op":"||","right":"$stateless2","type":"or_3"}],[13295,{"type":"or_3","right":"$$router{'managed'} =~ /^(?:secondary|local.*)$/","left":"$$router{'model'}{'stateless'}","op":"or"}],[13312,{"type":"or_3","right":"$$Netspoc::Compiler::Pass1::config{'check_transient_supernet_rules'}","left":"$$Netspoc::Compiler::Pass1::config{'check_supernet_rules'}","op":"or"}],[13315,{"right":"$$_{'dst'}{'has_other_subnet'}","type":"or_3","op":"or","left":"$$_{'src'}{'has_other_subnet'}"}],[13367,{"left":"$proto eq 'tcp'","op":"or","right":"$proto eq 'udp'","type":"or_3"}],[13367,{"type":"or_3","right":"$proto eq 'ip'","left":"$proto eq 'tcp' or $proto eq 'udp'","op":"or"}],[13374,{"right":"$$rule{'deny'}","type":"and_3","op":"and","left":"$proto eq 'tcp'"}],[13378,{"op":"||","left":"$obj2path{$src}","right":"get_path($src)","type":"or_3"}],[13379,{"left":"$obj2path{$dst}","op":"||","type":"or_3","right":"get_path($dst)"}],[13401,{"left":"not $in_intf","op":"and","right":"$$model{'stateless_self'}","type":"and_3"}],[13401,{"op":"or","left":"$$model{'stateless'}","right":"not $in_intf and $$model{'stateless_self'}","type":"or_3"}],[13418,{"left":"$has_stateless_router","op":"||","right":"0","type":"or_2"}],[13665,{"type":"or_3","right":"$$dst{'has_other_subnet'}","op":"or","left":"$$src{'has_other_subnet'}"}],[13669,{"op":"and","left":"$$src_zone{'local_mark'}","type":"and_3","right":"$$dst_zone{'local_mark'}"}],[13669,{"type":"and_3","right":"$$src_zone{'local_mark'} == $$dst_zone{'local_mark'}","left":"$$src_zone{'local_mark'} and $$dst_zone{'local_mark'}","op":"and"}],[13669,{"type":"and_3","right":"$$src_zone{'local_secondary_mark'} != $$dst_zone{'local_secondary_mark'}","left":"$$src_zone{'local_mark'} and $$dst_zone{'local_mark'} and $$src_zone{'local_mark'} == $$dst_zone{'local_mark'}","op":"and"}],[13669,{"left":"$$src_zone{'secondary_mark'} != $$dst_zone{'secondary_mark'}","op":"or","type":"or_3","right":"$$src_zone{'local_mark'} and $$dst_zone{'local_mark'} and $$src_zone{'local_mark'} == $$dst_zone{'local_mark'} and $$src_zone{'local_secondary_mark'} != $$dst_zone{'local_secondary_mark'}"}],[13710,{"left":"$$what{'loopback'}","op":"||","type":"or_3","right":"$$what{'router'}{'managed'}"}],[13710,{"right":"$$what{'loopback'} || $$what{'router'}{'managed'}","type":"and_3","op":"and","left":"is_interface($what)"}],[13710,{"op":"or","left":"is_network($what)","type":"or_3","right":"is_interface($what) and $$what{'loopback'} || $$what{'router'}{'managed'}"}],[13759,{"type":"and_3","right":"$$obj{'nat'}{$nat_tag}","op":"and","left":"$$obj{'nat'}"}],[13826,{"type":"or_3","right":"$obj","op":"||","left":"$$obj{'network'}"}],[13829,{"right":"$other","type":"or_3","left":"$$other{'network'}","op":"||"}],[13878,{"type":"or_3","right":"$out_intf","left":"$in_intf","op":"||"}],[13892,{"right":"zone_eq($$network{'zone'}, $$intf{'zone'})","type":"or_3","left":"not $intf","op":"or"}],[13911,{"type":"or_3","right":"$proto eq 'ip'","op":"or","left":"$proto eq 'udp'"}],[13937,{"left":"$obj2path{$obj}","op":"||","right":"get_path($obj)","type":"or_3"}],[13938,{"op":"||","left":"$obj2path{$other}","type":"or_3","right":"get_path($other)"}],[13939,{"left":"$cache{$from_store}{$to_store}","op":"||","type":"or_3","right":"$cache{$to_store}{$from_store}"}],[13952,{"right":"$static_seen","type":"or_3","op":"or","left":"$is_hidden"}],[14029,{"type":"or_2","right":"''","op":"||","left":"$$chg_rule{'log'}"}],[14042,{"type":"or_2","right":"''","op":"||","left":"$$cmp_rule{'log'}"}],[14048,{"op":"and","left":"$cmp_rule ne $chg_rule","type":"and_3","right":"$cmp_log eq $chg_log"}],[14196,{"type":"and_3","right":"$$in_hw{'level'} < $$out_hw{'level'}","left":"$$nat_net{'dynamic'}","op":"and"}],[14216,{"op":"or","left":"$$router{'managed'}","type":"or_3","right":"$$router{'semi_managed'}"}],[14231,{"right":"$type eq 'Interface'","type":"or_3","op":"or","left":"$type eq 'Subnet'"}],[14261,{"op":"||=","left":"$obj2zone{$src}","right":"get_zone3($src)","type":"or_3"}],[14262,{"left":"$obj2zone{$dst}","op":"||=","type":"or_3","right":"get_zone3($dst)"}],[14272,{"right":"get_networks($src)","type":"or_3","op":"||=","left":"$obj2networks{$src}"}],[14274,{"right":"get_networks($dst)","type":"or_3","op":"||=","left":"$obj2networks{$dst}"}],[14309,{"left":"$type eq 'Subnet'","op":"or","type":"or_3","right":"$type eq 'Interface'"}],[14466,{"right":"is_redundany_group(\\@hop_intf)","type":"or_3","op":"or","left":"1 == @hop_intf"}],[14521,{"type":"or_3","right":"$$route_in_zone{$out_net}","op":"||","left":"$$route_in_zone{'default'}"}],[14553,{"op":"||","left":"$$route_in_zone{'default'}","type":"or_3","right":"$$route_in_zone{$network}"}],[14587,{"op":"and","left":"$in_intf","right":"$out_intf","type":"and_3"}],[14636,{"type":"or_3","right":"$from","op":"||","left":"$$from{'main_interface'}"}],[14675,{"op":"||","left":"$$src{'router'}{'managed'}","right":"$$src{'router'}{'routing_only'}","type":"or_3"}],[14675,{"right":"$$src{'router'}{'managed'} || $$src{'router'}{'routing_only'}","type":"and_3","op":"and","left":"is_interface($src)"}],[14681,{"left":"$$src{'main_interface'}","op":"||","type":"or_3","right":"$src"}],[14687,{"type":"or_3","right":"$$dst{'router'}{'routing_only'}","left":"$$dst{'router'}{'managed'}","op":"||"}],[14687,{"right":"$$dst{'router'}{'managed'} || $$dst{'router'}{'routing_only'}","type":"and_3","op":"and","left":"is_interface($dst)"}],[14693,{"right":"$dst","type":"or_3","op":"||","left":"$$dst{'main_interface'}"}],[14903,{"left":"$$route_in_zone{'default'}","op":"||","type":"or_3","right":"$$route_in_zone{$peer_net}"}],[14936,{"op":"||","left":"$$route_in_zone{'default'}","right":"$$route_in_zone{$hop_net}","type":"or_3"}],[14948,{"op":"and","left":"@hops > 1","type":"and_3","right":"equal(map({$_ unless $$_{'redundancy_interfaces'};} @hops))"}],[14948,{"type":"or_3","right":"@hops == 1","op":"or","left":"@hops > 1 and equal(map({$_ unless $$_{'redundancy_interfaces'};} @hops))"}],[14953,{"right":"{}","type":"or_2","op":"||=","left":"$$real_intf{'routes'}{$hop}"}],[15004,{"type":"and_3","right":"$$interface{'routing'}","op":"and","left":"$$interface{'loop'}"}],[15016,{"left":"$$interface{'routing'}","op":"or","type":"or_3","right":"$$interface2{'routing'}"}],[15041,{"left":"$group","op":"and","right":"$group2","type":"and_3"}],[15041,{"type":"and_3","right":"$group eq $group2","left":"$group and $group2","op":"and"}],[15071,{"left":"@$hops == 1","op":"and","type":"and_3","right":"my $phys_hop = $$hop1{'orig_main'}"}],[15117,{"op":"||","left":"$$model{'crypto'}","right":"''","type":"or_2"}],[15134,{"left":"$$interface{'hub'}","op":"and","type":"and_3","right":"$crypto_type eq 'ASA'"}],[15149,{"left":"$ip == 0","op":"and","type":"and_3","right":"$mask == 0"}],[15171,{"right":"$crypto_type eq 'ASA'","type":"and_3","left":"$$interface{'hub'}","op":"and"}],[15229,{"op":"and","left":"$max_intf","right":"$max_hop","type":"and_3"}],[15263,{"op":"and","left":"$vrf","right":"not $nxos_prefix","type":"and_3"}],[15317,{"right":"0","type":"or_2","op":"||","left":"get_nat_network($a, $out_nat)->{'ip'}"}],[15317,{"op":"||","left":"get_nat_network($b, $out_nat)->{'ip'}","right":"0","type":"or_2"}],[15317,{"type":"or_3","right":"$$a{'mask'} <=> $$b{'mask'}","left":"$$a{'ip'} <=> $$b{'ip'}","op":"or"}],[15340,{"right":"$out_hidden","type":"or_3","left":"$in_hidden","op":"or"}],[15344,{"left":"$out_dynamic","op":"and","right":"$in_dynamic","type":"and_3"}],[15344,{"left":"$out_dynamic and $in_dynamic","op":"and","right":"$out_dynamic eq $in_dynamic","type":"and_3"}],[15406,{"left":"$global_index","op":"and","type":"and_3","right":"$nat_index"}],[15408,{"left":"$global_index || $nat_index","op":"||","right":"$dyn_index++","type":"or_3"}],[15415,{"left":"$out_ip == $out_intf_ip","op":"and","right":"$out_mask == 4294967295","type":"and_3"}],[15453,{"left":"$$in_hw{'level'} > $$out_hw{'level'}","op":"or","right":"$$in_hw{'need_identity_nat'}","type":"or_3"}],[15453,{"type":"or_3","right":"$in_ip != $out_ip","left":"$$in_hw{'level'} > $$out_hw{'level'} or $$in_hw{'need_identity_nat'}","op":"or"}],[15495,{"right":"$out","type":"and_3","op":"and","left":"$in"}],[15495,{"op":"and","left":"$in and $out","right":"$in eq $out","type":"and_3"}],[15512,{"type":"and_3","right":"$net2 = $$network{'is_in'}{$in_nat}","op":"and","left":"$$net_hash{$net}"}],[15512,{"right":"$$net_hash{$net2}","type":"and_3","left":"$$net_hash{$net} and $net2 = $$network{'is_in'}{$in_nat}","op":"and"}],[15564,{"type":"and_3","right":"$$model{'stateless_self'}","left":"not $out_intf","op":"and"}],[15564,{"right":"not $out_intf and $$model{'stateless_self'}","type":"or_3","left":"$$model{'stateless'}","op":"or"}],[15575,{"op":"and","left":"$$rule{'stateless_icmp'}","type":"and_3","right":"not $$model{'stateless_icmp'}"}],[15586,{"type":"or_3","right":"$src","op":"||","left":"$$src{'network'}"}],[15587,{"right":"$dst","type":"or_3","left":"$$dst{'network'}","op":"||"}],[15590,{"op":"and","left":"$$src_filter_at{$mark}","type":"and_3","right":"$$dst_filter_at{$mark}"}],[15598,{"right":"$$intf_hash{$dst}","type":"and_3","left":"$intf_hash","op":"and"}],[15598,{"right":"$intf_hash and $$intf_hash{$dst}","type":"or_3","left":"not $out_intf","op":"or"}],[15603,{"type":"or_3","right":"$dst eq $$in_intf{'network'}","op":"or","left":"$dst eq $network_00"}],[15641,{"right":"$$model{'has_io_acl'}","type":"and_3","op":"and","left":"$key eq 'rules'"}],[16295,{"type":"and_3","right":"$$spec{'tg_general'}","op":"and","left":"$spec"}],[16302,{"type":"or_3","right":"$trust_point","op":"||","left":"delete $$attributes{'trust-point'}"}],[16392,{"type":"or_3","right":"keys %single_cert_map","op":"or","left":"keys %cert_group_map"}],[16514,{"type":"and_3","right":"$$model{'class'} eq 'ASA'","left":"$$hardware{'name'} eq 'device'","op":"and"}],[16518,{"left":"$$hardware{'rules'}","op":"||=","right":"[]","type":"or_2"}],[16524,{"right":"not $$hardware{'need_out_acl'}","type":"and_3","op":"and","left":"$suffix eq 'out'"}],[16529,{"type":"or_2","right":"[]","op":"||","left":"$$hardware{$_}"}],[16586,{"left":"@redundant == @interfaces","op":"and","type":"and_3","right":"equal(@redundant)"}],[16608,{"right":"$filter eq 'NX-OS'","type":"or_3","left":"$filter eq 'IOS'","op":"or"}],[16840,{"left":"$lifetime == 3600","op":"and","type":"and_3","right":"$crypto_type eq 'IOS'"}],[17022,{"left":"$$model{'crypto'}","op":"||","right":"''","type":"or_2"}],[17114,{"right":"$$isakmp{'ike_version'} == 2","type":"and_3","left":"$crypto_type eq 'ASA'","op":"and"}],[17155,{"type":"and_3","right":"$$model{'v8_4'}","left":"$crypto_type eq 'ASA'","op":"&&"}],[17217,{"type":"and_3","right":"$$model{'has_vip'}","left":"$name eq 'VIP'","op":"and"}],[17259,{"op":"and","left":"$class eq 'IOS'","type":"and_3","right":"$stateful"}],[17259,{"right":"not $$hardware{'loopback'}","type":"and_3","op":"and","left":"$class eq 'IOS' and $stateful"}],[17281,{"type":"or_3","right":"full_prefix_code(address($obj, $no_nat_set))","op":"||=","left":"$obj2nat2address{$obj}{$no_nat_set}"}],[17294,{"op":"or","left":"$proto eq 'tcp'","type":"or_3","right":"$proto eq 'udp'"}],[17315,{"type":"or_2","right":"''","op":"||","left":"$$router{'managed'}"}],[17325,{"type":"or_3","right":"$$router{'crosslink_interfaces'}","op":"or","left":"$$router{'need_protect'}"}],[17360,{"right":"delete $$acl{'protect_self'}","type":"and_3","left":"$need_protect","op":"and"}],[17380,{"right":"my $log = $$rule{'log'}","type":"and_3","op":"and","left":"$active_log"}],[17402,{"type":"and_3","right":"$deny","op":"and","left":"$$router{'log_deny'}"}],[17410,{"left":"$secondary_filter","op":"and","type":"and_3","right":"$$rule{'some_non_secondary'}"}],[17410,{"left":"$standard_filter","op":"and","right":"$$rule{'some_primary'}","type":"and_3"}],[17410,{"right":"$standard_filter and $$rule{'some_primary'}","type":"or_3","left":"$secondary_filter and $$rule{'some_non_secondary'}","op":"or"}],[17441,{"op":"or","left":"$type eq 'Subnet'","right":"$type eq 'Interface'","type":"or_3"}],[17637,{"right":"-d $in_path","type":"and_3","op":"and","left":"defined $in_path"}],[17813,{"op":"||","left":"$$Netspoc::Compiler::Pass1::config{'start_time'}","right":"time","type":"or_3"}]],"start":{"573":{"print_ip":[{"statement":146,"subroutine":40,"pod":30,"branch":22,"condition":5,"time":null}]},"898":{"check_assign":[{"subroutine":59,"statement":275,"pod":49,"condition":13,"branch":67,"time":null}]},"3293":{"__ANON__":[{"pod":96,"statement":1388,"subroutine":107,"time":null,"branch":488,"condition":65}]},"16633":{"generate_acls":[{"statement":7199,"subroutine":355,"pod":308,"branch":2110,"condition":434,"time":null}]},"990":{"check_radius_attributes":[{"subroutine":67,"statement":323,"pod":57,"condition":13,"branch":76,"time":null}]},"13877":{"__ANON__":[{"pod":268,"statement":5999,"subroutine":307,"time":null,"branch":1829,"condition":362}]},"6547":{"normalize_log":[{"statement":2857,"subroutine":181,"pod":163,"branch":907,"condition":145,"time":null}]},"14419":{"__ANON__":[{"subroutine":318,"statement":6227,"pod":277,"condition":374,"branch":1895,"time":null}]},"15850":{"distribute_general_permit":[{"subroutine":341,"statement":6819,"pod":295,"condition":425,"branch":2035,"time":null}]},"12892":{"check_supernet_dst_rule":[{"pod":253,"statement":5513,"subroutine":290,"time":null,"branch":1659,"condition":324}]},"13981":{"optimize_rules":[{"statement":5999,"subroutine":308,"pod":268,"branch":1829,"condition":362,"time":null}]},"8794":{"get_managed_local_clusters":[{"pod":186,"subroutine":217,"statement":3881,"time":null,"condition":205,"branch":1184}]},"4495":{"is_redundany_group":[{"subroutine":146,"statement":1892,"pod":131,"condition":80,"branch":616,"time":null}]},"8141":{"find_subnets_in_zone":[{"time":null,"condition":189,"branch":1109,"pod":182,"subroutine":210,"statement":3620}]},"8639":{"__ANON__":[{"statement":3841,"subroutine":215,"pod":185,"branch":1172,"condition":203,"time":null}]},"15546":{"distribute_rule":[{"statement":6697,"subroutine":337,"pod":291,"branch":1993,"condition":415,"time":null}]},"8809":{"__ANON__":[{"condition":209,"branch":1200,"time":null,"subroutine":218,"statement":3952,"pod":187}]},"8916":{"mark_managed_local":[{"pod":187,"statement":3952,"subroutine":220,"time":null,"branch":1200,"condition":209}]},"14229":{"get_networks":[{"condition":367,"branch":1861,"time":null,"subroutine":313,"statement":6092,"pod":273}]},"6916":{"propagate_owners":[{"condition":158,"branch":958,"time":null,"subroutine":187,"statement":3041,"pod":168}]},"360":{"aref_eq":[{"pod":8,"subroutine":18,"statement":64,"time":null,"condition":null,"branch":5}]},"5173":{"get_intf":[{"time":null,"branch":707,"condition":104,"pod":140,"statement":2213,"subroutine":155}]},"2752":{"read_proto_nr":[{"time":null,"branch":400,"condition":55,"pod":78,"statement":1123,"subroutine":88}]},"981":{"add_attribute":[{"time":null,"branch":75,"condition":13,"pod":56,"statement":319,"subroutine":66}]},"5228":{"check_auto_intf":[{"condition":105,"branch":712,"time":null,"subroutine":157,"statement":2233,"pod":142}]},"7414":{"set_natdomain":[{"pod":172,"subroutine":196,"statement":3292,"time":null,"condition":172,"branch":1023}]},"12612":{"find_matching_supernet":[{"time":null,"branch":1620,"condition":314,"pod":250,"statement":5420,"subroutine":287}]},"13006":{"find_smaller_prt":[{"pod":255,"statement":5557,"subroutine":292,"time":null,"branch":1676,"condition":327}]},"330":{"intersect":[{"pod":5,"statement":49,"subroutine":15,"time":null,"branch":3,"condition":null}]},"13800":{"__ANON__":[{"condition":362,"branch":1829,"time":null,"subroutine":306,"statement":5999,"pod":268}]},"7490":{"distribute_nat1":[{"branch":1033,"condition":176,"time":null,"statement":3327,"subroutine":198,"pod":173}]},"12088":{"crypto_behind":[{"condition":303,"branch":1552,"time":null,"subroutine":277,"statement":5198,"pod":241}]},"7014":{"__ANON__":[{"statement":3216,"subroutine":189,"pod":169,"branch":1004,"condition":167,"time":null}]},"6016":{"split_protocols":[{"time":null,"branch":829,"condition":116,"pod":149,"statement":2599,"subroutine":167}]},"1226":{"read_nat":[{"branch":118,"condition":17,"time":null,"statement":439,"subroutine":73,"pod":63}]},"8061":{"check_subnets":[{"pod":179,"subroutine":206,"statement":3579,"time":null,"condition":182,"branch":1100}]},"15827":{"create_general_permit_rules":[{"pod":294,"subroutine":340,"statement":6809,"time":null,"condition":425,"branch":2033}]},"549":{"read_ip_prefix":[{"time":null,"branch":20,"condition":5,"pod":27,"statement":135,"subroutine":37}]},"3801":{"expand_watchers":[{"time":null,"condition":71,"branch":529,"pod":118,"subroutine":132,"statement":1552}]},"12448":{"setup_ref2obj":[{"pod":246,"statement":5358,"subroutine":283,"time":null,"branch":1603,"condition":309}]},"3371":{"is_objectgroup":[{"condition":65,"branch":488,"time":null,"subroutine":119,"statement":1407,"pod":106}]},"3311":{"__ANON__":[{"time":null,"branch":488,"condition":65,"pod":96,"statement":1388,"subroutine":108}]},"1073":{"host_as_interface":[{"branch":90,"condition":14,"time":null,"statement":363,"subroutine":71,"pod":61}]},"420":{"check_abort":[{"pod":13,"subroutine":23,"statement":83,"time":null,"condition":null,"branch":10}]},"31":{"BEGIN":[{"branch":null,"condition":null,"time":null,"statement":6,"subroutine":2,"pod":null}]},"12533":{"find_supernet":[{"condition":311,"branch":1608,"time":null,"subroutine":285,"statement":5384,"pod":248}]},"8043":{"get_nat_network":[{"branch":1098,"condition":181,"time":null,"statement":3573,"subroutine":205,"pod":178}]},"1501":{"read_interface":[{"branch":168,"condition":21,"time":null,"statement":557,"subroutine":75,"pod":65}]},"7368":{"__ANON__":[{"pod":172,"statement":3292,"subroutine":195,"time":null,"branch":1023,"condition":172}]},"14821":{"fix_bridged_hops":[{"subroutine":325,"statement":6351,"pod":283,"condition":384,"branch":1917,"time":null}]},"4263":{"add_pathrestriction":[{"pod":128,"statement":1774,"subroutine":143,"time":null,"branch":587,"condition":74}]},"6149":{"expand_special":[{"time":null,"branch":841,"condition":123,"pod":152,"statement":2652,"subroutine":170}]},"324":{"find_duplicates":[{"branch":3,"condition":null,"time":null,"statement":45,"subroutine":14,"pod":4}]},"9433":{"set_zone_cluster":[{"statement":4186,"subroutine":232,"pod":197,"branch":1257,"condition":216,"time":null}]},"10402":{"optimize_pathrestrictions":[{"pod":222,"subroutine":257,"statement":4582,"time":null,"condition":235,"branch":1370}]},"3139":{"read_crypto":[{"subroutine":102,"statement":1290,"pod":91,"condition":62,"branch":453,"time":null}]},"938":{"read_assign_list":[{"condition":13,"branch":73,"time":null,"subroutine":62,"statement":298,"pod":52}]},"32":{"BEGIN":[{"statement":9,"subroutine":3,"pod":null,"branch":null,"condition":null,"time":null}]},"3368":{"is_zone":[{"subroutine":116,"statement":1404,"pod":103,"condition":65,"branch":488,"time":null}]},"459":{"internal_err":[{"condition":null,"branch":13,"time":null,"subroutine":29,"statement":101,"pod":19}]},"7942":{"invert_nat_set":[{"subroutine":202,"statement":3512,"pod":176,"condition":178,"branch":1088,"time":null}]},"12502":{"collect_supernet_dst_rules":[{"branch":1603,"condition":309,"time":null,"statement":5365,"subroutine":284,"pod":247}]},"589":{"read_owner_pattern":[{"statement":152,"subroutine":42,"pod":32,"branch":23,"condition":5,"time":null}]},"497":{"check":[{"pod":21,"subroutine":31,"statement":113,"time":null,"condition":null,"branch":15}]},"5931":{"check_unused_groups":[{"statement":2563,"subroutine":165,"pod":147,"branch":820,"condition":116,"time":null}]},"13388":{"__ANON__":[{"time":null,"branch":1741,"condition":344,"pod":260,"statement":5750,"subroutine":297}]},"14107":{"optimize_and_warn_deleted":[{"time":null,"branch":1842,"condition":365,"pod":269,"statement":6037,"subroutine":309}]},"541":{"read_ip":[{"statement":132,"subroutine":36,"pod":26,"branch":19,"condition":5,"time":null}]},"4894":{"split_ip_range":[{"subroutine":152,"statement":2088,"pod":137,"condition":90,"branch":671,"time":null}]},"15952":{"address":[{"time":null,"condition":425,"branch":2049,"pod":297,"subroutine":343,"statement":6869}]},"8408":{"find_subnets_in_nat_domain":[{"condition":190,"branch":1142,"time":null,"subroutine":213,"statement":3730,"pod":183}]},"2877":{"check_protocol_flags":[{"branch":423,"condition":58,"time":null,"statement":1186,"subroutine":93,"pod":82}]},"15452":{"__ANON__":[{"condition":411,"branch":1987,"time":null,"subroutine":334,"statement":6662,"pod":289}]},"3363":{"is_router":[{"pod":98,"subroutine":111,"statement":1399,"time":null,"condition":65,"branch":488}]},"8015":{"adjust_crypto_nat":[{"subroutine":204,"statement":3554,"pod":177,"condition":181,"branch":1093,"time":null}]},"837":{"read_time_val":[{"time":null,"condition":13,"branch":61,"pod":43,"subroutine":53,"statement":249}]},"8065":{"__ANON__":[{"time":null,"branch":1107,"condition":189,"pod":180,"statement":3602,"subroutine":207}]},"10664":{"setpath":[{"branch":1392,"condition":238,"time":null,"statement":4670,"subroutine":262,"pod":227}]},"625":{"read_union":[{"statement":164,"subroutine":45,"pod":35,"branch":26,"condition":5,"time":null}]},"681":{"read_typed_name":[{"pod":37,"statement":194,"subroutine":47,"time":null,"branch":37,"condition":7}]},"2659":{"read_group":[{"pod":73,"subroutine":83,"statement":1076,"time":null,"condition":52,"branch":382}]},"3005":{"read_pathrestriction":[{"time":null,"branch":443,"condition":62,"pod":87,"statement":1248,"subroutine":98}]},"4008":{"link_areas":[{"time":null,"condition":74,"branch":555,"pod":122,"subroutine":136,"statement":1667}]},"10166":{"check_pathrestrictions":[{"time":null,"branch":1340,"condition":232,"pod":219,"statement":4487,"subroutine":254}]},"6699":{"print_rulecount":[{"condition":154,"branch":930,"time":null,"subroutine":183,"statement":2928,"pod":165}]},"15477":{"optimize_nat_networks":[{"branch":1987,"condition":411,"time":null,"statement":6662,"subroutine":335,"pod":289}]},"710":{"read_extended_name":[{"statement":195,"subroutine":48,"pod":38,"branch":37,"condition":8,"time":null}]},"945":{"check_assign_list":[{"subroutine":63,"statement":302,"pod":53,"condition":13,"branch":73,"time":null}]},"6316":{"show_unenforceable":[{"pod":155,"subroutine":173,"statement":2720,"time":null,"condition":135,"branch":871}]},"17310":{"print_acls":[{"branch":2185,"condition":443,"time":null,"statement":7550,"subroutine":369,"pod":322}]},"3845":{"link_owners":[{"statement":1579,"subroutine":133,"pod":119,"branch":534,"condition":71,"time":null}]},"8107":{"nat_to_loopback_ok":[{"pod":180,"statement":3602,"subroutine":208,"time":null,"branch":1107,"condition":189}]},"42":{"BEGIN":[{"condition":null,"branch":null,"time":null,"subroutine":7,"statement":21,"pod":null}]},"440":{"error_atline":[{"condition":null,"branch":13,"time":null,"subroutine":26,"statement":91,"pod":16}]},"4685":{"check_bridged_networks":[{"condition":87,"branch":637,"time":null,"subroutine":150,"statement":1976,"pod":135}]},"7420":{"__ANON__":[{"subroutine":197,"statement":3327,"pod":173,"condition":176,"branch":1033,"time":null}]},"14346":{"set_routes_in_zone":[{"pod":276,"statement":6146,"subroutine":316,"time":null,"branch":1874,"condition":373}]},"34":{"BEGIN":[{"branch":null,"condition":null,"time":null,"statement":15,"subroutine":5,"pod":null}]},"3364":{"is_interface":[{"time":null,"branch":488,"condition":65,"pod":99,"statement":1400,"subroutine":112}]},"14792":{"find_active_routes":[{"pod":282,"statement":6344,"subroutine":324,"time":null,"branch":1917,"condition":384}]},"2724":{"read_icmp_type_code":[{"pod":77,"subroutine":87,"statement":1110,"time":null,"condition":53,"branch":394}]},"2510":{"read_aggregate":[{"pod":70,"statement":1001,"subroutine":80,"time":null,"branch":348,"condition":47}]},"13060":{"check_for_transient_supernet_rule":[{"pod":256,"statement":5577,"subroutine":293,"time":null,"branch":1680,"condition":327}]},"9863":{"prepare_area_borders":[{"time":null,"condition":230,"branch":1309,"pod":211,"subroutine":246,"statement":4352}]},"157":{"fast_mode":[{"time":null,"branch":1,"condition":null,"pod":1,"statement":34,"subroutine":11}]},"12737":{"check_supernet_src_rule":[{"branch":1634,"condition":317,"time":null,"statement":5466,"subroutine":289,"pod":252}]},"528":{"check_ip":[{"pod":25,"subroutine":35,"statement":126,"time":null,"condition":2,"branch":17}]},"13743":{"check_dynamic_nat_rules":[{"statement":5880,"subroutine":305,"pod":267,"branch":1786,"condition":352,"time":null}]},"13411":{"BEGIN":[{"time":null,"condition":null,"branch":null,"pod":null,"subroutine":9,"statement":27}]},"6103":{"get_zone":[{"time":null,"branch":833,"condition":123,"pod":151,"statement":2634,"subroutine":169}]},"1005":{"check_routing":[{"time":null,"branch":79,"condition":13,"pod":58,"statement":334,"subroutine":68}]},"3370":{"is_protocolgroup":[{"pod":105,"statement":1406,"subroutine":118,"time":null,"branch":488,"condition":65}]},"4503":{"check_ip_addresses":[{"time":null,"branch":618,"condition":80,"pod":132,"statement":1897,"subroutine":147}]},"11016":{"cluster_path_mark":[{"time":null,"condition":245,"branch":1429,"pod":231,"subroutine":266,"statement":4774}]},"15919":{"rules_distribution":[{"condition":425,"branch":2046,"time":null,"subroutine":342,"statement":6853,"pod":296}]},"2826":{"cache_anonymous_protocol":[{"subroutine":91,"statement":1160,"pod":80,"condition":58,"branch":416,"time":null}]},"779":{"read_user_id":[{"pod":39,"subroutine":49,"statement":230,"time":null,"condition":13,"branch":56}]},"1283":{"read_network":[{"subroutine":74,"statement":467,"pod":64,"condition":17,"branch":129,"time":null}]},"17845":{"compile":[{"branch":2244,"condition":454,"time":null,"statement":7782,"subroutine":377,"pod":329}]},"413":{"at_line":[{"time":null,"branch":10,"condition":null,"pod":12,"statement":82,"subroutine":22}]},"8632":{"cluster_crosslink_routers":[{"pod":184,"statement":3808,"subroutine":214,"time":null,"branch":1167,"condition":203}]},"11707":{"set_auto_intf_from_border":[{"condition":287,"branch":1505,"time":null,"subroutine":270,"statement":5008,"pod":235}]},"4123":{"check_interface_ip":[{"statement":1717,"subroutine":138,"pod":124,"branch":568,"condition":74,"time":null}]},"3782":{"link_to_real_owner":[{"branch":527,"condition":71,"time":null,"statement":1546,"subroutine":131,"pod":117}]},"9093":{"__ANON__":[{"time":null,"branch":1223,"condition":212,"pod":192,"statement":4068,"subroutine":226}]},"16087":{"print_asavpn":[{"statement":6927,"subroutine":349,"pod":303,"branch":2065,"condition":425,"time":null}]},"311":{"equal":[{"condition":null,"branch":2,"time":null,"subroutine":12,"statement":38,"pod":2}]},"611":{"read_string":[{"statement":160,"subroutine":44,"pod":34,"branch":25,"condition":5,"time":null}]},"17636":{"copy_raw":[{"subroutine":373,"statement":7712,"pod":325,"condition":452,"branch":2235,"time":null}]},"3662":{"expand_splitted_protocol":[{"time":null,"condition":70,"branch":522,"pod":114,"subroutine":128,"statement":1518}]},"17020":{"print_crypto":[{"condition":435,"branch":2135,"time":null,"subroutine":365,"statement":7388,"pod":318}]},"7059":{"__ANON__":[{"subroutine":191,"statement":3216,"pod":169,"condition":167,"branch":1004,"time":null}]},"6251":{"collect_unenforceable":[{"subroutine":172,"statement":2700,"pod":154,"condition":127,"branch":856,"time":null}]},"13360":{"gen_reverse_rules1":[{"condition":336,"branch":1724,"time":null,"subroutine":296,"statement":5704,"pod":259}]},"3281":{"read_file_or_dir":[{"branch":477,"condition":63,"time":null,"statement":1352,"subroutine":106,"pod":95}]},"9006":{"add_managed_hosts_to_aggregate":[{"condition":210,"branch":1208,"time":null,"subroutine":223,"statement":3994,"pod":189}]},"8827":{"__ANON__":[{"subroutine":219,"statement":3952,"pod":187,"condition":209,"branch":1200,"time":null}]},"2560":{"check_router_attributes":[{"condition":47,"branch":360,"time":null,"subroutine":81,"statement":1030,"pod":71}]},"3937":{"link_policy_distribution_point":[{"branch":544,"condition":72,"time":null,"statement":1630,"subroutine":134,"pod":120}]},"9636":{"inherit_area_nat":[{"time":null,"branch":1289,"condition":227,"pod":203,"statement":4266,"subroutine":238}]},"5188":{"get_auto_intf":[{"subroutine":156,"statement":2220,"pod":141,"condition":104,"branch":709,"time":null}]},"5791":{"remove_duplicates":[{"statement":2492,"subroutine":161,"pod":144,"branch":797,"condition":115,"time":null}]},"860":{"check_permit_deny":[{"time":null,"condition":13,"branch":64,"pod":45,"subroutine":55,"statement":260}]},"3373":{"is_autointerface":[{"pod":108,"statement":1409,"subroutine":121,"time":null,"branch":488,"condition":65}]},"346":{"aref_delete":[{"pod":7,"subroutine":17,"statement":58,"time":null,"condition":null,"branch":4}]},"435":{"set_abort_immediately":[{"statement":89,"subroutine":25,"pod":15,"branch":13,"condition":null,"time":null}]},"17287":{"print_prt":[{"subroutine":368,"statement":7536,"pod":321,"condition":442,"branch":2179,"time":null}]},"561":{"read_ip_prefix_pair":[{"time":null,"branch":22,"condition":5,"pod":28,"statement":142,"subroutine":38}]},"10469":{"setpath_obj":[{"subroutine":258,"statement":4603,"pod":223,"condition":235,"branch":1373,"time":null}]},"2679":{"read_port_range":[{"statement":1088,"subroutine":85,"pod":75,"branch":383,"condition":52,"time":null}]},"14712":{"generate_routing_info":[{"time":null,"branch":1911,"condition":384,"pod":281,"statement":6302,"subroutine":323}]},"14374":{"__ANON__":[{"statement":6227,"subroutine":317,"pod":277,"branch":1895,"condition":374,"time":null}]},"13289":{"mark_stateful":[{"subroutine":294,"statement":5663,"pod":257,"condition":333,"branch":1710,"time":null}]},"9800":{"set_zones":[{"statement":4330,"subroutine":244,"pod":209,"branch":1302,"condition":228,"time":null}]},"14845":{"check_and_convert_routes":[{"time":null,"condition":384,"branch":1920,"pod":284,"subroutine":326,"statement":6367}]},"447":{"err_msg":[{"time":null,"branch":13,"condition":null,"pod":17,"statement":95,"subroutine":27}]},"511":{"check_int":[{"statement":119,"subroutine":33,"pod":23,"branch":15,"condition":2,"time":null}]},"10626":{"process_loops":[{"branch":1389,"condition":238,"time":null,"statement":4653,"subroutine":261,"pod":226}]},"14508":{"add_path_routes":[{"condition":374,"branch":1895,"time":null,"subroutine":319,"statement":6227,"pod":277}]},"10100":{"set_zone":[{"condition":231,"branch":1334,"time":null,"subroutine":252,"statement":4457,"pod":217}]},"-1":{"__COVER__":[{"condition":454,"branch":2245,"time":null,"subroutine":378,"statement":7821,"pod":330}]},"16054":{"print_acl_placeholder":[{"condition":425,"branch":2061,"time":null,"subroutine":347,"statement":6913,"pod":301}]},"16036":{"prefix_code":[{"time":null,"condition":425,"branch":2060,"pod":299,"subroutine":345,"statement":6903}]},"17600":{"__ANON__":[{"statement":7712,"subroutine":372,"pod":325,"branch":2235,"condition":452,"time":null}]},"880":{"split_typed_name":[{"subroutine":57,"statement":268,"pod":47,"condition":13,"branch":66,"time":null}]},"14206":{"get_zone3":[{"subroutine":312,"statement":6082,"pod":272,"condition":366,"branch":1857,"time":null}]},"8333":{"__ANON__":[{"subroutine":212,"statement":3730,"pod":183,"condition":190,"branch":1142,"time":null}]},"4632":{"disable_behind":[{"branch":633,"condition":86,"time":null,"statement":1954,"subroutine":149,"pod":134}]},"9084":{"link_implicit_aggregate_to_zone":[{"statement":4022,"subroutine":225,"pod":191,"branch":1215,"condition":211,"time":null}]},"3252":{"read_file":[{"pod":94,"subroutine":105,"statement":1337,"time":null,"condition":63,"branch":475}]},"17510":{"check_output_dir":[{"pod":323,"subroutine":370,"statement":7646,"time":null,"condition":452,"branch":2216}]},"319":{"unique":[{"branch":3,"condition":null,"time":null,"statement":42,"subroutine":13,"pod":3}]},"3365":{"is_host":[{"branch":488,"condition":65,"time":null,"statement":1401,"subroutine":113,"pod":100}]},"1114":{"read_host":[{"time":null,"condition":14,"branch":94,"pod":62,"subroutine":72,"statement":387}]},"3513":{"order_ranges":[{"pod":113,"statement":1460,"subroutine":126,"time":null,"branch":508,"condition":69}]},"14614":{"generate_routing_tree":[{"branch":1902,"condition":377,"time":null,"statement":6261,"subroutine":322,"pod":280}]},"5829":{"expand_group_in_rule":[{"statement":2516,"subroutine":163,"pod":146,"branch":801,"condition":115,"time":null}]},"4194":{"link_subnet":[{"branch":579,"condition":74,"time":null,"statement":1740,"subroutine":140,"pod":126}]},"12164":{"verify_subject_name":[{"subroutine":279,"statement":5223,"pod":243,"condition":303,"branch":1564,"time":null}]},"30":{"BEGIN":[{"branch":null,"condition":null,"time":null,"statement":3,"subroutine":1,"pod":null}]},"6523":{"collect_log":[{"time":null,"branch":905,"condition":145,"pod":161,"statement":2846,"subroutine":179}]},"15382":{"print_pix_static":[{"pod":288,"statement":6610,"subroutine":331,"time":null,"branch":1979,"condition":406}]},"844":{"add_description":[{"condition":13,"branch":62,"time":null,"subroutine":54,"statement":253,"pod":44}]},"14122":{"collect_nat_path":[{"branch":1842,"condition":365,"time":null,"statement":6044,"subroutine":310,"pod":270}]},"9974":{"find_area_subset_relations":[{"statement":4401,"subroutine":249,"pod":214,"branch":1323,"condition":230,"time":null}]},"4376":{"link_virtual_interfaces":[{"pod":130,"subroutine":145,"statement":1831,"time":null,"condition":75,"branch":603}]},"17682":{"show_version":[{"time":null,"branch":2244,"condition":453,"pod":326,"statement":7737,"subroutine":374}]},"15699":{"add_router_acls":[{"statement":6758,"subroutine":338,"pod":292,"branch":2022,"condition":425,"time":null}]},"2911":{"assign_union_allow_user":[{"time":null,"condition":59,"branch":425,"pod":85,"subroutine":96,"statement":1201}]},"13526":{"mark_secondary":[{"branch":1745,"condition":344,"time":null,"statement":5767,"subroutine":300,"pod":262}]},"5810":{"expand_group":[{"branch":799,"condition":115,"time":null,"statement":2505,"subroutine":162,"pod":145}]},"9669":{"inherit_attributes_from_area":[{"pod":204,"subroutine":239,"statement":4277,"time":null,"condition":227,"branch":1291}]},"10295":{"traverse_loop_part":[{"time":null,"branch":1357,"condition":234,"pod":220,"statement":4546,"subroutine":255}]},"9771":{"cleanup_after_inheritance":[{"branch":1298,"condition":228,"time":null,"statement":4315,"subroutine":242,"pod":207}]},"9619":{"check_useless_nat":[{"pod":202,"subroutine":237,"statement":4260,"time":null,"condition":227,"branch":1287}]},"3876":{"BEGIN":[{"statement":24,"subroutine":8,"pod":null,"branch":null,"condition":null,"time":null}]},"454":{"syntax_err":[{"condition":null,"branch":13,"time":null,"subroutine":28,"statement":99,"pod":18}]},"3132":{"read_ipsec":[{"pod":90,"subroutine":101,"statement":1288,"time":null,"condition":62,"branch":453}]},"3530":{"__ANON__":[{"branch":522,"condition":70,"time":null,"statement":1518,"subroutine":127,"pod":114}]},"4185":{"link_routers":[{"branch":579,"condition":74,"time":null,"statement":1735,"subroutine":139,"pod":125}]},"9160":{"link_aggregates":[{"statement":4068,"subroutine":227,"pod":192,"branch":1223,"condition":212,"time":null}]},"3470":{"order_icmp":[{"statement":1445,"subroutine":124,"pod":111,"branch":505,"condition":68,"time":null}]},"3094":{"read_isakmp":[{"pod":89,"subroutine":100,"statement":1286,"time":null,"condition":62,"branch":453}]},"2464":{"move_locked_interfaces":[{"pod":69,"statement":979,"subroutine":79,"time":null,"branch":345,"condition":46}]},"3016":{"read_attributed_object":[{"subroutine":99,"statement":1256,"pod":88,"condition":62,"branch":444,"time":null}]},"9360":{"set_zone1":[{"time":null,"branch":1246,"condition":214,"pod":196,"statement":4152,"subroutine":231}]},"10766":{"cluster_path_mark1":[{"time":null,"condition":242,"branch":1401,"pod":229,"subroutine":264,"statement":4697}]},"15395":{"__ANON__":[{"time":null,"branch":1987,"condition":411,"pod":289,"statement":6662,"subroutine":332}]},"15443":{"__ANON__":[{"condition":411,"branch":1987,"time":null,"subroutine":333,"statement":6662,"pod":289}]},"9492":{"set_area1":[{"pod":199,"statement":4210,"subroutine":234,"time":null,"branch":1266,"condition":220}]},"10036":{"check_routers_in_nested_areas":[{"time":null,"branch":1330,"condition":230,"pod":215,"statement":4429,"subroutine":250}]},"505":{"skip":[{"pod":22,"statement":117,"subroutine":32,"time":null,"branch":15,"condition":1}]},"6073":{"add_rules":[{"pod":150,"statement":2619,"subroutine":168,"time":null,"branch":832,"condition":119}]},"578":{"read_identifier":[{"statement":148,"subroutine":41,"pod":31,"branch":22,"condition":5,"time":null}]},"6790":{"__ANON__":[{"pod":168,"statement":3041,"subroutine":186,"time":null,"branch":958,"condition":158}]},"3766":{"link_to_owner":[{"branch":525,"condition":70,"time":null,"statement":1538,"subroutine":130,"pod":116}]},"4277":{"link_pathrestrictions":[{"pod":129,"subroutine":144,"statement":1783,"time":null,"condition":74,"branch":588}]},"9682":{"inherit_nat_to_subnets_in_zone":[{"time":null,"branch":1291,"condition":227,"pod":205,"statement":4284,"subroutine":240}]},"5120":{"combine_subnets":[{"pod":139,"statement":2193,"subroutine":154,"time":null,"branch":703,"condition":103}]},"3362":{"is_network":[{"time":null,"condition":65,"branch":488,"pod":97,"subroutine":110,"statement":1398}]},"2896":{"read_typed_name_or_simple_protocol":[{"statement":1194,"subroutine":94,"pod":83,"branch":425,"condition":58,"time":null}]},"16666":{"print_ezvpn":[{"statement":7213,"subroutine":357,"pod":310,"branch":2111,"condition":434,"time":null}]},"13556":{"mark_primary":[{"statement":5785,"subroutine":301,"pod":263,"branch":1752,"condition":344,"time":null}]},"6462":{"show_deleted_rules2":[{"time":null,"condition":145,"branch":898,"pod":159,"subroutine":177,"statement":2810}]},"14307":{"get_route_networks":[{"pod":275,"subroutine":315,"statement":6133,"time":null,"condition":372,"branch":1869}]},"3717":{"order_protocols":[{"condition":70,"branch":524,"time":null,"subroutine":129,"statement":1524,"pod":115}]},"15530":{"print_nat":[{"statement":6691,"subroutine":336,"pod":290,"branch":1992,"condition":415,"time":null}]},"815":{"read_intersection":[{"pod":42,"subroutine":52,"statement":243,"time":null,"condition":13,"branch":60}]},"16752":{"print_crypto_acl":[{"subroutine":358,"statement":7260,"pod":311,"condition":434,"branch":2114,"time":null}]},"16782":{"print_crypto_filter_acl":[{"branch":2117,"condition":434,"time":null,"statement":7276,"subroutine":359,"pod":312}]},"15112":{"print_routes":[{"time":null,"branch":1949,"condition":394,"pod":286,"statement":6482,"subroutine":329}]},"9254":{"duplicate_aggregate_to_cluster":[{"pod":193,"statement":4110,"subroutine":228,"time":null,"branch":1233,"condition":214}]},"7254":{"show_unknown_owners":[{"pod":170,"subroutine":193,"statement":3225,"time":null,"condition":167,"branch":1005}]},"16457":{"print_iptables_acls":[{"time":null,"branch":2092,"condition":428,"pod":306,"statement":7119,"subroutine":353}]},"11874":{"gen_tunnel_rules":[{"pod":239,"subroutine":275,"statement":5094,"time":null,"condition":292,"branch":1527}]},"4248":{"link_subnets":[{"condition":74,"branch":586,"time":null,"subroutine":142,"statement":1766,"pod":127}]},"10599":{"find_dists_and_loops":[{"pod":225,"statement":4643,"subroutine":260,"time":null,"branch":1386,"condition":237}]},"887":{"check_flag":[{"pod":48,"statement":270,"subroutine":58,"time":null,"branch":66,"condition":13}]},"11750":{"path_auto_interfaces":[{"condition":287,"branch":1511,"time":null,"subroutine":272,"statement":5037,"pod":236}]},"9291":{"get_any":[{"subroutine":229,"statement":4122,"pod":194,"condition":214,"branch":1235,"time":null}]},"14545":{"add_end_routes":[{"pod":278,"subroutine":320,"statement":6241,"time":null,"condition":375,"branch":1897}]},"14920":{"__ANON__":[{"statement":6477,"subroutine":327,"pod":285,"branch":1948,"condition":394,"time":null}]},"16064":{"get_split_tunnel_nets":[{"condition":425,"branch":2061,"time":null,"subroutine":348,"statement":6915,"pod":302}]},"11907":{"link_tunnels":[{"subroutine":276,"statement":5107,"pod":240,"condition":294,"branch":1531,"time":null}]},"11711":{"__ANON__":[{"branch":1511,"condition":287,"time":null,"statement":5037,"subroutine":271,"pod":236}]},"13612":{"mark_local_secondary":[{"branch":1766,"condition":344,"time":null,"statement":5821,"subroutine":303,"pod":265}]},"17813":{"init_global_vars":[{"pod":328,"statement":7753,"subroutine":376,"time":null,"branch":2244,"condition":453}]},"1012":{"check_managed":[{"branch":81,"condition":13,"time":null,"statement":337,"subroutine":69,"pod":59}]},"8970":{"link_reroute_permit":[{"branch":1205,"condition":210,"time":null,"statement":3979,"subroutine":222,"pod":188}]},"7648":{"distribute_nat_info":[{"subroutine":200,"statement":3387,"pod":175,"condition":176,"branch":1053,"time":null}]},"2780":{"gen_protocol_name":[{"subroutine":89,"statement":1136,"pod":79,"condition":55,"branch":406,"time":null}]},"9560":{"inherit_router_attributes":[{"statement":4241,"subroutine":235,"pod":200,"branch":1279,"condition":222,"time":null}]},"16411":{"print_acl_prefix":[{"time":null,"branch":2090,"condition":428,"pod":304,"statement":7085,"subroutine":351}]},"12187":{"verify_asa_trustpoint":[{"branch":1569,"condition":304,"time":null,"statement":5239,"subroutine":281,"pod":244}]},"1042":{"check_model":[{"time":null,"branch":85,"condition":13,"pod":60,"statement":348,"subroutine":70}]},"13311":{"check_supernet_rules":[{"subroutine":295,"statement":5679,"pod":258,"condition":334,"branch":1715,"time":null}]},"16851":{"print_tunnel_group":[{"condition":435,"branch":2125,"time":null,"subroutine":361,"statement":7304,"pod":314}]},"870":{"check_nat_name":[{"time":null,"condition":13,"branch":65,"pod":46,"subroutine":56,"statement":264}]},"11571":{"path_walk":[{"time":null,"branch":1493,"condition":274,"pod":234,"statement":4961,"subroutine":269}]},"15104":{"print_header":[{"time":null,"condition":394,"branch":1948,"pod":285,"subroutine":328,"statement":6477}]},"12968":{"check_supernet_dst_collections":[{"statement":5542,"subroutine":291,"pod":254,"branch":1675,"condition":327,"time":null}]},"521":{"read_int":[{"branch":16,"condition":2,"time":null,"statement":123,"subroutine":34,"pod":24}]},"430":{"abort_on_error":[{"time":null,"branch":12,"condition":null,"pod":14,"statement":87,"subroutine":24}]},"16970":{"print_dynamic_crypto_map":[{"branch":2134,"condition":435,"time":null,"statement":7364,"subroutine":364,"pod":317}]},"16648":{"gen_crypto_rules":[{"time":null,"condition":434,"branch":2111,"pod":309,"subroutine":356,"statement":7207}]},"1903":{"read_router":[{"statement":749,"subroutine":78,"pod":68,"branch":253,"condition":27,"time":null}]},"9478":{"zone_eq":[{"time":null,"condition":218,"branch":1266,"pod":198,"subroutine":233,"statement":4208}]},"5924":{"__ANON__":[{"condition":116,"branch":818,"time":null,"subroutine":164,"statement":2557,"pod":147}]},"10939":{"cluster_navigation":[{"time":null,"branch":1425,"condition":244,"pod":230,"statement":4751,"subroutine":265}]},"16805":{"print_crypto_map_attributes":[{"pod":313,"subroutine":360,"statement":7287,"time":null,"condition":434,"branch":2118}]},"12559":{"find_zone_network":[{"pod":249,"statement":5392,"subroutine":286,"time":null,"branch":1612,"condition":311}]},"1847":{"check_no_in_acl":[{"statement":725,"subroutine":77,"pod":67,"branch":244,"condition":27,"time":null}]},"6776":{"set_policy_distribution_ip":[{"time":null,"condition":154,"branch":938,"pod":167,"subroutine":185,"statement":2968}]},"3166":{"read_owner":[{"statement":1305,"subroutine":103,"pod":92,"branch":459,"condition":62,"time":null}]},"11853":{"link_crypto":[{"condition":292,"branch":1525,"time":null,"subroutine":274,"statement":5085,"pod":238}]},"932":{"read_list_or_null":[{"time":null,"condition":13,"branch":72,"pod":51,"subroutine":61,"statement":295}]},"145":{"store_description":[{"pod":null,"statement":30,"subroutine":10,"time":null,"branch":null,"condition":null}]},"2900":{"read_protocol":[{"pod":84,"subroutine":95,"statement":1195,"time":null,"condition":59,"branch":425}]},"7636":{"distribute_nat":[{"statement":3381,"subroutine":199,"pod":174,"branch":1052,"condition":176,"time":null}]},"7698":{"__ANON__":[{"condition":178,"branch":1088,"time":null,"subroutine":201,"statement":3512,"pod":176}]},"13507":{"get_zone2":[{"time":null,"condition":344,"branch":1742,"pod":261,"subroutine":299,"statement":5761}]},"16134":{"__ANON__":[{"subroutine":350,"statement":7085,"pod":304,"condition":428,"branch":2090,"time":null}]},"9789":{"inherit_attributes":[{"pod":208,"statement":4326,"subroutine":243,"time":null,"branch":1302,"condition":228}]},"7234":{"expand_auto_intf":[{"pod":169,"statement":3216,"subroutine":192,"time":null,"branch":1004,"condition":167}]},"483":{"skip_space_and_comment":[{"pod":20,"subroutine":30,"statement":109,"time":null,"condition":null,"branch":15}]},"3372":{"is_chain":[{"branch":488,"condition":65,"time":null,"statement":1408,"subroutine":120,"pod":107}]},"16026":{"ios_route_code":[{"pod":298,"statement":6898,"subroutine":344,"time":null,"branch":2060,"condition":425}]},"3496":{"order_proto":[{"statement":1455,"subroutine":125,"pod":112,"branch":508,"condition":69,"time":null}]},"3962":{"link_general_permit":[{"condition":72,"branch":547,"time":null,"subroutine":135,"statement":1644,"pod":121}]},"13584":{"mark_strict_secondary":[{"pod":264,"subroutine":302,"statement":5803,"time":null,"condition":344,"branch":1759}]},"6503":{"warn_unused_overlaps":[{"pod":160,"statement":2837,"subroutine":178,"time":null,"branch":901,"condition":145}]},"2788":{"__ANON__":[{"condition":58,"branch":416,"time":null,"subroutine":90,"statement":1160,"pod":80}]},"6989":{"__ANON__":[{"time":null,"condition":167,"branch":1004,"pod":169,"subroutine":188,"statement":3216}]},"14248":{"prepare_nat_commands":[{"time":null,"condition":368,"branch":1864,"pod":274,"subroutine":314,"statement":6100}]},"6423":{"collect_redundant_rules":[{"time":null,"branch":890,"condition":141,"pod":158,"statement":2787,"subroutine":176}]},"11835":{"link_ipsec":[{"pod":237,"statement":5077,"subroutine":273,"time":null,"branch":1523,"condition":292}]},"9842":{"cluster_zones":[{"statement":4346,"subroutine":245,"pod":210,"branch":1307,"condition":230,"time":null}]},"9051":{"link_aggregate_to_zone":[{"branch":1212,"condition":210,"time":null,"statement":4012,"subroutine":224,"pod":190}]},"5293":{"expand_group1":[{"pod":143,"subroutine":158,"statement":2271,"time":null,"condition":107,"branch":720}]},"10087":{"clean_areas":[{"branch":1334,"condition":231,"time":null,"statement":4450,"subroutine":251,"pod":216}]},"33":{"BEGIN":[{"condition":null,"branch":null,"time":null,"subroutine":4,"statement":12,"pod":null}]},"954":{"check_assign_pair":[{"branch":74,"condition":13,"time":null,"statement":307,"subroutine":64,"pod":54}]},"15300":{"print_nat1":[{"time":null,"branch":1972,"condition":400,"pod":287,"statement":6578,"subroutine":330}]},"790":{"check_hostname":[{"pod":40,"statement":234,"subroutine":50,"time":null,"branch":57,"condition":13}]},"6558":{"expand_rules":[{"subroutine":182,"statement":2861,"pod":164,"condition":146,"branch":907,"time":null}]},"14141":{"distribute_nat_to_device":[{"pod":271,"statement":6054,"subroutine":311,"time":null,"branch":1846,"condition":365}]},"11505":{"loop_path_walk":[{"subroutine":268,"statement":4946,"pod":233,"condition":268,"branch":1490,"time":null}]},"8923":{"__ANON__":[{"pod":188,"subroutine":221,"statement":3979,"time":null,"condition":210,"branch":1205}]},"8303":{"__ANON__":[{"time":null,"condition":190,"branch":1142,"pod":183,"subroutine":211,"statement":3730}]},"8134":{"by_name":[{"statement":3619,"subroutine":209,"pod":181,"branch":1109,"condition":189,"time":null}]},"975":{"new":[{"subroutine":65,"statement":316,"pod":55,"condition":13,"branch":75,"time":null}]},"3369":{"is_group":[{"subroutine":117,"statement":1405,"pod":104,"condition":65,"branch":488,"time":null}]},"5534":{"__ANON__":[{"subroutine":159,"statement":2492,"pod":144,"condition":115,"branch":797,"time":null}]},"17280":{"print_address":[{"subroutine":367,"statement":7534,"pod":320,"condition":441,"branch":2179,"time":null}]},"12200":{"expand_crypto":[{"pod":245,"subroutine":282,"statement":5244,"time":null,"condition":304,"branch":1571}]},"12653":{"check_supernet_in_zone":[{"time":null,"condition":314,"branch":1622,"pod":251,"subroutine":288,"statement":5432}]},"3366":{"is_subnet":[{"time":null,"branch":488,"condition":65,"pod":101,"statement":1402,"subroutine":114}]},"35":{"BEGIN":[{"subroutine":6,"statement":18,"pod":null,"condition":null,"branch":null,"time":null}]},"4603":{"link_topology":[{"branch":633,"condition":86,"time":null,"statement":1942,"subroutine":148,"pod":133}]},"654":{"check_typed_name":[{"time":null,"branch":30,"condition":6,"pod":36,"statement":180,"subroutine":46}]},"10566":{"set_loop_cluster":[{"subroutine":259,"statement":4635,"pod":224,"condition":237,"branch":1384,"time":null}]},"16881":{"print_ca_and_tunnel_group_map":[{"time":null,"branch":2128,"condition":435,"pod":315,"statement":7321,"subroutine":362}]},"369":{"keys_eq":[{"pod":9,"subroutine":19,"statement":69,"time":null,"condition":null,"branch":7}]},"7029":{"__ANON__":[{"statement":3216,"subroutine":190,"pod":169,"branch":1004,"condition":167,"time":null}]},"5551":{"__ANON__":[{"time":null,"condition":115,"branch":797,"pod":144,"subroutine":160,"statement":2492}]},"7278":{"set_service_owner":[{"branch":1007,"condition":168,"time":null,"statement":3236,"subroutine":194,"pod":171}]},"6708":{"expand_services":[{"subroutine":184,"statement":2935,"pod":166,"condition":154,"branch":930,"time":null}]},"6368":{"show_deleted_rules1":[{"branch":882,"condition":138,"time":null,"statement":2748,"subroutine":175,"pod":157}]},"6357":{"warn_useless_unenforceable":[{"time":null,"branch":879,"condition":138,"pod":156,"statement":2741,"subroutine":174}]},"14577":{"get_route_path":[{"time":null,"condition":376,"branch":1900,"pod":279,"subroutine":321,"statement":6252}]},"13636":{"mark_secondary_rules":[{"pod":266,"subroutine":304,"statement":5839,"time":null,"condition":344,"branch":1773}]},"9916":{"set_areas":[{"branch":1315,"condition":230,"time":null,"statement":4374,"subroutine":248,"pod":213}]},"9891":{"set_area":[{"pod":212,"subroutine":247,"statement":4363,"time":null,"condition":230,"branch":1311}]},"3378":{"print_rule":[{"time":null,"branch":488,"condition":65,"pod":109,"statement":1410,"subroutine":122}]},"2709":{"read_port_ranges":[{"time":null,"branch":392,"condition":53,"pod":76,"statement":1102,"subroutine":86}]},"3347":{"show_read_statistics":[{"pod":96,"subroutine":109,"statement":1388,"time":null,"condition":65,"branch":488}]},"806":{"read_complement":[{"time":null,"condition":13,"branch":59,"pod":41,"subroutine":51,"statement":240}]},"4197":{"__ANON__":[{"time":null,"condition":74,"branch":586,"pod":127,"subroutine":141,"statement":1766}]},"17210":{"print_interface":[{"subroutine":366,"statement":7492,"pod":319,"condition":438,"branch":2166,"time":null}]},"4748":{"mark_disabled":[{"pod":136,"subroutine":151,"statement":2017,"time":null,"condition":88,"branch":651}]},"1803":{"set_pix_interface_level":[{"subroutine":76,"statement":708,"pod":66,"condition":25,"branch":239,"time":null}]},"6533":{"check_log":[{"branch":906,"condition":145,"time":null,"statement":2851,"subroutine":180,"pod":162}]},"16892":{"print_static_crypto_map":[{"pod":316,"statement":7326,"subroutine":363,"time":null,"branch":2128,"condition":435}]},"29":{"BEGIN":[{"pod":null,"statement":null,"subroutine":null,"time":null,"branch":null,"condition":null}]},"336":{"max":[{"pod":6,"subroutine":16,"statement":54,"time":null,"condition":null,"branch":3}]},"10121":{"check_virtual_interfaces":[{"time":null,"condition":231,"branch":1334,"pod":218,"subroutine":253,"statement":4470}]},"566":{"gen_ip":[{"subroutine":39,"statement":144,"pod":29,"condition":5,"branch":22,"time":null}]},"16503":{"print_cisco_acls":[{"statement":7141,"subroutine":354,"pod":307,"branch":2093,"condition":428,"time":null}]},"12168":{"__ANON__":[{"subroutine":280,"statement":5239,"pod":244,"condition":304,"branch":1569,"time":null}]},"9347":{"get_cluster_aggregates":[{"statement":4147,"subroutine":230,"pod":195,"branch":1245,"condition":214,"time":null}]},"11377":{"path_mark":[{"statement":4910,"subroutine":267,"pod":232,"branch":1477,"condition":266,"time":null}]},"10338":{"apply_pathrestriction_optimization":[{"pod":221,"statement":4563,"subroutine":256,"time":null,"branch":1365,"condition":234}]},"3408":{"prepare_prt_ordering":[{"subroutine":123,"statement":1422,"pod":110,"condition":67,"branch":494,"time":null}]},"10687":{"get_path":[{"time":null,"branch":1392,"condition":238,"pod":228,"statement":4677,"subroutine":263}]},"17539":{"print_code":[{"branch":2223,"condition":452,"time":null,"statement":7659,"subroutine":371,"pod":324}]},"16044":{"full_prefix_code":[{"statement":6908,"subroutine":346,"pod":300,"branch":2061,"condition":425,"time":null}]},"4068":{"link_interfaces":[{"time":null,"condition":74,"branch":563,"pod":123,"subroutine":137,"statement":1695}]},"5955":{"expand_protocols":[{"condition":116,"branch":822,"time":null,"subroutine":166,"statement":2572,"pod":148}]},"15819":{"distribute_rules":[{"pod":293,"subroutine":339,"statement":6805,"time":null,"condition":425,"branch":2033}]},"7945":{"__ANON__":[{"pod":177,"statement":3554,"subroutine":203,"time":null,"branch":1093,"condition":181}]},"2921":{"read_service":[{"pod":86,"subroutine":97,"statement":1208,"time":null,"condition":59,"branch":425}]},"12132":{"verify_asa_vpn_attributes":[{"subroutine":278,"statement":5209,"pod":242,"condition":303,"branch":1555,"time":null}]},"2840":{"read_simple_protocol":[{"subroutine":92,"statement":1168,"pod":81,"condition":58,"branch":417,"time":null}]},"17690":{"init_protocols":[{"statement":7739,"subroutine":375,"pod":327,"branch":2244,"condition":453,"time":null}]},"6229":{"add_managed_hosts":[{"time":null,"condition":127,"branch":854,"pod":153,"subroutine":171,"statement":2691}]},"3367":{"is_area":[{"time":null,"branch":488,"condition":65,"pod":102,"statement":1403,"subroutine":115}]},"3231":{"read_netspoc":[{"statement":1328,"subroutine":104,"pod":93,"branch":472,"condition":63,"time":null}]},"600":{"read_name":[{"subroutine":43,"statement":156,"pod":33,"condition":5,"branch":24,"time":null}]},"9744":{"inherit_nat_in_zone":[{"statement":4305,"subroutine":241,"pod":206,"branch":1297,"condition":228,"time":null}]},"378":{"warn_msg":[{"pod":10,"subroutine":20,"statement":74,"time":null,"condition":null,"branch":9}]},"8691":{"check_crosslink":[{"time":null,"branch":1172,"condition":203,"pod":185,"statement":3841,"subroutine":216}]},"400":{"context":[{"condition":null,"branch":9,"time":null,"subroutine":21,"statement":76,"pod":11}]},"2672":{"read_protocolgroup":[{"pod":74,"statement":1084,"subroutine":84,"time":null,"branch":383,"condition":52}]},"4910":{"convert_hosts":[{"subroutine":153,"statement":2097,"pod":138,"condition":91,"branch":672,"time":null}]},"916":{"read_list":[{"condition":13,"branch":69,"time":null,"subroutine":60,"statement":286,"pod":50}]},"16444":{"print_acl_suffix":[{"statement":7109,"subroutine":352,"pod":305,"branch":2091,"condition":428,"time":null}]},"9601":{"nat_equal":[{"statement":4254,"subroutine":236,"pod":201,"branch":1284,"condition":226,"time":null}]},"13465":{"gen_reverse_rules":[{"pod":260,"subroutine":298,"statement":5750,"time":null,"condition":344,"branch":1741}]},"2595":{"read_area":[{"pod":72,"statement":1043,"subroutine":82,"time":null,"branch":365,"condition":47}]}}}