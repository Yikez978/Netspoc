#!/usr/bin/perl

use strict;
use Test::More;
use Test::Differences;
use lib 't';
use Test_Netspoc;

my ($title, $in, $out);

my $topo = <<'END';
network:top = { ip = 10.1.1.0/24;}

router:r1 = {
 managed;
 model = IOS, FW;
 routing = manual;
 interface:top = { ip = 10.1.1.1; hardware = Vlan1; }
 interface:lft = { ip = 10.3.1.245; hardware = Ethernet1; }
 interface:dst = { ip = 10.1.2.1; hardware = Vlan2; }
}
network:lft = { ip = 10.3.1.244/30;}

router:r2 = {
 managed;
 model = IOS, FW;
 routing = manual;
 interface:top = { ip = 10.1.1.2; hardware = Vlan3; }
 interface:rgt = { ip = 10.3.1.129; hardware = Ethernet3; }
 interface:dst = { ip = 10.1.2.2; hardware = Vlan4; }
}
network:rgt = { ip = 10.3.1.128/30;}

network:dst = { ip = 10.1.2.0/24;}
END

############################################################
$title = 'Simple duplicate pathrestriction';
############################################################

$in = <<"END";
$topo
pathrestriction:top = 
 interface:r1.top, 
 interface:r2.top, 
;

pathrestriction:dst = 
 interface:r1.dst, 
 interface:r2.dst, 
;

service:test = {
 user = network:lft;
 permit src = user;
        dst = network:rgt;
        prt = tcp 80;
}
END

$out = <<END;
Error: No valid path
 from any:[network:lft]
 to any:[network:rgt]
 for rule -- src=any:[network:lft]; dst=any:[network:rgt]; prt=--;
 Check path restrictions and crypto interfaces.
Error: No valid path
 from any:[network:lft]
 to any:[network:rgt]
 for rule permit src=network:lft; dst=network:rgt; prt=tcp 80; of service:test
 Check path restrictions and crypto interfaces.
END

test_err($title, $in, $out);

############################################################
$title = 'Path starts at pathrestriction inside loop';
############################################################

$in = <<END;
$topo
pathrestriction:lft = 
 interface:r1.lft, 
 interface:r2.top, 
;

service:test = {
 user = network:lft;
 permit src = user;
        dst = network:rgt;
        prt = ip;
}
END

$out = <<END;
-- r1
ip access-list extended Ethernet1_in
 permit ip 10.3.1.244 0.0.0.3 10.3.1.128 0.0.0.3
 deny ip any any
-- r2
ip access-list extended Vlan3_in
 deny ip any any
ip access-list extended Ethernet3_in
 deny ip any any
ip access-list extended Vlan4_in
 deny ip any host 10.3.1.129
 permit ip 10.3.1.244 0.0.0.3 10.3.1.128 0.0.0.3
 deny ip any any
END

test_run($title, $in, $out);

############################################################
$title = 'Pathrestriction at border of nested loop';
############################################################

$in = <<END;
END

$out = <<END;
END

test_run($title, $in, $out);

############################################################
$title = 'Valid pathrestriction at unmanged router';
############################################################

$in = <<END;
END

test_err($title, $in, '');

############################################################
$title = 'Useless pathrestriction at unmanged router';
############################################################

$in =~ s/managed/#managed/;

$out = <<END;
END

test_err($title, $in, $out);

############################################################
done_testing;
