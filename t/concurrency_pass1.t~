#!perl

use strict;
use warnings;
use Test::More;
use Test::Differences;
use lib 't';
use Test_Netspoc;

my ($title, $in, $out, $topo);

############################################################
$title = 'Simple concurrency';
############################################################

$in = <<'END';
network:n1 = { ip = 10.1.1.0/24; host:h1 = { ip = 10.1.1.10; } }
network:n2 = { ip = 10.1.2.0/24; }

router:asa1 = {
 managed;
 model = ASA;
 interface:n1 = { ip = 10.1.1.1; hardware = n1; }
 interface:n2 = { ip = 10.1.2.1; hardware = n2; }
}

service:s1 = {
 user = host:h1;
 permit src = user; dst = network:n2; prt = tcp 22;
}
END

# No errors expected.
$out = <<'END';
-- asa1
! [ ACL ]
access-list n1_in extended permit tcp host 10.1.1.10 10.1.2.0 255.255.255.0 eq 22
access-list n1_in extended deny ip any any
access-group n1_in in interface n1
END

test_run($title, $in, $out, '--concurrency_pass1=2');

############################################################
$title = 'Warning from background job';
############################################################

$in = <<'END';
network:n1 = { ip = 10.1.1.0/24; host:h1 = { ip = 10.1.1.10; } }
network:n2 = { ip = 10.1.2.0/24; }

router:asa1 = {
 managed;
 model = ASA;
 policy_distribution_point = host:h1;
 interface:n1 = { ip = 10.1.1.1; hardware = vlan1; }
 interface:n2 = { ip = 10.1.2.1; hardware = vlan2; }
}
END

# Output is indented
$out = <<'END';
 Warning: Missing rules to reach 1 devices from policy_distribution_point:
  - router:asa1
END

test_err($title, $in, $out, '--concurrency_pass1=2');

############################################################
done_testing;
